2019-07-17 02:30:50 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5124491045145714946
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 99
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 02:30:52 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 02:30:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 6
Fitness: max 0.16666666666666666(5), min 0.0(1), ave 0.13888888888888887
----------------------------------------------------------------

2019-07-17 02:30:56 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 02:31:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 8
Fitness: max 0.16666666666666666(7), min 0.0(1), ave 0.14583333333333331
----------------------------------------------------------------

2019-07-17 02:31:00 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 02:31:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 10
Fitness: max 0.16666666666666666(10), min 0.16666666666666666(10), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-17 02:31:03 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 02:31:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 9
Fitness: max 0.16666666666666666(6), min 0.0(3), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-17 02:31:06 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 02:31:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 12
Fitness: max 0.16666666666666666(10), min 0.0(2), ave 0.13888888888888887
----------------------------------------------------------------

2019-07-17 02:31:10 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 02:31:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 8
Fitness: max 0.16666666666666666(6), min 0.0(2), ave 0.125
----------------------------------------------------------------

2019-07-17 02:31:13 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 02:31:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 104, syntax-valid 74, build-succeeded 10
Fitness: max 0.3333333333333333(1), min 0.0(4), ave 0.11666666666666665
----------------------------------------------------------------

2019-07-17 02:31:17 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 02:31:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 112, syntax-valid 66, build-succeeded 9
Fitness: max 0.16666666666666666(6), min 0.0(3), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-17 02:31:20 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 02:31:23 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 02:31:23 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -8,13 +8,18 @@
 		int x, y;
 		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		int res = 1;
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		// if(subList == null) { //bug here
 		// 	return -1;
 		// }
+		res *= a;
 
 		int sum = 0;
+		if (subList == null) {
+			return -1;
+		}
 		for(int i : subList) {
 			if(i >= l && i <= h) {
 				sum += sample.fact(i);
2019-07-17 02:31:23 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -8,9 +8,6 @@
 	
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
-			res *= a;
-		}
 		return res;
 	}
 	
2019-07-17 02:31:24 [main] [INFO]  KGenProgMain - execution time: 31 seconds
