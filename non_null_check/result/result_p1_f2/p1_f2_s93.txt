2019-07-17 02:26:28 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2615443388978680855
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 93
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 02:26:30 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 02:26:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 9
Fitness: max 0.16666666666666666(8), min 0.0(1), ave 0.14814814814814814
----------------------------------------------------------------

2019-07-17 02:26:33 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 02:26:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 13
Fitness: max 0.16666666666666666(12), min 0.0(1), ave 0.15384615384615385
----------------------------------------------------------------

2019-07-17 02:26:36 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 02:26:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 7
Fitness: max 0.16666666666666666(6), min 0.0(1), ave 0.14285714285714285
----------------------------------------------------------------

2019-07-17 02:26:38 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 02:26:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 6
Fitness: max 0.16666666666666666(4), min 0.0(2), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-17 02:26:40 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 02:26:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 70, build-succeeded 10
Fitness: max 0.8333333333333334(1), min 0.16666666666666666(9), ave 0.2333333333333333
----------------------------------------------------------------

2019-07-17 02:26:43 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 02:26:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 10
Fitness: max 0.8333333333333334(3), min 0.0(2), ave 0.33333333333333337
----------------------------------------------------------------

2019-07-17 02:26:46 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 02:26:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 108, syntax-valid 78, build-succeeded 12
Fitness: max 0.8333333333333334(2), min 0.0(1), ave 0.2638888888888889
----------------------------------------------------------------

2019-07-17 02:26:49 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 02:26:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 114, syntax-valid 73, build-succeeded 13
Fitness: max 0.8333333333333334(2), min 0.0(3), ave 0.23076923076923078
----------------------------------------------------------------

2019-07-17 02:26:52 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 02:26:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 126, syntax-valid 83, build-succeeded 22
Fitness: max 0.8333333333333334(2), min 0.0(1), ave 0.2196969696969697
----------------------------------------------------------------

2019-07-17 02:26:54 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 02:26:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 134, syntax-valid 75, build-succeeded 19
Fitness: max 0.8333333333333334(4), min 0.16666666666666666(15), ave 0.30701754385964913
----------------------------------------------------------------

2019-07-17 02:26:57 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 02:27:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 142, syntax-valid 83, build-succeeded 22
Fitness: max 0.8333333333333334(2), min 0.0(3), ave 0.20454545454545456
----------------------------------------------------------------

2019-07-17 02:27:00 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 02:27:02 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 02:27:02 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -16,11 +16,11 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(i);
-			}
+			if(i >= l && i <= h)
+				x = sample.pow(a) % list.size();
+			return sum;
 		}
-		return sum;
+		return -1;
 	}
 
 	public int resource() {
2019-07-17 02:27:02 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -9,7 +9,6 @@
 	public int pow(int a, int n) {
 		int res = 1;
 		for(int i = 0; i < n; i++) {
-			res *= a;
 		}
 		return res;
 	}
@@ -25,7 +24,6 @@
 	
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
 		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
2019-07-17 02:27:03 [main] [INFO]  KGenProgMain - execution time: 32 seconds
