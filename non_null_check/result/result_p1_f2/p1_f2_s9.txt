2019-07-17 01:08:32 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2633549359341629000
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 9
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 01:08:34 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 01:08:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 13
Fitness: max 0.16666666666666666(9), min 0.0(4), ave 0.11538461538461539
----------------------------------------------------------------

2019-07-17 01:08:38 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 01:08:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 8
Fitness: max 0.16666666666666666(6), min 0.0(2), ave 0.125
----------------------------------------------------------------

2019-07-17 01:08:40 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 01:08:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 77, build-succeeded 8
Fitness: max 0.16666666666666666(6), min 0.0(2), ave 0.125
----------------------------------------------------------------

2019-07-17 01:08:43 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 01:08:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 9
Fitness: max 0.16666666666666666(6), min 0.0(3), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-17 01:08:46 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 01:08:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 15
Fitness: max 0.16666666666666666(10), min 0.0(5), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-17 01:08:47 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 01:08:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 104, syntax-valid 80, build-succeeded 16
Fitness: max 0.16666666666666666(11), min 0.0(5), ave 0.11458333333333333
----------------------------------------------------------------

2019-07-17 01:08:49 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 01:08:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 116, syntax-valid 72, build-succeeded 12
Fitness: max 0.8333333333333334(1), min 0.0(3), ave 0.18055555555555555
----------------------------------------------------------------

2019-07-17 01:08:52 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 01:08:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 122, syntax-valid 83, build-succeeded 25
Fitness: max 0.16666666666666666(19), min 0.0(6), ave 0.12666666666666665
----------------------------------------------------------------

2019-07-17 01:08:55 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 01:08:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 132, syntax-valid 93, build-succeeded 23
Fitness: max 0.8333333333333334(2), min 0.0(1), ave 0.21739130434782608
----------------------------------------------------------------

2019-07-17 01:08:57 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 01:09:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 140, syntax-valid 92, build-succeeded 24
Fitness: max 0.8333333333333334(3), min 0.16666666666666666(21), ave 0.25
----------------------------------------------------------------

2019-07-17 01:09:00 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 01:09:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 162, syntax-valid 95, build-succeeded 29
Fitness: max 0.8333333333333334(2), min 0.0(4), ave 0.1896551724137931
----------------------------------------------------------------

2019-07-17 01:09:04 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 01:09:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 158, syntax-valid 90, build-succeeded 30
Fitness: max 0.16666666666666666(28), min 0.0(2), ave 0.15555555555555553
----------------------------------------------------------------

2019-07-17 01:09:07 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 01:09:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 154, syntax-valid 90, build-succeeded 33
Fitness: max 0.8333333333333334(4), min 0.0(4), ave 0.22727272727272727
----------------------------------------------------------------

2019-07-17 01:09:09 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2019-07-17 01:09:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 144, syntax-valid 85, build-succeeded 21
Fitness: max 0.8333333333333334(5), min 0.0(1), ave 0.3174603174603175
----------------------------------------------------------------

2019-07-17 01:09:12 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2019-07-17 01:09:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 seconds
Variants: generated 162, syntax-valid 85, build-succeeded 15
Fitness: max 0.8333333333333334(6), min 0.0(1), ave 0.4222222222222222
----------------------------------------------------------------

2019-07-17 01:09:15 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2019-07-17 01:09:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 seconds
Variants: generated 154, syntax-valid 96, build-succeeded 34
Fitness: max 0.8333333333333334(8), min 0.0(3), ave 0.3088235294117647
----------------------------------------------------------------

2019-07-17 01:09:17 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2019-07-17 01:09:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 seconds
Variants: generated 160, syntax-valid 89, build-succeeded 27
Fitness: max 0.8333333333333334(12), min 0.0(3), ave 0.4444444444444444
----------------------------------------------------------------

2019-07-17 01:09:20 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2019-07-17 01:09:22 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 01:09:22 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a) % list.size();
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
@@ -15,12 +16,9 @@
 		// }
 
 		int sum = 0;
-		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(i);
-			}
-		}
-		return sum;
+		for(int i : subList)
+			return 0;
+		return -1;
 	}
 
 	public int resource() {
2019-07-17 01:09:22 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -9,7 +9,6 @@
 	public int pow(int a, int n) {
 		int res = 1;
 		for(int i = 0; i < n; i++) {
-			res *= a;
 		}
 		return res;
 	}
@@ -25,7 +24,7 @@
 	
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
 		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
+			int res = 1;
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
2019-07-17 01:09:23 [main] [INFO]  KGenProgMain - execution time: 48 seconds
