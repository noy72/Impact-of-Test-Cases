2019-07-17 02:07:43 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2308740687711822475
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 73
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 02:07:45 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 02:07:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 12
Fitness: max 0.16666666666666666(7), min 0.0(5), ave 0.09722222222222221
----------------------------------------------------------------

2019-07-17 02:07:48 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 02:07:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 6
Fitness: max 0.16666666666666666(3), min 0.0(3), ave 0.08333333333333333
----------------------------------------------------------------

2019-07-17 02:07:51 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 02:07:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 16
Fitness: max 0.16666666666666666(11), min 0.0(5), ave 0.11458333333333333
----------------------------------------------------------------

2019-07-17 02:07:54 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 02:07:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 79, build-succeeded 12
Fitness: max 0.8333333333333334(2), min 0.0(2), ave 0.25
----------------------------------------------------------------

2019-07-17 02:07:56 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 02:07:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 104, syntax-valid 78, build-succeeded 14
Fitness: max 0.8333333333333334(4), min 0.0(1), ave 0.34523809523809523
----------------------------------------------------------------

2019-07-17 02:07:59 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 02:08:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 118, syntax-valid 86, build-succeeded 14
Fitness: max 0.8333333333333334(1), min 0.0(3), ave 0.17857142857142858
----------------------------------------------------------------

2019-07-17 02:08:01 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 02:08:04 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 02:08:04 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -4,6 +4,7 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		int x, y;
 		x = sample.pow(a) % list.size();
@@ -15,11 +16,11 @@
 		// }
 
 		int sum = 0;
-		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(i);
-			}
+		if (subList == null) {
+			return -1;
 		}
+		for(int i : subList)
+			y = sample.pow(a, n) % list.size();
 		return sum;
 	}
 
2019-07-17 02:08:04 [main] [INFO]  KGenProgMain - execution time: 18 seconds
