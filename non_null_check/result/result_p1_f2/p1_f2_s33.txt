2019-07-17 01:28:36 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5276292700820284502
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 33
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 01:28:38 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 01:28:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 8
Fitness: max 0.16666666666666666(6), min 0.0(2), ave 0.125
----------------------------------------------------------------

2019-07-17 01:28:41 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 01:28:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 10
Fitness: max 0.16666666666666666(9), min 0.0(1), ave 0.15
----------------------------------------------------------------

2019-07-17 01:28:44 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 01:28:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 10
Fitness: max 0.16666666666666666(7), min 0.0(3), ave 0.11666666666666665
----------------------------------------------------------------

2019-07-17 01:28:47 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 01:28:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 11
Fitness: max 0.16666666666666666(10), min 0.0(1), ave 0.1515151515151515
----------------------------------------------------------------

2019-07-17 01:28:50 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 01:28:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 4
Fitness: max 0.16666666666666666(3), min 0.0(1), ave 0.125
----------------------------------------------------------------

2019-07-17 01:28:52 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 01:28:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 104, syntax-valid 69, build-succeeded 12
Fitness: max 0.16666666666666666(7), min 0.0(5), ave 0.09722222222222221
----------------------------------------------------------------

2019-07-17 01:28:54 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 01:28:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 110, syntax-valid 76, build-succeeded 12
Fitness: max 0.16666666666666666(8), min 0.0(4), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-17 01:28:56 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 01:28:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 108, syntax-valid 72, build-succeeded 12
Fitness: max 0.16666666666666666(8), min 0.0(4), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-17 01:28:59 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 01:29:02 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 01:29:02 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -15,6 +15,9 @@
 		// }
 
 		int sum = 0;
+		if (subList == null) {
+			return -1;
+		}
 		for(int i : subList) {
 			if(i >= l && i <= h) {
 				sum += sample.fact(i);
2019-07-17 01:29:02 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -9,7 +9,7 @@
 	public int pow(int a, int n) {
 		int res = 1;
 		for(int i = 0; i < n; i++) {
-			res *= a;
+			ArrayList<Integer> subList=new ArrayList<>();
 		}
 		return res;
 	}
2019-07-17 01:29:02 [main] [INFO]  KGenProgMain - execution time: 24 seconds
