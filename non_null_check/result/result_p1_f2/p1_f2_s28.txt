2019-07-17 01:24:09 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work4602775720552777182
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 28
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 01:24:11 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 01:24:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 6
Fitness: max 0.16666666666666666(4), min 0.0(2), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-17 01:24:14 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 01:24:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 14
Fitness: max 0.16666666666666666(7), min 0.0(7), ave 0.08333333333333333
----------------------------------------------------------------

2019-07-17 01:24:16 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 01:24:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 13
Fitness: max 0.16666666666666666(9), min 0.0(4), ave 0.11538461538461539
----------------------------------------------------------------

2019-07-17 01:24:19 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 01:24:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 79, build-succeeded 7
Fitness: max 0.16666666666666666(2), min 0.0(5), ave 0.047619047619047616
----------------------------------------------------------------

2019-07-17 01:24:22 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 01:24:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 102, syntax-valid 76, build-succeeded 14
Fitness: max 0.16666666666666666(8), min 0.0(6), ave 0.09523809523809523
----------------------------------------------------------------

2019-07-17 01:24:25 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 01:24:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 108, syntax-valid 83, build-succeeded 15
Fitness: max 0.16666666666666666(8), min 0.0(7), ave 0.08888888888888888
----------------------------------------------------------------

2019-07-17 01:24:28 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 01:24:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 116, syntax-valid 77, build-succeeded 16
Fitness: max 0.16666666666666666(9), min 0.0(7), ave 0.09375
----------------------------------------------------------------

2019-07-17 01:24:30 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 01:24:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 130, syntax-valid 87, build-succeeded 22
Fitness: max 0.8333333333333334(1), min 0.0(9), ave 0.12878787878787878
----------------------------------------------------------------

2019-07-17 01:24:33 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 01:24:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 148, syntax-valid 96, build-succeeded 32
Fitness: max 0.16666666666666666(20), min 0.0(12), ave 0.10416666666666666
----------------------------------------------------------------

2019-07-17 01:24:36 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 01:24:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 144, syntax-valid 86, build-succeeded 22
Fitness: max 0.16666666666666666(17), min 0.0(5), ave 0.12878787878787878
----------------------------------------------------------------

2019-07-17 01:24:39 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 01:24:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 168, syntax-valid 86, build-succeeded 19
Fitness: max 0.16666666666666666(13), min 0.0(6), ave 0.11403508771929824
----------------------------------------------------------------

2019-07-17 01:24:41 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 01:24:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 158, syntax-valid 92, build-succeeded 25
Fitness: max 0.8333333333333334(2), min 0.0(4), ave 0.19333333333333333
----------------------------------------------------------------

2019-07-17 01:24:44 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 01:24:48 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 01:24:48 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -13,13 +13,13 @@
 		// if(subList == null) { //bug here
 		// 	return -1;
 		// }
+		if (subList == null) {
+			return -1;
+		}
 
 		int sum = 0;
-		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(i);
-			}
-		}
+		for(int i : subList)
+			x = sample.pow(a) % list.size();
 		return sum;
 	}
 
2019-07-17 01:24:48 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -9,7 +9,6 @@
 	public int pow(int a, int n) {
 		int res = 1;
 		for(int i = 0; i < n; i++) {
-			res *= a;
 		}
 		return res;
 	}
2019-07-17 01:24:49 [main] [INFO]  KGenProgMain - execution time: 37 seconds
