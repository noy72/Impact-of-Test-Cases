2019-07-17 01:58:56 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work519388251959683597
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 63
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 01:58:58 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 01:59:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 52, build-succeeded 6
Fitness: max 0.16666666666666666(2), min 0.0(4), ave 0.05555555555555555
----------------------------------------------------------------

2019-07-17 01:59:00 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 01:59:02 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 01:59:03 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -15,6 +15,9 @@
 		// }
 
 		int sum = 0;
+		if (subList == null) {
+			return -1;
+		}
 		for(int i : subList) {
 			if(i >= l && i <= h) {
 				sum += sample.fact(i);
2019-07-17 01:59:03 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -9,7 +9,6 @@
 	public int pow(int a, int n) {
 		int res = 1;
 		for(int i = 0; i < n; i++) {
-			res *= a;
 		}
 		return res;
 	}
2019-07-17 01:59:03 [main] [INFO]  KGenProgMain - execution time: 5 seconds
