2019-07-17 04:47:59 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5925789912998189594
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 95
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 04:48:01 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 04:48:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 10
Fitness: max 0.09090909090909091(8), min 0.0(2), ave 0.07272727272727272
----------------------------------------------------------------

2019-07-17 04:48:04 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 04:48:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 77, build-succeeded 14
Fitness: max 0.8181818181818182(1), min 0.0(3), ave 0.12337662337662338
----------------------------------------------------------------

2019-07-17 04:48:07 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 04:48:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 6
Fitness: max 0.7272727272727273(1), min 0.0(2), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-17 04:48:10 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 04:48:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 10
Fitness: max 0.8181818181818182(2), min 0.0(2), ave 0.21818181818181817
----------------------------------------------------------------

2019-07-17 04:48:12 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 04:48:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 10
Fitness: max 0.8181818181818182(1), min 0.0(3), ave 0.13636363636363638
----------------------------------------------------------------

2019-07-17 04:48:15 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 04:48:18 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 04:48:18 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -15,6 +15,9 @@
 		// }
 
 		int sum = 0;
+		if (subList == null) {
+			return -1;
+		}
 		for(int i : subList) {
 			if(i >= l && i <= h) {
 				sum += sample.fact(i);
2019-07-17 04:48:18 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -8,9 +8,8 @@
 	
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
+		for(int i = 0; i < n; i++)
 			res *= a;
-		}
 		return res;
 	}
 	
@@ -29,9 +28,8 @@
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
-		for(; l < r; l++) {
-			res.add(list.get(l));
-		}
+		for(; l < r; l++)
+			return res;
 		return res;
 	}
 }
2019-07-17 04:48:18 [main] [INFO]  KGenProgMain - execution time: 17 seconds
