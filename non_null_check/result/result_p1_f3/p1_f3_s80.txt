2019-07-17 04:22:36 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work4164808715298049188
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 80
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 04:22:38 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 04:22:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 9
Fitness: max 0.09090909090909091(4), min 0.0(5), ave 0.04040404040404041
----------------------------------------------------------------

2019-07-17 04:22:42 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 04:22:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 9
Fitness: max 0.09090909090909091(7), min 0.0(2), ave 0.0707070707070707
----------------------------------------------------------------

2019-07-17 04:22:44 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 04:22:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 17
Fitness: max 0.09090909090909091(8), min 0.0(9), ave 0.04278074866310161
----------------------------------------------------------------

2019-07-17 04:22:47 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 04:22:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 79, build-succeeded 13
Fitness: max 0.09090909090909091(10), min 0.0(3), ave 0.06993006993006994
----------------------------------------------------------------

2019-07-17 04:22:50 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 04:22:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 77, build-succeeded 11
Fitness: max 0.09090909090909091(7), min 0.0(4), ave 0.05785123966942149
----------------------------------------------------------------

2019-07-17 04:22:52 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 04:22:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 106, syntax-valid 75, build-succeeded 9
Fitness: max 0.9090909090909091(1), min 0.0(1), ave 0.1717171717171717
----------------------------------------------------------------

2019-07-17 04:22:56 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 04:22:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 120, syntax-valid 84, build-succeeded 24
Fitness: max 0.09090909090909091(12), min 0.0(12), ave 0.04545454545454545
----------------------------------------------------------------

2019-07-17 04:22:59 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 04:23:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 114, syntax-valid 82, build-succeeded 10
Fitness: max 0.09090909090909091(6), min 0.0(4), ave 0.05454545454545454
----------------------------------------------------------------

2019-07-17 04:23:02 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 04:23:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 142, syntax-valid 85, build-succeeded 26
Fitness: max 0.9090909090909091(3), min 0.0(8), ave 0.15734265734265734
----------------------------------------------------------------

2019-07-17 04:23:05 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 04:23:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 142, syntax-valid 92, build-succeeded 25
Fitness: max 0.9090909090909091(4), min 0.0(6), ave 0.20727272727272728
----------------------------------------------------------------

2019-07-17 04:23:08 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 04:23:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 162, syntax-valid 104, build-succeeded 44
Fitness: max 0.9090909090909091(4), min 0.0(7), ave 0.1652892561983471
----------------------------------------------------------------

2019-07-17 04:23:11 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 04:23:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 168, syntax-valid 97, build-succeeded 35
Fitness: max 0.9090909090909091(3), min 0.0(6), ave 0.16623376623376623
----------------------------------------------------------------

2019-07-17 04:23:14 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 04:23:17 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 04:23:17 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		// if(subList == null) { //bug here
@@ -15,6 +16,9 @@
 		// }
 
 		int sum = 0;
+		if (subList == null) {
+			return -1;
+		}
 		for(int i : subList) {
 			if(i >= l && i <= h) {
 				sum += sample.fact(i);
2019-07-17 04:23:17 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -19,7 +19,7 @@
 		for(int i = 1; i <= n; i++) {
 			res *= i;
 		}
-		return res;
+		return 0;
 	}
 
 	
2019-07-17 04:23:17 [main] [INFO]  KGenProgMain - execution time: 39 seconds
