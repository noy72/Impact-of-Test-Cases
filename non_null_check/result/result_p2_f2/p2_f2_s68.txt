2019-07-17 07:53:39 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5538915166549860131
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 68
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 07:53:40 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 07:53:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 8
Fitness: max 0.5(4), min 0.0(1), ave 0.2875
----------------------------------------------------------------

2019-07-17 07:53:42 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 07:53:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 80, build-succeeded 6
Fitness: max 0.5(1), min 0.0(4), ave 0.09999999999999999
----------------------------------------------------------------

2019-07-17 07:53:43 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 07:53:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 12
Fitness: max 0.5(2), min 0.0(2), ave 0.225
----------------------------------------------------------------

2019-07-17 07:53:44 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 07:53:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 8
Fitness: max 0.5(2), min 0.0(3), ave 0.1625
----------------------------------------------------------------

2019-07-17 07:53:46 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 07:53:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 104, syntax-valid 80, build-succeeded 9
Fitness: max 0.5(3), min 0.0(3), ave 0.23333333333333334
----------------------------------------------------------------

2019-07-17 07:53:47 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 07:53:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 102, syntax-valid 61, build-succeeded 8
Fitness: max 0.5(2), min 0.0(2), ave 0.2875
----------------------------------------------------------------

2019-07-17 07:53:48 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 07:53:49 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 07:53:49 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -8,11 +8,15 @@
 		int x, y;
 		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		// if(subList == null) { //bug here
 		// 	return -1;
 		// }
+		if (subList == null) {
+			return -1;
+		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-17 07:53:49 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -8,6 +8,7 @@
 	
 	public int pow(int a, int n) {
 		int res = 1;
+		Class2 sample = new Class2();
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-17 07:53:49 [main] [INFO]  KGenProgMain - execution time: 9 seconds
