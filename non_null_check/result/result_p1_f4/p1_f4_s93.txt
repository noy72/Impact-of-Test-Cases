2019-07-17 06:49:41 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5060955847769682914
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 93
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-17 06:49:42 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 06:49:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 10
Fitness: max 0.047619047619047616(9), min 0.0(1), ave 0.04285714285714286
----------------------------------------------------------------

2019-07-17 06:49:44 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 06:49:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 9
Fitness: max 0.047619047619047616(8), min 0.0(1), ave 0.042328042328042326
----------------------------------------------------------------

2019-07-17 06:49:46 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 06:49:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 10
Fitness: max 0.047619047619047616(7), min 0.0(3), ave 0.03333333333333333
----------------------------------------------------------------

2019-07-17 06:49:47 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 06:49:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 11
Fitness: max 0.047619047619047616(9), min 0.0(2), ave 0.03896103896103896
----------------------------------------------------------------

2019-07-17 06:49:49 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 06:49:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 11
Fitness: max 0.9523809523809523(1), min 0.0(2), ave 0.1212121212121212
----------------------------------------------------------------

2019-07-17 06:49:50 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 06:49:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 108, syntax-valid 84, build-succeeded 16
Fitness: max 0.9523809523809523(3), min 0.0(5), ave 0.20238095238095238
----------------------------------------------------------------

2019-07-17 06:49:52 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 06:49:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 112, syntax-valid 78, build-succeeded 18
Fitness: max 0.9523809523809523(3), min 0.0(4), ave 0.18783068783068782
----------------------------------------------------------------

2019-07-17 06:49:53 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 06:49:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 136, syntax-valid 84, build-succeeded 22
Fitness: max 0.9523809523809523(5), min 0.0(4), ave 0.2510822510822511
----------------------------------------------------------------

2019-07-17 06:49:55 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 06:49:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 138, syntax-valid 99, build-succeeded 32
Fitness: max 0.9523809523809523(6), min 0.0(1), ave 0.2157738095238095
----------------------------------------------------------------

2019-07-17 06:49:57 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 06:49:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 146, syntax-valid 98, build-succeeded 35
Fitness: max 0.9523809523809523(8), min 0.047619047619047616(24), ave 0.2666666666666666
----------------------------------------------------------------

2019-07-17 06:49:58 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 06:50:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 168, syntax-valid 89, build-succeeded 25
Fitness: max 0.9523809523809523(7), min 0.0(2), ave 0.32
----------------------------------------------------------------

2019-07-17 06:50:00 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 06:50:02 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 06:50:02 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -4,9 +4,11 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		int x, y;
 		x = sample.pow(a) % list.size();
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
@@ -16,11 +18,11 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(i);
-			}
+			if(i >= l && i <= h)
+				x = sample.pow(a) % list.size();
+			return sum;
 		}
-		return sum;
+		return -1;
 	}
 
 	public int resource() {
2019-07-17 06:50:02 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -25,7 +25,6 @@
 	
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
 		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
2019-07-17 06:50:02 [main] [INFO]  KGenProgMain - execution time: 19 seconds
