2019-07-16 17:51:24 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work802139797879162223
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 4
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-16 17:51:26 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 17:51:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 9
Fitness: max 0.9090909090909091(4), min 0.0(3), ave 0.4242424242424242
----------------------------------------------------------------

2019-07-16 17:51:29 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 17:51:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 77, build-succeeded 11
Fitness: max 0.9090909090909091(5), min 0.0(2), ave 0.5702479338842975
----------------------------------------------------------------

2019-07-16 17:51:32 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 17:51:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 77, build-succeeded 12
Fitness: max 0.9090909090909091(5), min 0.0(5), ave 0.4621212121212121
----------------------------------------------------------------

2019-07-16 17:51:36 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 17:51:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 12
Fitness: max 0.9090909090909091(3), min 0.0(3), ave 0.45454545454545453
----------------------------------------------------------------

2019-07-16 17:51:38 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 17:51:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 10
Fitness: max 0.9090909090909091(2), min 0.0(1), ave 0.5636363636363636
----------------------------------------------------------------

2019-07-16 17:51:41 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 17:51:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 108, syntax-valid 77, build-succeeded 11
Fitness: max 0.9090909090909091(1), min 0.0(3), ave 0.3471074380165289
----------------------------------------------------------------

2019-07-16 17:51:44 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 17:51:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 122, syntax-valid 81, build-succeeded 19
Fitness: max 0.9090909090909091(7), min 0.0(5), ave 0.4641148325358852
----------------------------------------------------------------

2019-07-16 17:51:47 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 17:51:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 132, syntax-valid 83, build-succeeded 28
Fitness: max 0.9090909090909091(6), min 0.0(7), ave 0.43831168831168826
----------------------------------------------------------------

2019-07-16 17:51:51 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 17:51:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 144, syntax-valid 79, build-succeeded 17
Fitness: max 0.9090909090909091(2), min 0.0(2), ave 0.4973262032085561
----------------------------------------------------------------

2019-07-16 17:51:54 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 17:51:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 156, syntax-valid 91, build-succeeded 23
Fitness: max 0.9090909090909091(5), min 0.0(5), ave 0.4861660079051383
----------------------------------------------------------------

2019-07-16 17:51:58 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 17:52:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 166, syntax-valid 86, build-succeeded 25
Fitness: max 0.9090909090909091(10), min 0.0(3), ave 0.5854545454545454
----------------------------------------------------------------

2019-07-16 17:52:02 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 17:52:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 seconds
Variants: generated 168, syntax-valid 75, build-succeeded 22
Fitness: max 0.9090909090909091(3), min 0.0(3), ave 0.4958677685950413
----------------------------------------------------------------

2019-07-16 17:52:05 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 17:52:09 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 17:52:09 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -8,6 +8,9 @@
 		int x, y;
 		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		if (list == null) {
+			return -1;
+		}
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		// if(subList == null) { //bug here
@@ -15,6 +18,9 @@
 		// }
 
 		int sum = 0;
+		if (subList == null) {
+			return -1;
+		}
 		for(int i : subList) {
 			if(i >= l && i <= h) {
 				sum += sample.fact(i);
2019-07-16 17:52:09 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -8,9 +8,7 @@
 	
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
-			res *= a;
-		}
+		res *= a;
 		return res;
 	}
 	
2019-07-16 17:52:09 [main] [INFO]  KGenProgMain - execution time: 43 seconds
