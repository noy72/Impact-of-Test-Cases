2019-07-16 18:39:07 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3115870027969884851
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 33
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check
================================================================
2019-07-16 18:39:10 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:39:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 10
Fitness: max 0.9090909090909091(6), min 0.0(2), ave 0.5636363636363637
----------------------------------------------------------------

2019-07-16 18:39:13 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:39:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 13
Fitness: max 0.9090909090909091(10), min 0.09090909090909091(1), ave 0.7902097902097901
----------------------------------------------------------------

2019-07-16 18:39:15 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:39:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 4
Fitness: max 0.9090909090909091(3), min 0.0(1), ave 0.6818181818181818
----------------------------------------------------------------

2019-07-16 18:39:18 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:39:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 7
Fitness: max 0.9090909090909091(4), min 0.5454545454545454(3), ave 0.7532467532467532
----------------------------------------------------------------

2019-07-16 18:39:21 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:39:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 3
Fitness: max 0.9090909090909091(1), min 0.09090909090909091(1), ave 0.5151515151515151
----------------------------------------------------------------

2019-07-16 18:39:23 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:39:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 102, syntax-valid 66, build-succeeded 10
Fitness: max 0.9090909090909091(3), min 0.0(2), ave 0.5
----------------------------------------------------------------

2019-07-16 18:39:26 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 18:39:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 7
Fitness: max 0.9090909090909091(4), min 0.0(1), ave 0.6753246753246752
----------------------------------------------------------------

2019-07-16 18:39:29 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 18:39:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 102, syntax-valid 58, build-succeeded 9
Fitness: max 0.9090909090909091(2), min 0.0(2), ave 0.45454545454545453
----------------------------------------------------------------

2019-07-16 18:39:31 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 18:39:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 106, syntax-valid 69, build-succeeded 10
Fitness: max 0.9090909090909091(4), min 0.09090909090909091(1), ave 0.6363636363636364
----------------------------------------------------------------

2019-07-16 18:39:34 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 18:39:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 108, syntax-valid 66, build-succeeded 9
Fitness: max 0.9090909090909091(4), min 0.0(1), ave 0.5454545454545454
----------------------------------------------------------------

2019-07-16 18:39:37 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 18:39:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 120, syntax-valid 79, build-succeeded 18
Fitness: max 0.9090909090909091(6), min 0.0(3), ave 0.5202020202020202
----------------------------------------------------------------

2019-07-16 18:39:39 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 18:39:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 140, syntax-valid 91, build-succeeded 22
Fitness: max 0.9090909090909091(11), min 0.0(1), ave 0.640495867768595
----------------------------------------------------------------

2019-07-16 18:39:42 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 18:39:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 146, syntax-valid 89, build-succeeded 23
Fitness: max 0.9090909090909091(7), min 0.5454545454545454(16), ave 0.6561264822134387
----------------------------------------------------------------

2019-07-16 18:39:45 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2019-07-16 18:39:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 146, syntax-valid 79, build-succeeded 17
Fitness: max 0.9090909090909091(15), min 0.0(1), ave 0.8342245989304813
----------------------------------------------------------------

2019-07-16 18:39:47 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2019-07-16 18:39:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 seconds
Variants: generated 166, syntax-valid 90, build-succeeded 27
Fitness: max 0.9090909090909091(22), min 0.0(1), ave 0.8215488215488215
----------------------------------------------------------------

2019-07-16 18:39:50 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2019-07-16 18:39:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 seconds
Variants: generated 162, syntax-valid 79, build-succeeded 17
Fitness: max 0.9090909090909091(15), min 0.09090909090909091(1), ave 0.8395721925133689
----------------------------------------------------------------

2019-07-16 18:39:53 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2019-07-16 18:39:56 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:39:56 [main] [INFO]  Patch - 
--- non_null_check.Class1
+++ non_null_check.Class1
@@ -7,7 +7,9 @@
 
 		int x, y;
 		x = sample.pow(a) % list.size();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		// if(subList == null) { //bug here
@@ -15,6 +17,9 @@
 		// }
 
 		int sum = 0;
+		if (subList == null) {
+			return -1;
+		}
 		for(int i : subList) {
 			if(i >= l && i <= h) {
 				sum += sample.fact(i);
2019-07-16 18:39:56 [main] [INFO]  Patch - 
--- non_null_check.Class2
+++ non_null_check.Class2
@@ -24,9 +24,8 @@
 
 	
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
+		if(l < 0 || r >= list.size() || l >= r)
 			return null;
-		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 18:39:56 [main] [INFO]  KGenProgMain - execution time: 46 seconds
