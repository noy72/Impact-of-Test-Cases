2019-07-16 16:46:39 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6783364004056595063
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 10
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 16:46:41 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:46:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 58, build-succeeded 15
Fitness: max 0.16666666666666666(14), min 0.0(1), ave 0.15555555555555553
----------------------------------------------------------------

2019-07-16 16:46:44 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:46:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 8
Fitness: max 0.16666666666666666(6), min 0.0(2), ave 0.125
----------------------------------------------------------------

2019-07-16 16:46:47 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:46:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 9
Fitness: max 0.16666666666666666(8), min 0.0(1), ave 0.14814814814814814
----------------------------------------------------------------

2019-07-16 16:46:49 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:46:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 15
Fitness: max 0.8333333333333334(1), min 0.0(5), ave 0.15555555555555556
----------------------------------------------------------------

2019-07-16 16:46:52 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:46:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 75, build-succeeded 10
Fitness: max 0.8333333333333334(1), min 0.0(2), ave 0.2
----------------------------------------------------------------

2019-07-16 16:46:55 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:46:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 106, syntax-valid 69, build-succeeded 15
Fitness: max 0.8333333333333334(1), min 0.0(4), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 16:46:57 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:47:00 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:47:00 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -16,9 +16,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 16:47:00 [main] [INFO]  Patch - 
--- incorrect_method.Class2
+++ incorrect_method.Class2
@@ -8,8 +8,10 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		Class2 sample = new Class2();
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			ArrayList<Integer> subList=new ArrayList<>();
 		}
 		return res;
 	}
2019-07-16 16:47:00 [main] [INFO]  KGenProgMain - execution time: 19 seconds
