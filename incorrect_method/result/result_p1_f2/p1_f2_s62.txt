2019-07-16 18:04:29 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5839445705760670492
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 62
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 18:04:32 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:04:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 44, build-succeeded 8
Fitness: max 0.16666666666666666(8), min 0.16666666666666666(8), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 18:04:35 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:04:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 14
Fitness: max 0.16666666666666666(14), min 0.16666666666666666(14), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 18:04:38 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:04:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 14
Fitness: max 0.16666666666666666(14), min 0.16666666666666666(14), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 18:04:41 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:04:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 76, build-succeeded 18
Fitness: max 0.16666666666666666(14), min 0.0(4), ave 0.12962962962962962
----------------------------------------------------------------

2019-07-16 18:04:45 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:04:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 104, syntax-valid 77, build-succeeded 13
Fitness: max 0.16666666666666666(10), min 0.0(3), ave 0.1282051282051282
----------------------------------------------------------------

2019-07-16 18:04:47 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:04:50 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:04:50 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -10,16 +10,15 @@
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		y = sample.pow(a, n) % list.size();
 		if(subList == null) {
 			return -1;
 		}
 
 		int sum = 0;
-		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
-		}
+		for(int i : subList)
+			if (i >= l)
+				sum += sample.fact(i);
 		return sum;
 	}
 
2019-07-16 18:04:51 [main] [INFO]  KGenProgMain - execution time: 18 seconds
