2019-07-16 22:16:13 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work418741703454563276
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 17
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 22:16:14 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 22:16:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 13
Fitness: max 0.09523809523809523(1), min 0.0(1), ave 0.04761904761904762
----------------------------------------------------------------

2019-07-16 22:16:17 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 22:16:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 15
Fitness: max 0.047619047619047616(11), min 0.0(4), ave 0.034920634920634915
----------------------------------------------------------------

2019-07-16 22:16:20 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 22:16:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 14
Fitness: max 0.047619047619047616(8), min 0.0(6), ave 0.027210884353741496
----------------------------------------------------------------

2019-07-16 22:16:22 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 22:16:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 10
Fitness: max 0.047619047619047616(5), min 0.0(5), ave 0.023809523809523808
----------------------------------------------------------------

2019-07-16 22:16:24 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 22:16:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 106, syntax-valid 81, build-succeeded 21
Fitness: max 0.09523809523809523(1), min 0.0(11), ave 0.02494331065759637
----------------------------------------------------------------

2019-07-16 22:16:27 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 22:16:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 108, syntax-valid 70, build-succeeded 13
Fitness: max 0.047619047619047616(5), min 0.0(8), ave 0.018315018315018312
----------------------------------------------------------------

2019-07-16 22:16:29 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 22:16:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 110, syntax-valid 78, build-succeeded 11
Fitness: max 0.047619047619047616(1), min 0.0(10), ave 0.004329004329004329
----------------------------------------------------------------

2019-07-16 22:16:31 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 22:16:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 126, syntax-valid 83, build-succeeded 29
Fitness: max 0.047619047619047616(12), min 0.0(17), ave 0.019704433497536946
----------------------------------------------------------------

2019-07-16 22:16:33 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 22:16:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 124, syntax-valid 78, build-succeeded 24
Fitness: max 0.047619047619047616(14), min 0.0(10), ave 0.027777777777777776
----------------------------------------------------------------

2019-07-16 22:16:35 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 22:16:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 122, syntax-valid 79, build-succeeded 19
Fitness: max 0.047619047619047616(12), min 0.0(7), ave 0.03007518796992481
----------------------------------------------------------------

2019-07-16 22:16:37 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 22:16:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 122, syntax-valid 77, build-succeeded 22
Fitness: max 0.047619047619047616(18), min 0.0(4), ave 0.03896103896103896
----------------------------------------------------------------

2019-07-16 22:16:40 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 22:16:41 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 22:16:41 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -4,6 +4,7 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		int res = 1;
 
 		int x, y;
 		x = sample.pow(a) % list.size();
@@ -16,9 +17,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 22:16:42 [main] [INFO]  KGenProgMain - execution time: 27 seconds
