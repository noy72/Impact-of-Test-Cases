2019-07-16 16:00:14 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work192372245624053732
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 29
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 16:00:17 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:00:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 51, build-succeeded 15
Fitness: max 0.9523809523809523(12), min 0.8571428571428571(3), ave 0.9333333333333333
----------------------------------------------------------------

2019-07-16 16:00:20 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:00:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 61, build-succeeded 19
Fitness: max 0.9523809523809523(16), min 0.8571428571428571(3), ave 0.93734335839599
----------------------------------------------------------------

2019-07-16 16:00:23 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:00:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 61, build-succeeded 15
Fitness: max 0.9523809523809523(12), min 0.7619047619047619(1), ave 0.9269841269841269
----------------------------------------------------------------

2019-07-16 16:00:25 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:00:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 51, build-succeeded 12
Fitness: max 0.9523809523809523(9), min 0.7619047619047619(1), ave 0.9206349206349206
----------------------------------------------------------------

2019-07-16 16:00:27 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:00:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 17
Fitness: max 0.9523809523809523(12), min 0.09523809523809523(1), ave 0.8683473389355741
----------------------------------------------------------------

2019-07-16 16:00:30 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:00:32 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:00:32 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -17,7 +17,8 @@
 		int sum = 0;
 		for(int i : subList) {
 			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
+				if (i >= l)
+					sum += sample.fact(i);
 			}
 		}
 		return sum;
2019-07-16 16:00:33 [main] [INFO]  KGenProgMain - execution time: 15 seconds
