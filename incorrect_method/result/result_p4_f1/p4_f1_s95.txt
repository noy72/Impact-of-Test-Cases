2019-07-16 16:32:21 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8770991610095542405
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 95
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 16:32:24 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:32:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 54, build-succeeded 14
Fitness: max 0.9523809523809523(12), min 0.7619047619047619(1), ave 0.9319727891156463
----------------------------------------------------------------

2019-07-16 16:32:27 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:32:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 15
Fitness: max 0.9523809523809523(12), min 0.7619047619047619(2), ave 0.9206349206349206
----------------------------------------------------------------

2019-07-16 16:32:30 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:32:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 14
Fitness: max 0.9523809523809523(12), min 0.8571428571428571(2), ave 0.9387755102040816
----------------------------------------------------------------

2019-07-16 16:32:33 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:32:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 23
Fitness: max 0.9523809523809523(17), min 0.0(1), ave 0.8861283643892339
----------------------------------------------------------------

2019-07-16 16:32:37 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:32:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 110, syntax-valid 78, build-succeeded 24
Fitness: max 0.9523809523809523(17), min 0.7619047619047619(2), ave 0.9166666666666666
----------------------------------------------------------------

2019-07-16 16:32:41 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:32:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 124, syntax-valid 71, build-succeeded 29
Fitness: max 0.9523809523809523(20), min 0.09523809523809523(1), ave 0.889983579638752
----------------------------------------------------------------

2019-07-16 16:32:44 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:32:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 130, syntax-valid 67, build-succeeded 27
Fitness: max 0.9523809523809523(21), min 0.8571428571428571(5), ave 0.9329805996472663
----------------------------------------------------------------

2019-07-16 16:32:48 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:32:51 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:32:51 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -17,7 +17,8 @@
 		int sum = 0;
 		for(int i : subList) {
 			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
+				x = sample.pow(a) % list.size();
+				sum += sample.fact(i);
 			}
 		}
 		return sum;
2019-07-16 16:32:51 [main] [INFO]  KGenProgMain - execution time: 27 seconds
