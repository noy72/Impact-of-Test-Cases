2019-07-17 01:49:14 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5499897378248705309
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 61
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-17 01:49:16 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 01:49:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 12
Fitness: max 0.5(7), min 0.4(5), ave 0.4583333333333333
----------------------------------------------------------------

2019-07-17 01:49:19 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 01:49:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 14
Fitness: max 0.5(5), min 0.0(2), ave 0.35714285714285715
----------------------------------------------------------------

2019-07-17 01:49:23 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 01:49:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 12
Fitness: max 0.5(2), min 0.0(4), ave 0.25833333333333336
----------------------------------------------------------------

2019-07-17 01:49:25 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 01:49:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 13
Fitness: max 0.5(4), min 0.0(4), ave 0.26153846153846155
----------------------------------------------------------------

2019-07-17 01:49:27 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 01:49:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 106, syntax-valid 83, build-succeeded 16
Fitness: max 0.5(2), min 0.0(3), ave 0.28125
----------------------------------------------------------------

2019-07-17 01:49:30 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 01:49:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 102, syntax-valid 79, build-succeeded 12
Fitness: max 0.5(3), min 0.0(2), ave 0.30833333333333335
----------------------------------------------------------------

2019-07-17 01:49:33 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 01:49:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 108, syntax-valid 75, build-succeeded 18
Fitness: max 0.5(3), min 0.0(3), ave 0.30000000000000004
----------------------------------------------------------------

2019-07-17 01:49:36 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 01:49:40 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 01:49:40 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		int res = 1;
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
@@ -15,10 +16,10 @@
 		}
 
 		int sum = 0;
+		y = sample.pow(a) % list.size();
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-17 01:49:40 [main] [INFO]  KGenProgMain - execution time: 23 seconds
