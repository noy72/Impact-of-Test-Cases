2019-07-16 14:10:26 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1323691065012511929
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 47
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 14:10:28 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:10:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 16
Fitness: max 0.8333333333333334(10), min 0.16666666666666666(2), ave 0.7083333333333334
----------------------------------------------------------------

2019-07-16 14:10:32 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:10:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 15
Fitness: max 0.8333333333333334(8), min 0.16666666666666666(4), ave 0.6
----------------------------------------------------------------

2019-07-16 14:10:36 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:10:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 14
Fitness: max 0.8333333333333334(7), min 0.0(1), ave 0.6547619047619048
----------------------------------------------------------------

2019-07-16 14:10:39 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:10:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 23
Fitness: max 0.8333333333333334(13), min 0.0(1), ave 0.6376811594202898
----------------------------------------------------------------

2019-07-16 14:10:43 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:10:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 67, build-succeeded 12
Fitness: max 0.8333333333333334(7), min 0.0(2), ave 0.5833333333333334
----------------------------------------------------------------

2019-07-16 14:10:46 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:10:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 104, syntax-valid 62, build-succeeded 14
Fitness: max 0.8333333333333334(9), min 0.0(1), ave 0.6666666666666667
----------------------------------------------------------------

2019-07-16 14:10:49 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 14:10:52 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:10:52 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a) % list.size();
+		int res = 1;
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
@@ -16,9 +17,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 14:10:53 [main] [INFO]  KGenProgMain - execution time: 24 seconds
