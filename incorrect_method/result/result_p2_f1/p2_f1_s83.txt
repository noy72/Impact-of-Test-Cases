2019-07-16 14:35:01 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work787278918506868927
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 83
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 14:35:04 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:35:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 12
Fitness: max 0.8333333333333334(9), min 0.6666666666666666(3), ave 0.7916666666666666
----------------------------------------------------------------

2019-07-16 14:35:08 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:35:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 11
Fitness: max 0.8333333333333334(7), min 0.0(1), ave 0.7121212121212122
----------------------------------------------------------------

2019-07-16 14:35:12 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:35:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 9
Fitness: max 0.8333333333333334(6), min 0.0(1), ave 0.7037037037037037
----------------------------------------------------------------

2019-07-16 14:35:15 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:35:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 16
Fitness: max 0.8333333333333334(11), min 0.16666666666666666(1), ave 0.75
----------------------------------------------------------------

2019-07-16 14:35:18 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:35:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 12
Fitness: max 0.8333333333333334(7), min 0.6666666666666666(5), ave 0.7638888888888888
----------------------------------------------------------------

2019-07-16 14:35:22 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:35:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 102, syntax-valid 65, build-succeeded 16
Fitness: max 0.8333333333333334(9), min 0.16666666666666666(1), ave 0.7291666666666666
----------------------------------------------------------------

2019-07-16 14:35:25 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 14:35:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 104, syntax-valid 74, build-succeeded 16
Fitness: max 0.8333333333333334(5), min 0.6666666666666666(11), ave 0.71875
----------------------------------------------------------------

2019-07-16 14:35:28 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 14:35:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 130, syntax-valid 82, build-succeeded 27
Fitness: max 0.8333333333333334(18), min 0.6666666666666666(9), ave 0.7777777777777778
----------------------------------------------------------------

2019-07-16 14:35:31 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 14:35:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 136, syntax-valid 73, build-succeeded 29
Fitness: max 0.8333333333333334(15), min 0.0(1), ave 0.7068965517241379
----------------------------------------------------------------

2019-07-16 14:35:35 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 14:35:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 138, syntax-valid 82, build-succeeded 21
Fitness: max 0.8333333333333334(15), min 0.0(1), ave 0.753968253968254
----------------------------------------------------------------

2019-07-16 14:35:38 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 14:35:41 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:35:41 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a) % list.size();
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
@@ -16,9 +17,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 14:35:41 [main] [INFO]  Patch - 
--- incorrect_method.Class2
+++ incorrect_method.Class2
@@ -29,6 +29,9 @@
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
+		if (l < 0 || r >= list.size() || l >= r) {
+			return null;
+		}
 		for(; l < r; l++) {
 			res.add(list.get(l));
 		}
2019-07-16 14:35:42 [main] [INFO]  KGenProgMain - execution time: 37 seconds
