2019-07-16 14:02:05 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1933475053717696108
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 35
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 14:02:08 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:02:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 15
Fitness: max 0.8333333333333334(10), min 0.16666666666666666(2), ave 0.711111111111111
----------------------------------------------------------------

2019-07-16 14:02:11 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:02:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 15
Fitness: max 0.8333333333333334(9), min 0.0(1), ave 0.6444444444444445
----------------------------------------------------------------

2019-07-16 14:02:14 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:02:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 11
Fitness: max 0.8333333333333334(3), min 0.16666666666666666(1), ave 0.6515151515151515
----------------------------------------------------------------

2019-07-16 14:02:18 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:02:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 13
Fitness: max 0.8333333333333334(5), min 0.16666666666666666(2), ave 0.6538461538461539
----------------------------------------------------------------

2019-07-16 14:02:21 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:02:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 61, build-succeeded 16
Fitness: max 0.8333333333333334(6), min 0.0(1), ave 0.5520833333333334
----------------------------------------------------------------

2019-07-16 14:02:23 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:02:26 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:02:26 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -16,9 +16,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 14:02:26 [main] [INFO]  Patch - 
--- incorrect_method.Class2
+++ incorrect_method.Class2
@@ -31,6 +31,9 @@
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
 			res.add(list.get(l));
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 		}
 		return res;
 	}
2019-07-16 14:02:27 [main] [INFO]  KGenProgMain - execution time: 19 seconds
