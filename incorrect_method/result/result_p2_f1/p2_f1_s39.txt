2019-07-16 14:05:07 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5653814389706942003
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 39
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 14:05:09 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:05:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 13
Fitness: max 0.8333333333333334(9), min 0.16666666666666666(1), ave 0.7435897435897435
----------------------------------------------------------------

2019-07-16 14:05:13 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:05:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 16
Fitness: max 0.8333333333333334(11), min 0.0(1), ave 0.7083333333333334
----------------------------------------------------------------

2019-07-16 14:05:16 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:05:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 14
Fitness: max 0.8333333333333334(8), min 0.0(1), ave 0.6785714285714286
----------------------------------------------------------------

2019-07-16 14:05:19 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:05:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 67, build-succeeded 14
Fitness: max 0.8333333333333334(9), min 0.0(1), ave 0.6904761904761905
----------------------------------------------------------------

2019-07-16 14:05:22 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:05:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 104, syntax-valid 62, build-succeeded 16
Fitness: max 0.8333333333333334(11), min 0.16666666666666666(2), ave 0.71875
----------------------------------------------------------------

2019-07-16 14:05:24 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:05:26 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:05:26 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -17,7 +17,7 @@
 		int sum = 0;
 		for(int i : subList) {
 			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
+				sum += sample.fact(i);
 			}
 		}
 		return sum;
2019-07-16 14:05:26 [main] [INFO]  Patch - 
--- incorrect_method.Class2
+++ incorrect_method.Class2
@@ -29,6 +29,7 @@
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
+		int x, y;
 		for(; l < r; l++) {
 			res.add(list.get(l));
 		}
2019-07-16 14:05:27 [main] [INFO]  KGenProgMain - execution time: 17 seconds
