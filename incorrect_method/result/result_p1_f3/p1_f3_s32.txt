2019-07-16 19:58:44 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8760515671257122336
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 32
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 19:58:46 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 19:58:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 9
Fitness: max 0.09090909090909091(8), min 0.0(1), ave 0.08080808080808081
----------------------------------------------------------------

2019-07-16 19:58:50 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 19:58:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 61, build-succeeded 7
Fitness: max 0.09090909090909091(5), min 0.0(2), ave 0.06493506493506494
----------------------------------------------------------------

2019-07-16 19:58:53 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 19:58:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 10
Fitness: max 0.09090909090909091(7), min 0.0(3), ave 0.06363636363636363
----------------------------------------------------------------

2019-07-16 19:58:56 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 19:58:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 11
Fitness: max 0.09090909090909091(8), min 0.0(3), ave 0.06611570247933884
----------------------------------------------------------------

2019-07-16 19:58:59 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 19:59:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 14
Fitness: max 0.09090909090909091(11), min 0.0(3), ave 0.07142857142857142
----------------------------------------------------------------

2019-07-16 19:59:01 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 19:59:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 102, syntax-valid 66, build-succeeded 11
Fitness: max 0.09090909090909091(6), min 0.0(5), ave 0.04958677685950413
----------------------------------------------------------------

2019-07-16 19:59:04 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 19:59:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 108, syntax-valid 72, build-succeeded 15
Fitness: max 0.9090909090909091(1), min 0.0(5), ave 0.11515151515151516
----------------------------------------------------------------

2019-07-16 19:59:08 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 19:59:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 112, syntax-valid 72, build-succeeded 14
Fitness: max 0.09090909090909091(8), min 0.0(6), ave 0.05194805194805195
----------------------------------------------------------------

2019-07-16 19:59:11 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 19:59:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 124, syntax-valid 81, build-succeeded 20
Fitness: max 0.09090909090909091(15), min 0.0(5), ave 0.06818181818181819
----------------------------------------------------------------

2019-07-16 19:59:14 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 19:59:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 116, syntax-valid 78, build-succeeded 16
Fitness: max 0.09090909090909091(11), min 0.0(5), ave 0.0625
----------------------------------------------------------------

2019-07-16 19:59:17 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 19:59:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 136, syntax-valid 80, build-succeeded 20
Fitness: max 0.9090909090909091(2), min 0.0(6), ave 0.14545454545454545
----------------------------------------------------------------

2019-07-16 19:59:21 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 19:59:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 136, syntax-valid 81, build-succeeded 20
Fitness: max 0.9090909090909091(1), min 0.0(2), ave 0.12272727272727273
----------------------------------------------------------------

2019-07-16 19:59:24 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 19:59:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 seconds
Variants: generated 132, syntax-valid 82, build-succeeded 26
Fitness: max 0.9090909090909091(1), min 0.0(3), ave 0.11188811188811189
----------------------------------------------------------------

2019-07-16 19:59:27 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2019-07-16 19:59:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 seconds
Variants: generated 148, syntax-valid 87, build-succeeded 24
Fitness: max 0.9090909090909091(1), min 0.0(2), ave 0.11742424242424243
----------------------------------------------------------------

2019-07-16 19:59:31 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2019-07-16 19:59:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 seconds
Variants: generated 138, syntax-valid 87, build-succeeded 25
Fitness: max 0.09090909090909091(17), min 0.0(8), ave 0.061818181818181814
----------------------------------------------------------------

2019-07-16 19:59:35 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2019-07-16 19:59:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 51 seconds
Variants: generated 142, syntax-valid 68, build-succeeded 20
Fitness: max 0.09090909090909091(12), min 0.0(8), ave 0.05454545454545454
----------------------------------------------------------------

2019-07-16 19:59:38 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2019-07-16 19:59:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 54 seconds
Variants: generated 138, syntax-valid 65, build-succeeded 15
Fitness: max 0.09090909090909091(12), min 0.0(3), ave 0.07272727272727272
----------------------------------------------------------------

2019-07-16 19:59:40 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2019-07-16 19:59:44 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 19:59:44 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -10,15 +10,15 @@
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		x = sample.pow(a) % list.size();
+		x = sample.pow(a, n) % list.size();
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 19:59:45 [main] [INFO]  KGenProgMain - execution time: 58 seconds
