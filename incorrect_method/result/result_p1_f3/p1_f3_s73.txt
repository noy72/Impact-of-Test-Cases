2019-07-16 21:01:27 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work460682772630080261
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 73
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 21:01:29 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 21:01:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 12
Fitness: max 0.09090909090909091(12), min 0.09090909090909091(12), ave 0.0909090909090909
----------------------------------------------------------------

2019-07-16 21:01:33 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 21:01:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 9
Fitness: max 0.09090909090909091(7), min 0.0(2), ave 0.0707070707070707
----------------------------------------------------------------

2019-07-16 21:01:36 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 21:01:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 15
Fitness: max 0.09090909090909091(13), min 0.0(2), ave 0.0787878787878788
----------------------------------------------------------------

2019-07-16 21:01:39 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 21:01:41 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 21:01:41 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -16,9 +16,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 21:01:41 [main] [INFO]  Patch - 
--- incorrect_method.Class2
+++ incorrect_method.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		ArrayList<Integer> list=new ArrayList<>();
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
@@ -31,6 +32,7 @@
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
 			res.add(list.get(l));
+			Class2 sample = new Class2();
 		}
 		return res;
 	}
2019-07-16 21:01:41 [main] [INFO]  KGenProgMain - execution time: 11 seconds
