2019-07-16 21:37:01 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3905767921191847791
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 93
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 21:37:03 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 21:37:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 15
Fitness: max 0.09090909090909091(13), min 0.0(2), ave 0.0787878787878788
----------------------------------------------------------------

2019-07-16 21:37:06 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 21:37:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 15
Fitness: max 0.5454545454545454(1), min 0.0(2), ave 0.1090909090909091
----------------------------------------------------------------

2019-07-16 21:37:08 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 21:37:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 13
Fitness: max 0.09090909090909091(8), min 0.0(5), ave 0.055944055944055944
----------------------------------------------------------------

2019-07-16 21:37:11 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 21:37:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 12
Fitness: max 0.09090909090909091(10), min 0.0(2), ave 0.07575757575757576
----------------------------------------------------------------

2019-07-16 21:37:13 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 21:37:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 16
Fitness: max 0.5454545454545454(1), min 0.0(4), ave 0.09659090909090909
----------------------------------------------------------------

2019-07-16 21:37:15 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 21:37:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 108, syntax-valid 76, build-succeeded 22
Fitness: max 0.45454545454545453(1), min 0.0(6), ave 0.08264462809917356
----------------------------------------------------------------

2019-07-16 21:37:17 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 21:37:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 108, syntax-valid 81, build-succeeded 18
Fitness: max 0.09090909090909091(10), min 0.0(8), ave 0.05050505050505051
----------------------------------------------------------------

2019-07-16 21:37:19 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 21:37:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 124, syntax-valid 76, build-succeeded 25
Fitness: max 0.5454545454545454(1), min 0.0(6), ave 0.08727272727272727
----------------------------------------------------------------

2019-07-16 21:37:21 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 21:37:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 120, syntax-valid 85, build-succeeded 25
Fitness: max 0.09090909090909091(22), min 0.0(3), ave 0.08
----------------------------------------------------------------

2019-07-16 21:37:23 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 21:37:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 132, syntax-valid 87, build-succeeded 22
Fitness: max 0.5454545454545454(1), min 0.0(1), ave 0.12396694214876032
----------------------------------------------------------------

2019-07-16 21:37:25 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 21:37:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 126, syntax-valid 75, build-succeeded 14
Fitness: max 0.09090909090909091(12), min 0.0(2), ave 0.07792207792207792
----------------------------------------------------------------

2019-07-16 21:37:26 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 21:37:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 118, syntax-valid 77, build-succeeded 19
Fitness: max 0.09090909090909091(14), min 0.0(5), ave 0.06698564593301436
----------------------------------------------------------------

2019-07-16 21:37:28 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 21:37:30 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 21:37:30 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -16,9 +16,9 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				if (i <= h)
+			sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 21:37:30 [main] [INFO]  Patch - 
--- incorrect_method.Class2
+++ incorrect_method.Class2
@@ -31,6 +31,7 @@
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
 			res.add(list.get(l));
+			int sum = 0;
 		}
 		return res;
 	}
2019-07-16 21:37:30 [main] [INFO]  KGenProgMain - execution time: 27 seconds
