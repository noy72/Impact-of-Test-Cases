2019-07-16 14:59:35 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1085929532424631489
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 17
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 14:59:37 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:59:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 16
Fitness: max 0.9090909090909091(13), min 0.7272727272727273(1), ave 0.8863636363636364
----------------------------------------------------------------

2019-07-16 14:59:40 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:59:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 9
Fitness: max 0.9090909090909091(9), min 0.9090909090909091(9), ave 0.9090909090909091
----------------------------------------------------------------

2019-07-16 14:59:42 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:59:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 17
Fitness: max 0.9090909090909091(14), min 0.8181818181818182(3), ave 0.893048128342246
----------------------------------------------------------------

2019-07-16 14:59:45 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:59:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 10
Fitness: max 0.9090909090909091(7), min 0.8181818181818182(3), ave 0.8818181818181818
----------------------------------------------------------------

2019-07-16 14:59:47 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:59:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 14
Fitness: max 0.9090909090909091(8), min 0.7272727272727273(2), ave 0.8571428571428571
----------------------------------------------------------------

2019-07-16 14:59:49 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:59:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 104, syntax-valid 62, build-succeeded 15
Fitness: max 0.9090909090909091(10), min 0.09090909090909091(1), ave 0.8303030303030303
----------------------------------------------------------------

2019-07-16 14:59:51 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 14:59:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 112, syntax-valid 77, build-succeeded 16
Fitness: max 0.9090909090909091(8), min 0.0(1), ave 0.7670454545454546
----------------------------------------------------------------

2019-07-16 14:59:53 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 14:59:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 120, syntax-valid 63, build-succeeded 21
Fitness: max 0.9090909090909091(12), min 0.0(1), ave 0.787878787878788
----------------------------------------------------------------

2019-07-16 14:59:56 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 14:59:58 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:59:58 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -16,9 +16,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 14:59:58 [main] [INFO]  Patch - 
--- incorrect_method.Class2
+++ incorrect_method.Class2
@@ -31,6 +31,7 @@
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
 			res.add(list.get(l));
+			Class2 sample = new Class2();
 		}
 		return res;
 	}
2019-07-16 14:59:59 [main] [INFO]  KGenProgMain - execution time: 21 seconds
