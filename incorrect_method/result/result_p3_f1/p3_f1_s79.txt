2019-07-16 15:39:35 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8213420698865551673
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 79
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_method
================================================================
2019-07-16 15:39:38 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:39:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 53, build-succeeded 13
Fitness: max 0.9090909090909091(13), min 0.9090909090909091(13), ave 0.9090909090909091
----------------------------------------------------------------

2019-07-16 15:39:42 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:39:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 14
Fitness: max 0.9090909090909091(11), min 0.8181818181818182(3), ave 0.8896103896103896
----------------------------------------------------------------

2019-07-16 15:39:46 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:39:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 14
Fitness: max 0.9090909090909091(10), min 0.8181818181818182(4), ave 0.8831168831168831
----------------------------------------------------------------

2019-07-16 15:39:49 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:39:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 18
Fitness: max 0.9090909090909091(16), min 0.8181818181818182(2), ave 0.8989898989898989
----------------------------------------------------------------

2019-07-16 15:39:53 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:39:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 71, build-succeeded 12
Fitness: max 0.9090909090909091(5), min 0.0(2), ave 0.6590909090909091
----------------------------------------------------------------

2019-07-16 15:39:56 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 15:39:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 110, syntax-valid 78, build-succeeded 22
Fitness: max 0.9090909090909091(18), min 0.0(1), ave 0.8553719008264462
----------------------------------------------------------------

2019-07-16 15:39:59 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 15:40:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 124, syntax-valid 71, build-succeeded 25
Fitness: max 0.9090909090909091(15), min 0.0(1), ave 0.8036363636363636
----------------------------------------------------------------

2019-07-16 15:40:02 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 15:40:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 128, syntax-valid 75, build-succeeded 28
Fitness: max 0.9090909090909091(23), min 0.0(1), ave 0.8636363636363635
----------------------------------------------------------------

2019-07-16 15:40:06 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 15:40:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 128, syntax-valid 78, build-succeeded 29
Fitness: max 0.9090909090909091(27), min 0.7272727272727273(1), ave 0.8996865203761755
----------------------------------------------------------------

2019-07-16 15:40:09 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 15:40:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 126, syntax-valid 74, build-succeeded 27
Fitness: max 0.9090909090909091(24), min 0.7272727272727273(1), ave 0.8956228956228955
----------------------------------------------------------------

2019-07-16 15:40:12 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 15:40:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 142, syntax-valid 76, build-succeeded 21
Fitness: max 0.9090909090909091(19), min 0.8181818181818182(2), ave 0.9004329004329005
----------------------------------------------------------------

2019-07-16 15:40:16 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 15:40:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 seconds
Variants: generated 128, syntax-valid 75, build-succeeded 24
Fitness: max 0.9090909090909091(22), min 0.8181818181818182(2), ave 0.9015151515151515
----------------------------------------------------------------

2019-07-16 15:40:19 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 15:40:22 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:40:22 [main] [INFO]  Patch - 
--- incorrect_method.Class1
+++ incorrect_method.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
@@ -16,9 +17,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.pow(i); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 15:40:23 [main] [INFO]  KGenProgMain - execution time: 45 seconds
