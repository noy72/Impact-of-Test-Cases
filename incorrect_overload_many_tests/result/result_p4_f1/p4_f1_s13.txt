2019-07-16 18:53:25 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3706085166413332838
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 13
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 18:53:29 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:53:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 12
Fitness: max 0.9523809523809523(8), min 0.0(1), ave 0.6396825396825396
----------------------------------------------------------------

2019-07-16 18:53:32 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:53:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 16
Fitness: max 0.9523809523809523(7), min 0.0(6), ave 0.4202380952380952
----------------------------------------------------------------

2019-07-16 18:53:36 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:53:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 11
Fitness: max 0.9523809523809523(5), min 0.0(2), ave 0.4398268398268398
----------------------------------------------------------------

2019-07-16 18:53:40 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:53:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 13
Fitness: max 0.9523809523809523(3), min 0.0(6), ave 0.22564102564102562
----------------------------------------------------------------

2019-07-16 18:53:43 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:53:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 72, build-succeeded 11
Fitness: max 0.9523809523809523(2), min 0.0(4), ave 0.2510822510822511
----------------------------------------------------------------

2019-07-16 18:53:47 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:53:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 13
Fitness: max 0.9523809523809523(5), min 0.0(4), ave 0.3721611721611721
----------------------------------------------------------------

2019-07-16 18:53:50 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 18:53:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 104, syntax-valid 81, build-succeeded 15
Fitness: max 0.9523809523809523(6), min 0.0(5), ave 0.386031746031746
----------------------------------------------------------------

2019-07-16 18:53:53 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 18:53:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 110, syntax-valid 74, build-succeeded 19
Fitness: max 0.9523809523809523(8), min 0.0(2), ave 0.45112781954887216
----------------------------------------------------------------

2019-07-16 18:53:57 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 18:54:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 114, syntax-valid 83, build-succeeded 20
Fitness: max 0.9523809523809523(6), min 0.0(6), ave 0.33190476190476187
----------------------------------------------------------------

2019-07-16 18:54:01 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 18:54:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 122, syntax-valid 73, build-succeeded 22
Fitness: max 0.9523809523809523(10), min 0.0(1), ave 0.4424242424242424
----------------------------------------------------------------

2019-07-16 18:54:04 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 18:54:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 134, syntax-valid 75, build-succeeded 21
Fitness: max 0.9523809523809523(13), min 0.0(1), ave 0.6331065759637188
----------------------------------------------------------------

2019-07-16 18:54:07 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 18:54:11 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:54:11 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -6,8 +6,10 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 18:54:12 [main] [INFO]  KGenProgMain - execution time: 43 seconds
