2019-07-16 20:38:29 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work990678085897079953
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 97
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 20:38:33 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 20:38:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 51, build-succeeded 11
Fitness: max 0.9523809523809523(6), min 0.0(4), ave 0.5212121212121212
----------------------------------------------------------------

2019-07-16 20:38:37 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 20:38:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 8
Fitness: max 0.9523809523809523(3), min 0.0(2), ave 0.36428571428571427
----------------------------------------------------------------

2019-07-16 20:38:40 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 20:38:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 8
Fitness: max 0.9523809523809523(1), min 0.0(3), ave 0.12857142857142856
----------------------------------------------------------------

2019-07-16 20:38:43 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 20:38:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 10
Fitness: max 0.9523809523809523(2), min 0.0(4), ave 0.19809523809523807
----------------------------------------------------------------

2019-07-16 20:38:46 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 20:38:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 12
Fitness: max 0.9523809523809523(3), min 0.0(1), ave 0.2507936507936508
----------------------------------------------------------------

2019-07-16 20:38:49 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 20:38:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 104, syntax-valid 76, build-succeeded 6
Fitness: max 0.01904761904761905(4), min 0.0(2), ave 0.0126984126984127
----------------------------------------------------------------

2019-07-16 20:38:52 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 20:38:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 110, syntax-valid 76, build-succeeded 16
Fitness: max 0.9523809523809523(3), min 0.0(6), ave 0.1869047619047619
----------------------------------------------------------------

2019-07-16 20:38:55 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 20:38:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 108, syntax-valid 74, build-succeeded 14
Fitness: max 0.9523809523809523(1), min 0.0(6), ave 0.07755102040816327
----------------------------------------------------------------

2019-07-16 20:38:58 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 20:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 118, syntax-valid 71, build-succeeded 13
Fitness: max 0.9523809523809523(3), min 0.0(1), ave 0.23296703296703297
----------------------------------------------------------------

2019-07-16 20:39:00 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 20:39:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 134, syntax-valid 82, build-succeeded 22
Fitness: max 0.9523809523809523(3), min 0.0(9), ave 0.13852813852813853
----------------------------------------------------------------

2019-07-16 20:39:04 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 20:39:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 148, syntax-valid 84, build-succeeded 24
Fitness: max 0.9523809523809523(5), min 0.0(3), ave 0.2111111111111111
----------------------------------------------------------------

2019-07-16 20:39:07 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 20:39:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 150, syntax-valid 84, build-succeeded 24
Fitness: max 0.9523809523809523(9), min 0.0(3), ave 0.36666666666666664
----------------------------------------------------------------

2019-07-16 20:39:10 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 20:39:14 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 20:39:14 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -6,13 +6,12 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 20:39:14 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int x, y;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 20:39:15 [main] [INFO]  KGenProgMain - execution time: 42 seconds
