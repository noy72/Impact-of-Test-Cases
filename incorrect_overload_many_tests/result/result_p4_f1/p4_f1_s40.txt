2019-07-16 19:17:43 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8438366822423767638
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 40
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 19:17:47 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 19:17:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 53, build-succeeded 6
Fitness: max 0.9523809523809523(3), min 0.0(1), ave 0.48253968253968255
----------------------------------------------------------------

2019-07-16 19:17:51 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 19:17:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 15
Fitness: max 0.9523809523809523(8), min 0.0(2), ave 0.5142857142857142
----------------------------------------------------------------

2019-07-16 19:17:55 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 19:17:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 7
Fitness: max 0.9523809523809523(2), min 0.0(2), ave 0.2802721088435374
----------------------------------------------------------------

2019-07-16 19:17:58 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 19:18:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 10
Fitness: max 0.9523809523809523(7), min 0.0(1), ave 0.6704761904761904
----------------------------------------------------------------

2019-07-16 19:18:01 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 19:18:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 13
Fitness: max 0.9523809523809523(3), min 0.0(1), ave 0.23296703296703297
----------------------------------------------------------------

2019-07-16 19:18:04 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 19:18:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 14
Fitness: max 0.9523809523809523(6), min 0.0(2), ave 0.4163265306122449
----------------------------------------------------------------

2019-07-16 19:18:07 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 19:18:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 108, syntax-valid 76, build-succeeded 14
Fitness: max 0.9523809523809523(5), min 0.0(3), ave 0.4340136054421769
----------------------------------------------------------------

2019-07-16 19:18:11 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 19:18:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 124, syntax-valid 73, build-succeeded 15
Fitness: max 0.9523809523809523(8), min 0.0(3), ave 0.5403174603174603
----------------------------------------------------------------

2019-07-16 19:18:13 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 19:18:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 128, syntax-valid 73, build-succeeded 22
Fitness: max 0.9523809523809523(7), min 0.0(8), ave 0.3090909090909091
----------------------------------------------------------------

2019-07-16 19:18:16 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 19:18:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 130, syntax-valid 87, build-succeeded 18
Fitness: max 0.9523809523809523(9), min 0.0(1), ave 0.5306878306878307
----------------------------------------------------------------

2019-07-16 19:18:19 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 19:18:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 132, syntax-valid 81, build-succeeded 16
Fitness: max 0.9523809523809523(10), min 0.0(1), ave 0.6273809523809524
----------------------------------------------------------------

2019-07-16 19:18:23 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 19:18:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 148, syntax-valid 76, build-succeeded 15
Fitness: max 0.9523809523809523(8), min 0.0(1), ave 0.5434920634920635
----------------------------------------------------------------

2019-07-16 19:18:26 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 19:18:29 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 19:18:29 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 19:18:30 [main] [INFO]  KGenProgMain - execution time: 42 seconds
