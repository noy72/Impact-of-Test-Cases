2019-07-16 16:52:02 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6089391859425148007
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 17
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 16:52:05 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:52:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 7
Fitness: max 0.9333333333333333(4), min 0.0(2), ave 0.5371428571428571
----------------------------------------------------------------

2019-07-16 16:52:08 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:52:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 13
Fitness: max 0.9333333333333333(7), min 0.0(4), ave 0.5066666666666667
----------------------------------------------------------------

2019-07-16 16:52:11 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:52:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 21
Fitness: max 0.9333333333333333(7), min 0.0(10), ave 0.3161904761904762
----------------------------------------------------------------

2019-07-16 16:52:14 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:52:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 104, syntax-valid 68, build-succeeded 12
Fitness: max 0.9333333333333333(2), min 0.0(7), ave 0.1622222222222222
----------------------------------------------------------------

2019-07-16 16:52:17 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:52:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 104, syntax-valid 74, build-succeeded 19
Fitness: max 0.9333333333333333(6), min 0.0(5), ave 0.3059649122807018
----------------------------------------------------------------

2019-07-16 16:52:21 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:52:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 120, syntax-valid 69, build-succeeded 16
Fitness: max 0.9333333333333333(4), min 0.0(3), ave 0.24833333333333335
----------------------------------------------------------------

2019-07-16 16:52:25 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:52:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 130, syntax-valid 75, build-succeeded 10
Fitness: max 0.9333333333333333(3), min 0.0(4), ave 0.288
----------------------------------------------------------------

2019-07-16 16:52:28 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:52:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 146, syntax-valid 81, build-succeeded 20
Fitness: max 0.9333333333333333(4), min 0.0(6), ave 0.2
----------------------------------------------------------------

2019-07-16 16:52:32 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 16:52:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 150, syntax-valid 80, build-succeeded 29
Fitness: max 0.9333333333333333(9), min 0.0(2), ave 0.3062068965517241
----------------------------------------------------------------

2019-07-16 16:52:35 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 16:52:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 160, syntax-valid 77, build-succeeded 29
Fitness: max 0.9333333333333333(12), min 0.0(1), ave 0.4262068965517241
----------------------------------------------------------------

2019-07-16 16:52:39 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 16:52:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 150, syntax-valid 78, build-succeeded 24
Fitness: max 0.9333333333333333(9), min 0.0(1), ave 0.3655555555555556
----------------------------------------------------------------

2019-07-16 16:52:43 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 16:52:47 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:52:47 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -6,13 +6,15 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
-			return -1;
-		}
+		x = sample.pow(a) % list.size();
+		if(subList == null)
+			if (subList == null) {
+				return -1;
+			}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 16:52:47 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int x, y;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 16:52:48 [main] [INFO]  KGenProgMain - execution time: 42 seconds
