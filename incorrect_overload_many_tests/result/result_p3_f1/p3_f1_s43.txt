2019-07-16 17:18:58 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8715960016229812933
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 43
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 17:19:02 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 17:19:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 11
Fitness: max 0.9333333333333333(8), min 0.0(1), ave 0.6836363636363636
----------------------------------------------------------------

2019-07-16 17:19:07 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 17:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 11
Fitness: max 0.9333333333333333(6), min 0.0(2), ave 0.583030303030303
----------------------------------------------------------------

2019-07-16 17:19:11 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 17:19:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 15
Fitness: max 0.9333333333333333(6), min 0.0(4), ave 0.4444444444444445
----------------------------------------------------------------

2019-07-16 17:19:15 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 17:19:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 20
Fitness: max 0.9333333333333333(9), min 0.0(3), ave 0.528
----------------------------------------------------------------

2019-07-16 17:19:18 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 17:19:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 104, syntax-valid 72, build-succeeded 13
Fitness: max 0.9333333333333333(4), min 0.0(4), ave 0.39076923076923076
----------------------------------------------------------------

2019-07-16 17:19:22 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 17:19:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 102, syntax-valid 72, build-succeeded 16
Fitness: max 0.9333333333333333(6), min 0.0(5), ave 0.35833333333333334
----------------------------------------------------------------

2019-07-16 17:19:25 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 17:19:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 116, syntax-valid 80, build-succeeded 21
Fitness: max 0.9333333333333333(9), min 0.0(3), ave 0.47873015873015873
----------------------------------------------------------------

2019-07-16 17:19:29 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 17:19:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 134, syntax-valid 94, build-succeeded 30
Fitness: max 0.96(2), min 0.0(7), ave 0.48533333333333334
----------------------------------------------------------------

2019-07-16 17:19:33 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 17:19:36 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 17:19:36 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 17:19:36 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -25,7 +25,9 @@
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
 		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
2019-07-16 17:19:37 [main] [INFO]  KGenProgMain - execution time: 35 seconds
