2019-07-16 17:21:06 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8948039015543583831
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 45
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 17:21:09 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 17:21:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 13
Fitness: max 0.9333333333333333(7), min 0.0(3), ave 0.5087179487179487
----------------------------------------------------------------

2019-07-16 17:21:12 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 17:21:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 16
Fitness: max 0.9333333333333333(9), min 0.0(3), ave 0.5316666666666666
----------------------------------------------------------------

2019-07-16 17:21:15 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 17:21:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 11
Fitness: max 0.9333333333333333(5), min 0.0(3), ave 0.4315151515151516
----------------------------------------------------------------

2019-07-16 17:21:18 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 17:21:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 10
Fitness: max 0.9333333333333333(4), min 0.0(2), ave 0.384
----------------------------------------------------------------

2019-07-16 17:21:20 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 17:21:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 104, syntax-valid 68, build-succeeded 13
Fitness: max 0.9333333333333333(4), min 0.0(5), ave 0.29538461538461536
----------------------------------------------------------------

2019-07-16 17:21:23 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 17:21:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 110, syntax-valid 72, build-succeeded 13
Fitness: max 0.9333333333333333(5), min 0.0(4), ave 0.3671794871794872
----------------------------------------------------------------

2019-07-16 17:21:26 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 17:21:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 120, syntax-valid 77, build-succeeded 18
Fitness: max 0.9333333333333333(7), min 0.0(4), ave 0.3733333333333333
----------------------------------------------------------------

2019-07-16 17:21:29 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 17:21:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 114, syntax-valid 88, build-succeeded 21
Fitness: max 0.9333333333333333(11), min 0.0(6), ave 0.49396825396825395
----------------------------------------------------------------

2019-07-16 17:21:32 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 17:21:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 140, syntax-valid 95, build-succeeded 30
Fitness: max 0.96(1), min 0.0(1), ave 0.6222222222222222
----------------------------------------------------------------

2019-07-16 17:21:36 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 17:21:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 132, syntax-valid 84, build-succeeded 21
Fitness: max 0.9333333333333333(10), min 0.0(1), ave 0.5168253968253969
----------------------------------------------------------------

2019-07-16 17:21:39 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 17:21:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 158, syntax-valid 92, build-succeeded 28
Fitness: max 0.96(1), min 0.02666666666666667(5), ave 0.7723809523809523
----------------------------------------------------------------

2019-07-16 17:21:42 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 17:21:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 148, syntax-valid 98, build-succeeded 30
Fitness: max 0.9333333333333333(20), min 0.0(5), ave 0.6524444444444445
----------------------------------------------------------------

2019-07-16 17:21:45 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 17:21:48 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 17:21:48 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 17:21:48 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			int x, y;
 		}
 		return res;
 	}
2019-07-16 17:21:49 [main] [INFO]  KGenProgMain - execution time: 39 seconds
