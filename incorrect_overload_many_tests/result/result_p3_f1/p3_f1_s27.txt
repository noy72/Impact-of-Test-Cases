2019-07-16 17:07:49 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3197881881374287411
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 27
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 17:07:53 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 17:07:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 11
Fitness: max 0.9333333333333333(9), min 0.0(2), ave 0.7636363636363637
----------------------------------------------------------------

2019-07-16 17:07:57 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 17:08:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 14
Fitness: max 0.9333333333333333(13), min 0.02666666666666667(1), ave 0.8685714285714285
----------------------------------------------------------------

2019-07-16 17:08:02 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 17:08:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 8
Fitness: max 0.9333333333333333(2), min 0.0(5), ave 0.23666666666666666
----------------------------------------------------------------

2019-07-16 17:08:06 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 17:08:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 11
Fitness: max 0.9333333333333333(7), min 0.0(3), ave 0.5963636363636364
----------------------------------------------------------------

2019-07-16 17:08:09 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 17:08:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 11
Fitness: max 0.9333333333333333(5), min 0.0(3), ave 0.4739393939393939
----------------------------------------------------------------

2019-07-16 17:08:12 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 17:08:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 102, syntax-valid 68, build-succeeded 9
Fitness: max 0.9333333333333333(3), min 0.0(4), ave 0.31703703703703706
----------------------------------------------------------------

2019-07-16 17:08:16 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 17:08:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 102, syntax-valid 66, build-succeeded 10
Fitness: max 0.9333333333333333(5), min 0.0(2), ave 0.4746666666666667
----------------------------------------------------------------

2019-07-16 17:08:19 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 17:08:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 106, syntax-valid 70, build-succeeded 14
Fitness: max 0.9333333333333333(2), min 0.0(6), ave 0.18095238095238095
----------------------------------------------------------------

2019-07-16 17:08:23 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 17:08:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 110, syntax-valid 83, build-succeeded 17
Fitness: max 0.9333333333333333(4), min 0.0(3), ave 0.23529411764705882
----------------------------------------------------------------

2019-07-16 17:08:26 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 17:08:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 112, syntax-valid 69, build-succeeded 21
Fitness: max 0.9333333333333333(8), min 0.0(5), ave 0.40253968253968253
----------------------------------------------------------------

2019-07-16 17:08:29 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 17:08:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 124, syntax-valid 74, build-succeeded 22
Fitness: max 0.9333333333333333(8), min 0.0(4), ave 0.4278787878787879
----------------------------------------------------------------

2019-07-16 17:08:32 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 17:08:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 seconds
Variants: generated 130, syntax-valid 85, build-succeeded 21
Fitness: max 0.9333333333333333(10), min 0.0(1), ave 0.6114285714285714
----------------------------------------------------------------

2019-07-16 17:08:35 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 17:08:39 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 17:08:39 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -6,7 +6,7 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 17:08:40 [main] [INFO]  KGenProgMain - execution time: 46 seconds
