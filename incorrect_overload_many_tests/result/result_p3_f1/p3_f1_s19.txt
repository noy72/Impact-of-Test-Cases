2019-07-16 16:54:31 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2861760164706445725
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 19
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 16:54:34 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:54:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 15
Fitness: max 0.9333333333333333(9), min 0.0(4), ave 0.5635555555555556
----------------------------------------------------------------

2019-07-16 16:54:38 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:54:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 12
Fitness: max 0.9333333333333333(4), min 0.0(7), ave 0.31333333333333335
----------------------------------------------------------------

2019-07-16 16:54:42 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:54:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 79, build-succeeded 16
Fitness: max 0.9333333333333333(6), min 0.0(5), ave 0.35833333333333334
----------------------------------------------------------------

2019-07-16 16:54:46 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:54:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 10
Fitness: max 0.9333333333333333(5), min 0.0(1), ave 0.47733333333333333
----------------------------------------------------------------

2019-07-16 16:54:49 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:54:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 104, syntax-valid 68, build-succeeded 7
Fitness: max 0.9333333333333333(4), min 0.02666666666666667(3), ave 0.5447619047619048
----------------------------------------------------------------

2019-07-16 16:54:52 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:54:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 110, syntax-valid 72, build-succeeded 15
Fitness: max 0.9333333333333333(4), min 0.0(6), ave 0.2577777777777778
----------------------------------------------------------------

2019-07-16 16:54:55 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:54:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 122, syntax-valid 77, build-succeeded 20
Fitness: max 0.9333333333333333(8), min 0.0(5), ave 0.4213333333333333
----------------------------------------------------------------

2019-07-16 16:54:58 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:55:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 120, syntax-valid 67, build-succeeded 16
Fitness: max 0.9333333333333333(4), min 0.0(6), ave 0.2916666666666667
----------------------------------------------------------------

2019-07-16 16:55:01 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 16:55:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 128, syntax-valid 92, build-succeeded 29
Fitness: max 0.9333333333333333(13), min 0.0(3), ave 0.4303448275862069
----------------------------------------------------------------

2019-07-16 16:55:05 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 16:55:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 134, syntax-valid 78, build-succeeded 16
Fitness: max 0.9333333333333333(5), min 0.0(3), ave 0.35333333333333333
----------------------------------------------------------------

2019-07-16 16:55:08 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 16:55:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 128, syntax-valid 90, build-succeeded 19
Fitness: max 0.9333333333333333(12), min 0.0(3), ave 0.5950877192982457
----------------------------------------------------------------

2019-07-16 16:55:12 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 16:55:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 seconds
Variants: generated 158, syntax-valid 77, build-succeeded 15
Fitness: max 0.9333333333333333(9), min 0.0(1), ave 0.6177777777777779
----------------------------------------------------------------

2019-07-16 16:55:15 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 16:55:18 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:55:18 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,7 +7,9 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		int res = 1;
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 16:55:20 [main] [INFO]  KGenProgMain - execution time: 45 seconds
