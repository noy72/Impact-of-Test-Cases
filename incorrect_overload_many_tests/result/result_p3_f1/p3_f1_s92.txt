2019-07-16 18:30:58 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1472230943680676790
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 92
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 18:31:03 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:31:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 9
Fitness: max 0.9333333333333333(5), min 0.0(4), ave 0.5185185185185186
----------------------------------------------------------------

2019-07-16 18:31:06 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:31:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 12
Fitness: max 0.9333333333333333(3), min 0.0(4), ave 0.24444444444444446
----------------------------------------------------------------

2019-07-16 18:31:10 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:31:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 14
Fitness: max 0.9333333333333333(2), min 0.0(6), ave 0.14476190476190479
----------------------------------------------------------------

2019-07-16 18:31:14 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:31:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 10
Fitness: max 0.9333333333333333(5), min 0.0(1), ave 0.47733333333333333
----------------------------------------------------------------

2019-07-16 18:31:16 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:31:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 106, syntax-valid 70, build-succeeded 11
Fitness: max 0.02666666666666667(10), min 0.0(1), ave 0.024242424242424242
----------------------------------------------------------------

2019-07-16 18:31:19 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:31:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 108, syntax-valid 67, build-succeeded 8
Fitness: max 0.9333333333333333(1), min 0.0(3), ave 0.13
----------------------------------------------------------------

2019-07-16 18:31:22 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 18:31:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 110, syntax-valid 68, build-succeeded 13
Fitness: max 0.9333333333333333(3), min 0.0(3), ave 0.28615384615384615
----------------------------------------------------------------

2019-07-16 18:31:25 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 18:31:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 118, syntax-valid 78, build-succeeded 14
Fitness: max 0.9333333333333333(2), min 0.0(4), ave 0.14857142857142858
----------------------------------------------------------------

2019-07-16 18:31:27 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 18:31:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 132, syntax-valid 89, build-succeeded 25
Fitness: max 0.9333333333333333(6), min 0.0(7), ave 0.26613333333333333
----------------------------------------------------------------

2019-07-16 18:31:31 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 18:31:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 156, syntax-valid 93, build-succeeded 33
Fitness: max 0.9333333333333333(5), min 0.0(5), ave 0.16121212121212122
----------------------------------------------------------------

2019-07-16 18:31:34 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 18:31:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 172, syntax-valid 88, build-succeeded 30
Fitness: max 0.9333333333333333(9), min 0.02666666666666667(20), ave 0.3
----------------------------------------------------------------

2019-07-16 18:31:38 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 18:31:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 166, syntax-valid 85, build-succeeded 32
Fitness: max 0.9333333333333333(9), min 0.0(5), ave 0.27875
----------------------------------------------------------------

2019-07-16 18:31:41 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 18:31:44 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:31:44 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -6,7 +6,7 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 18:31:44 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -8,9 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
+		for(int i = 0; i < n; i++)
 			res *= a;
-		}
 		return res;
 	}
 
2019-07-16 18:31:45 [main] [INFO]  KGenProgMain - execution time: 42 seconds
