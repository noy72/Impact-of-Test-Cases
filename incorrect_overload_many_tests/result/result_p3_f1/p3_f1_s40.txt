2019-07-16 17:17:12 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7827609589378133319
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 40
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 17:17:15 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 17:17:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 53, build-succeeded 6
Fitness: max 0.9333333333333333(3), min 0.0(1), ave 0.47555555555555556
----------------------------------------------------------------

2019-07-16 17:17:19 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 17:17:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 15
Fitness: max 0.9333333333333333(8), min 0.0(2), ave 0.5066666666666666
----------------------------------------------------------------

2019-07-16 17:17:22 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 17:17:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 7
Fitness: max 0.9333333333333333(2), min 0.0(2), ave 0.2780952380952381
----------------------------------------------------------------

2019-07-16 17:17:25 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 17:17:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 10
Fitness: max 0.9333333333333333(7), min 0.0(1), ave 0.6586666666666667
----------------------------------------------------------------

2019-07-16 17:17:27 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 17:17:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 14
Fitness: max 0.9333333333333333(3), min 0.0(1), ave 0.21904761904761907
----------------------------------------------------------------

2019-07-16 17:17:30 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 17:17:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 11
Fitness: max 0.9333333333333333(5), min 0.0(1), ave 0.43636363636363634
----------------------------------------------------------------

2019-07-16 17:17:32 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 17:17:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 106, syntax-valid 70, build-succeeded 12
Fitness: max 0.9333333333333333(3), min 0.0(2), ave 0.32666666666666666
----------------------------------------------------------------

2019-07-16 17:17:35 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 17:17:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 120, syntax-valid 78, build-succeeded 21
Fitness: max 0.9333333333333333(8), min 0.0(5), ave 0.3657142857142857
----------------------------------------------------------------

2019-07-16 17:17:39 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 17:17:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 144, syntax-valid 71, build-succeeded 26
Fitness: max 0.9333333333333333(9), min 0.0(6), ave 0.3343589743589744
----------------------------------------------------------------

2019-07-16 17:17:42 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 17:17:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 138, syntax-valid 83, build-succeeded 24
Fitness: max 0.9333333333333333(9), min 0.0(2), ave 0.3844444444444444
----------------------------------------------------------------

2019-07-16 17:17:47 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 17:17:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 154, syntax-valid 77, build-succeeded 17
Fitness: max 0.9333333333333333(10), min 0.0(1), ave 0.5584313725490196
----------------------------------------------------------------

2019-07-16 17:17:50 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 17:17:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 140, syntax-valid 82, build-succeeded 15
Fitness: max 0.9333333333333333(7), min 0.0(2), ave 0.44622222222222224
----------------------------------------------------------------

2019-07-16 17:17:54 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 17:17:57 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 17:17:57 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 17:17:58 [main] [INFO]  KGenProgMain - execution time: 42 seconds
