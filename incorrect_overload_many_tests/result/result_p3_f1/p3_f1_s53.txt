2019-07-16 17:26:41 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3638373066751092557
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 53
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 17:26:44 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 17:26:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 61, build-succeeded 11
Fitness: max 0.9333333333333333(7), min 0.0(3), ave 0.5963636363636364
----------------------------------------------------------------

2019-07-16 17:26:49 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 17:26:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 18
Fitness: max 0.9333333333333333(12), min 0.0(4), ave 0.6251851851851852
----------------------------------------------------------------

2019-07-16 17:26:53 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 17:26:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 14
Fitness: max 0.9333333333333333(6), min 0.0(4), ave 0.40761904761904766
----------------------------------------------------------------

2019-07-16 17:26:57 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 17:27:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 102, syntax-valid 72, build-succeeded 18
Fitness: max 0.9333333333333333(5), min 0.0(6), ave 0.26962962962962966
----------------------------------------------------------------

2019-07-16 17:27:01 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 17:27:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 102, syntax-valid 71, build-succeeded 10
Fitness: max 0.02666666666666667(6), min 0.0(4), ave 0.016
----------------------------------------------------------------

2019-07-16 17:27:05 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 17:27:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 112, syntax-valid 79, build-succeeded 16
Fitness: max 0.9333333333333333(7), min 0.0(5), ave 0.415
----------------------------------------------------------------

2019-07-16 17:27:09 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 17:27:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 134, syntax-valid 75, build-succeeded 16
Fitness: max 0.9333333333333333(5), min 0.0(4), ave 0.30333333333333334
----------------------------------------------------------------

2019-07-16 17:27:13 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 17:27:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 144, syntax-valid 90, build-succeeded 27
Fitness: max 0.9333333333333333(11), min 0.0(5), ave 0.3925925925925926
----------------------------------------------------------------

2019-07-16 17:27:17 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 17:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 148, syntax-valid 75, build-succeeded 14
Fitness: max 0.9333333333333333(9), min 0.02666666666666667(5), ave 0.6095238095238095
----------------------------------------------------------------

2019-07-16 17:27:20 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 17:27:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 seconds
Variants: generated 138, syntax-valid 78, build-succeeded 16
Fitness: max 0.9333333333333333(10), min 0.0(1), ave 0.5916666666666667
----------------------------------------------------------------

2019-07-16 17:27:24 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 17:27:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 44 seconds
Variants: generated 154, syntax-valid 88, build-succeeded 31
Fitness: max 0.9333333333333333(17), min 0.0(4), ave 0.5217204301075269
----------------------------------------------------------------

2019-07-16 17:27:28 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 17:27:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 seconds
Variants: generated 154, syntax-valid 83, build-succeeded 15
Fitness: max 0.9333333333333333(8), min 0.0(4), ave 0.5031111111111112
----------------------------------------------------------------

2019-07-16 17:27:32 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 17:27:35 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 17:27:36 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,9 +7,12 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		ArrayList<Integer> res=new ArrayList<Integer>();
 		if(subList == null) {
 			return -1;
 		}
2019-07-16 17:27:36 [main] [INFO]  KGenProgMain - execution time: 52 seconds
