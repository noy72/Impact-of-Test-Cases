2019-07-16 12:58:51 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7447398111345832229
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 22
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 12:58:54 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 12:58:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 9
Fitness: max 0.6666666666666666(6), min 0.0(1), ave 0.5259259259259259
----------------------------------------------------------------

2019-07-16 12:58:59 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 12:59:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 5
Fitness: max 0.6666666666666666(2), min 0.13333333333333333(2), ave 0.37333333333333335
----------------------------------------------------------------

2019-07-16 12:59:02 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 12:59:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 11
Fitness: max 0.6666666666666666(2), min 0.0(4), ave 0.2303030303030303
----------------------------------------------------------------

2019-07-16 12:59:06 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 12:59:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 13
Fitness: max 0.6666666666666666(3), min 0.0(2), ave 0.26666666666666666
----------------------------------------------------------------

2019-07-16 12:59:09 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 12:59:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 14
Fitness: max 0.6666666666666666(2), min 0.0(2), ave 0.2476190476190476
----------------------------------------------------------------

2019-07-16 12:59:13 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 12:59:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 102, syntax-valid 74, build-succeeded 16
Fitness: max 0.6666666666666666(6), min 0.0(3), ave 0.375
----------------------------------------------------------------

2019-07-16 12:59:16 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 12:59:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 10
Fitness: max 0.6666666666666666(5), min 0.0(1), ave 0.44666666666666666
----------------------------------------------------------------

2019-07-16 12:59:19 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 12:59:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 114, syntax-valid 74, build-succeeded 21
Fitness: max 0.6666666666666666(9), min 0.0(7), ave 0.3238095238095238
----------------------------------------------------------------

2019-07-16 12:59:23 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 12:59:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 128, syntax-valid 84, build-succeeded 24
Fitness: max 0.6666666666666666(7), min 0.0(4), ave 0.2972222222222222
----------------------------------------------------------------

2019-07-16 12:59:27 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 12:59:32 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 12:59:32 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
@@ -16,9 +17,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
+			if(i >= l && i <= h)
 				sum += sample.fact(i);
-			}
 		}
 		return sum;
 	}
2019-07-16 12:59:32 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -24,9 +24,10 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 12:59:32 [main] [INFO]  KGenProgMain - execution time: 38 seconds
