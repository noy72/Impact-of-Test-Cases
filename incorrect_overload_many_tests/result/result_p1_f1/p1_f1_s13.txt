2019-07-16 11:47:54 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work4898720989867458633
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 13
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 11:47:57 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 11:48:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 12
Fitness: max 0.6666666666666666(8), min 0.0(1), ave 0.4777777777777778
----------------------------------------------------------------

2019-07-16 11:48:03 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 11:48:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 16
Fitness: max 0.6666666666666666(7), min 0.0(6), ave 0.31666666666666665
----------------------------------------------------------------

2019-07-16 11:48:07 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 11:48:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 13
Fitness: max 0.6666666666666666(7), min 0.0(2), ave 0.39999999999999997
----------------------------------------------------------------

2019-07-16 11:48:16 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 11:48:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 14
Fitness: max 0.6666666666666666(5), min 0.0(5), ave 0.27619047619047615
----------------------------------------------------------------

2019-07-16 11:48:28 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 11:48:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 11
Fitness: max 0.6666666666666666(1), min 0.0(5), ave 0.13333333333333333
----------------------------------------------------------------

2019-07-16 11:48:38 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 12:19:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 seconds
Variants: generated 108, syntax-valid 70, build-succeeded 15
Fitness: max 0.6666666666666666(3), min 0.0(8), ave 0.1688888888888889
----------------------------------------------------------------

2019-07-16 12:19:09 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 12:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 seconds
Variants: generated 106, syntax-valid 75, build-succeeded 12
Fitness: max 0.6666666666666666(3), min 0.0(6), ave 0.19999999999999998
----------------------------------------------------------------

2019-07-16 12:19:11 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 12:19:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 58 seconds
Variants: generated 118, syntax-valid 77, build-succeeded 18
Fitness: max 0.6666666666666666(8), min 0.0(2), ave 0.3925925925925926
----------------------------------------------------------------

2019-07-16 12:19:15 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 12:19:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 2 seconds
Variants: generated 136, syntax-valid 82, build-succeeded 28
Fitness: max 0.6666666666666666(6), min 0.0(9), ave 0.25476190476190474
----------------------------------------------------------------

2019-07-16 12:19:18 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 12:19:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 5 seconds
Variants: generated 136, syntax-valid 83, build-succeeded 25
Fitness: max 0.6666666666666666(11), min 0.0(3), ave 0.352
----------------------------------------------------------------

2019-07-16 12:19:22 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 12:19:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 19 seconds
Variants: generated 128, syntax-valid 76, build-succeeded 24
Fitness: max 0.6666666666666666(13), min 0.0(2), ave 0.4444444444444444
----------------------------------------------------------------

2019-07-16 12:19:36 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 12:19:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 minutes 38 seconds
Variants: generated 146, syntax-valid 99, build-succeeded 35
Fitness: max 0.6666666666666666(24), min 0.0(1), ave 0.5257142857142857
----------------------------------------------------------------

2019-07-16 12:19:54 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 12:49:06 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 12:49:06 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,7 +7,10 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a, n) % list.size();
 		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 12:49:07 [main] [INFO]  KGenProgMain - execution time: 1 minutes 49 seconds
