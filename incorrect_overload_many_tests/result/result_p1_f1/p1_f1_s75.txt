2019-07-16 14:02:10 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3240193461646492147
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 75
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 14:02:13 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:02:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 11
Fitness: max 0.6666666666666666(7), min 0.0(1), ave 0.4606060606060606
----------------------------------------------------------------

2019-07-16 14:02:17 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:02:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 12
Fitness: max 0.6666666666666666(4), min 0.0(6), ave 0.24444444444444444
----------------------------------------------------------------

2019-07-16 14:02:20 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:02:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 11
Fitness: max 0.6666666666666666(6), min 0.0(3), ave 0.4242424242424242
----------------------------------------------------------------

2019-07-16 14:02:23 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:02:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 7
Fitness: max 0.6666666666666666(1), min 0.0(2), ave 0.17142857142857143
----------------------------------------------------------------

2019-07-16 14:02:27 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:02:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 102, syntax-valid 74, build-succeeded 12
Fitness: max 0.6666666666666666(3), min 0.0(1), ave 0.25555555555555554
----------------------------------------------------------------

2019-07-16 14:02:30 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:02:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 104, syntax-valid 74, build-succeeded 15
Fitness: max 0.6666666666666666(4), min 0.0(5), ave 0.2311111111111111
----------------------------------------------------------------

2019-07-16 14:02:33 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 14:02:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 106, syntax-valid 74, build-succeeded 7
Fitness: max 0.6666666666666666(2), min 0.0(3), ave 0.22857142857142856
----------------------------------------------------------------

2019-07-16 14:02:36 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 14:02:39 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:02:39 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -8,6 +8,9 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 14:02:39 [main] [INFO]  KGenProgMain - execution time: 26 seconds
