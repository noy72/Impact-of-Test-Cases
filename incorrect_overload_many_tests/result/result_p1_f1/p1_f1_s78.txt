2019-07-16 14:04:11 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5151237457598852267
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 78
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 14:04:13 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:04:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 8
Fitness: max 0.6666666666666666(5), min 0.0(2), ave 0.4333333333333333
----------------------------------------------------------------

2019-07-16 14:04:17 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:04:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 16
Fitness: max 0.6666666666666666(9), min 0.0(2), ave 0.41666666666666663
----------------------------------------------------------------

2019-07-16 14:04:20 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:04:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 12
Fitness: max 0.6666666666666666(4), min 0.0(4), ave 0.26666666666666666
----------------------------------------------------------------

2019-07-16 14:04:23 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:04:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 8
Fitness: max 0.6666666666666666(2), min 0.0(1), ave 0.25
----------------------------------------------------------------

2019-07-16 14:04:26 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:04:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 13
Fitness: max 0.6666666666666666(3), min 0.0(7), ave 0.19487179487179487
----------------------------------------------------------------

2019-07-16 14:04:29 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:04:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 108, syntax-valid 75, build-succeeded 17
Fitness: max 0.6666666666666666(8), min 0.0(5), ave 0.3568627450980392
----------------------------------------------------------------

2019-07-16 14:04:32 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 14:04:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 110, syntax-valid 73, build-succeeded 17
Fitness: max 0.6666666666666666(6), min 0.0(3), ave 0.29411764705882354
----------------------------------------------------------------

2019-07-16 14:04:34 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 14:04:38 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:04:38 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -6,8 +6,9 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		int res = 1;
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 14:04:39 [main] [INFO]  KGenProgMain - execution time: 25 seconds
