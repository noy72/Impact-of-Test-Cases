2019-07-16 13:39:46 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8429094013966051502
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 57
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 13:39:49 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 13:39:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 7
Fitness: max 0.6666666666666666(5), min 0.0(1), ave 0.4952380952380952
----------------------------------------------------------------

2019-07-16 13:39:53 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 13:39:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 13
Fitness: max 0.6666666666666666(5), min 0.0(4), ave 0.2974358974358974
----------------------------------------------------------------

2019-07-16 13:39:56 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 13:40:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 16
Fitness: max 0.6666666666666666(5), min 0.0(5), ave 0.2583333333333333
----------------------------------------------------------------

2019-07-16 13:40:00 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 13:40:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 74, build-succeeded 10
Fitness: max 0.6666666666666666(3), min 0.0(3), ave 0.3
----------------------------------------------------------------

2019-07-16 13:40:03 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 13:40:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 63, build-succeeded 10
Fitness: max 0.6666666666666666(3), min 0.0(5), ave 0.2733333333333333
----------------------------------------------------------------

2019-07-16 13:40:07 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 13:40:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 102, syntax-valid 77, build-succeeded 16
Fitness: max 0.6666666666666666(5), min 0.0(5), ave 0.2875
----------------------------------------------------------------

2019-07-16 13:40:11 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 13:40:16 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 13:40:16 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -4,9 +4,10 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 13:40:17 [main] [INFO]  KGenProgMain - execution time: 27 seconds
