2019-07-16 11:18:37 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8162745645526274700
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 9
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 11:18:40 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 11:18:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 7
Fitness: max 0.6666666666666666(4), min 0.0(1), ave 0.419047619047619
----------------------------------------------------------------

2019-07-16 11:18:43 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 11:18:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 9
Fitness: max 0.6666666666666666(3), min 0.0(3), ave 0.26666666666666666
----------------------------------------------------------------

2019-07-16 11:18:47 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 11:18:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 9
Fitness: max 0.6666666666666666(1), min 0.0(3), ave 0.14814814814814814
----------------------------------------------------------------

2019-07-16 11:18:50 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 11:18:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 12
Fitness: max 0.6666666666666666(3), min 0.0(5), ave 0.2111111111111111
----------------------------------------------------------------

2019-07-16 11:18:54 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 11:18:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 102, syntax-valid 72, build-succeeded 13
Fitness: max 0.6666666666666666(4), min 0.0(6), ave 0.2358974358974359
----------------------------------------------------------------

2019-07-16 11:18:57 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 11:19:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 110, syntax-valid 75, build-succeeded 17
Fitness: max 0.6666666666666666(1), min 0.0(7), ave 0.10980392156862745
----------------------------------------------------------------

2019-07-16 11:19:00 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 11:19:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 118, syntax-valid 76, build-succeeded 18
Fitness: max 0.6666666666666666(2), min 0.0(8), ave 0.13333333333333333
----------------------------------------------------------------

2019-07-16 11:19:03 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 11:19:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 128, syntax-valid 78, build-succeeded 20
Fitness: max 0.6666666666666666(4), min 0.0(7), ave 0.21333333333333332
----------------------------------------------------------------

2019-07-16 11:19:06 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 11:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 156, syntax-valid 88, build-succeeded 30
Fitness: max 0.6666666666666666(13), min 0.0(5), ave 0.3377777777777778
----------------------------------------------------------------

2019-07-16 11:19:11 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 11:19:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 134, syntax-valid 72, build-succeeded 20
Fitness: max 0.6666666666666666(7), min 0.0(2), ave 0.31666666666666665
----------------------------------------------------------------

2019-07-16 11:19:14 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 11:19:17 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 11:19:17 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -4,12 +4,15 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		x = sample.pow(a) % list.size();
 		if(subList == null) {
 			return -1;
 		}
2019-07-16 11:19:17 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		Class2 sample = new Class2();
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
@@ -24,9 +25,8 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
+		if(l < 0 || r >= list.size() || l >= r)
 			return null;
-		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 11:19:18 [main] [INFO]  KGenProgMain - execution time: 38 seconds
