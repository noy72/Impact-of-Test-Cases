2019-07-16 13:58:27 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1302188704567554775
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 69
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 13:58:30 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 13:58:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 54, build-succeeded 11
Fitness: max 0.6666666666666666(6), min 0.0(3), ave 0.3878787878787879
----------------------------------------------------------------

2019-07-16 13:58:34 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 13:58:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 7
Fitness: max 0.6666666666666666(5), min 0.13333333333333333(2), ave 0.5142857142857142
----------------------------------------------------------------

2019-07-16 13:58:37 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 13:58:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 8
Fitness: max 0.6666666666666666(3), min 0.0(2), ave 0.3
----------------------------------------------------------------

2019-07-16 13:58:40 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 13:58:43 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 13:58:43 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 13:58:43 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -8,6 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		for (int i = 1; i <= n; i++) {
+		}
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
@@ -24,9 +26,8 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
+		if(l < 0 || r >= list.size() || l >= r)
 			return null;
-		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 13:58:43 [main] [INFO]  KGenProgMain - execution time: 13 seconds
