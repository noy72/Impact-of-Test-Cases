2019-07-16 13:41:08 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work647583331541609794
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 59
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 13:41:11 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 13:41:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 15
Fitness: max 0.6666666666666666(8), min 0.0(4), ave 0.3822222222222222
----------------------------------------------------------------

2019-07-16 13:41:14 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 13:41:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 12
Fitness: max 0.6666666666666666(4), min 0.0(5), ave 0.25555555555555554
----------------------------------------------------------------

2019-07-16 13:41:17 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 13:41:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 11
Fitness: max 0.6666666666666666(5), min 0.13333333333333333(6), ave 0.37575757575757573
----------------------------------------------------------------

2019-07-16 13:41:20 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 13:41:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 9
Fitness: max 0.6666666666666666(5), min 0.0(3), ave 0.38518518518518513
----------------------------------------------------------------

2019-07-16 13:41:23 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 13:41:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 15
Fitness: max 0.6666666666666666(5), min 0.0(5), ave 0.26666666666666666
----------------------------------------------------------------

2019-07-16 13:41:25 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 13:41:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 8
Fitness: max 0.6666666666666666(2), min 0.0(4), ave 0.19999999999999998
----------------------------------------------------------------

2019-07-16 13:41:28 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 13:41:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 104, syntax-valid 78, build-succeeded 9
Fitness: max 0.6666666666666666(5), min 0.13333333333333333(4), ave 0.4296296296296296
----------------------------------------------------------------

2019-07-16 13:41:31 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 13:41:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 104, syntax-valid 73, build-succeeded 15
Fitness: max 0.6666666666666666(4), min 0.0(7), ave 0.21333333333333332
----------------------------------------------------------------

2019-07-16 13:41:34 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 13:41:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 118, syntax-valid 73, build-succeeded 18
Fitness: max 0.6666666666666666(3), min 0.0(8), ave 0.16296296296296295
----------------------------------------------------------------

2019-07-16 13:41:37 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 13:41:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 128, syntax-valid 74, build-succeeded 18
Fitness: max 0.6666666666666666(6), min 0.0(4), ave 0.28148148148148144
----------------------------------------------------------------

2019-07-16 13:41:40 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 13:41:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 128, syntax-valid 75, build-succeeded 20
Fitness: max 0.6666666666666666(8), min 0.0(2), ave 0.3333333333333333
----------------------------------------------------------------

2019-07-16 13:41:43 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 13:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 128, syntax-valid 79, build-succeeded 21
Fitness: max 0.6666666666666666(10), min 0.0(3), ave 0.3682539682539682
----------------------------------------------------------------

2019-07-16 13:41:47 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 13:41:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 seconds
Variants: generated 140, syntax-valid 90, build-succeeded 23
Fitness: max 0.6666666666666666(9), min 0.0(2), ave 0.34782608695652173
----------------------------------------------------------------

2019-07-16 13:41:50 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2019-07-16 13:41:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 seconds
Variants: generated 136, syntax-valid 80, build-succeeded 16
Fitness: max 0.6666666666666666(12), min 0.0(1), ave 0.5249999999999999
----------------------------------------------------------------

2019-07-16 13:41:54 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2019-07-16 13:41:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 46 seconds
Variants: generated 136, syntax-valid 74, build-succeeded 11
Fitness: max 0.6666666666666666(7), min 0.0(2), ave 0.44848484848484843
----------------------------------------------------------------

2019-07-16 13:41:57 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2019-07-16 13:42:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 49 seconds
Variants: generated 132, syntax-valid 80, build-succeeded 25
Fitness: max 0.6666666666666666(12), min 0.0(6), ave 0.4106666666666666
----------------------------------------------------------------

2019-07-16 13:42:00 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2019-07-16 13:42:03 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 13:42:03 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,6 +7,9 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		ArrayList<Integer> res=new ArrayList<Integer>();
+		x = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 13:42:03 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		ArrayList<Integer> subList=new ArrayList<>();
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 13:42:04 [main] [INFO]  KGenProgMain - execution time: 53 seconds
