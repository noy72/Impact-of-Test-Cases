2019-07-16 14:08:49 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8842069445066515663
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 87
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 14:08:51 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:08:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 51, build-succeeded 8
Fitness: max 0.6666666666666666(3), min 0.0(3), ave 0.2833333333333333
----------------------------------------------------------------

2019-07-16 14:08:54 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:08:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 13
Fitness: max 0.6666666666666666(3), min 0.0(6), ave 0.19487179487179487
----------------------------------------------------------------

2019-07-16 14:08:58 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:09:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 11
Fitness: max 0.6666666666666666(7), min 0.0(2), ave 0.44848484848484843
----------------------------------------------------------------

2019-07-16 14:09:00 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:09:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 10
Fitness: max 0.6666666666666666(1), min 0.0(7), ave 0.13333333333333333
----------------------------------------------------------------

2019-07-16 14:09:03 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:09:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 12
Fitness: max 0.6666666666666666(4), min 0.0(6), ave 0.24444444444444444
----------------------------------------------------------------

2019-07-16 14:09:05 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:09:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 102, syntax-valid 70, build-succeeded 12
Fitness: max 0.6666666666666666(2), min 0.0(6), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 14:09:08 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 14:09:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 114, syntax-valid 85, build-succeeded 23
Fitness: max 0.6666666666666666(8), min 0.0(8), ave 0.2927536231884058
----------------------------------------------------------------

2019-07-16 14:09:12 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 14:09:15 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:09:15 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -6,7 +6,7 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 14:09:15 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -8,9 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
+		for(int i = 0; i < n; i++)
 			res *= a;
-		}
 		return res;
 	}
 
2019-07-16 14:09:15 [main] [INFO]  KGenProgMain - execution time: 24 seconds
