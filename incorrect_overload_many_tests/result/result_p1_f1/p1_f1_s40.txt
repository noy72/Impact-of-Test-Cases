2019-07-16 13:17:43 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6247430863341628162
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 40
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 13:17:46 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 13:17:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 53, build-succeeded 6
Fitness: max 0.6666666666666666(3), min 0.0(1), ave 0.37777777777777777
----------------------------------------------------------------

2019-07-16 13:17:50 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 13:17:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 13
Fitness: max 0.6666666666666666(7), min 0.0(3), ave 0.38974358974358975
----------------------------------------------------------------

2019-07-16 13:17:55 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 13:17:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 9
Fitness: max 0.6666666666666666(4), min 0.0(2), ave 0.34074074074074073
----------------------------------------------------------------

2019-07-16 13:17:59 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 13:18:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 15
Fitness: max 0.6666666666666666(6), min 0.0(4), ave 0.31111111111111106
----------------------------------------------------------------

2019-07-16 13:18:03 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 13:18:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 13
Fitness: max 0.6666666666666666(3), min 0.0(1), ave 0.24615384615384614
----------------------------------------------------------------

2019-07-16 13:18:06 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 13:18:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 106, syntax-valid 74, build-succeeded 10
Fitness: max 0.6666666666666666(3), min 0.0(2), ave 0.26666666666666666
----------------------------------------------------------------

2019-07-16 13:18:10 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 13:18:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 110, syntax-valid 69, build-succeeded 11
Fitness: max 0.6666666666666666(2), min 0.0(3), ave 0.18787878787878787
----------------------------------------------------------------

2019-07-16 13:18:12 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 13:18:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 118, syntax-valid 75, build-succeeded 17
Fitness: max 0.6666666666666666(4), min 0.0(7), ave 0.20392156862745098
----------------------------------------------------------------

2019-07-16 13:18:16 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 13:18:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 130, syntax-valid 73, build-succeeded 25
Fitness: max 0.6666666666666666(9), min 0.0(10), ave 0.2693333333333333
----------------------------------------------------------------

2019-07-16 13:18:19 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 13:18:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 146, syntax-valid 80, build-succeeded 22
Fitness: max 0.6666666666666666(8), min 0.0(4), ave 0.303030303030303
----------------------------------------------------------------

2019-07-16 13:18:22 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 13:18:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 seconds
Variants: generated 150, syntax-valid 80, build-succeeded 19
Fitness: max 0.6666666666666666(6), min 0.0(5), ave 0.26666666666666666
----------------------------------------------------------------

2019-07-16 13:18:25 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 13:18:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 seconds
Variants: generated 152, syntax-valid 86, build-succeeded 15
Fitness: max 0.6666666666666666(6), min 0.13333333333333333(9), ave 0.3466666666666666
----------------------------------------------------------------

2019-07-16 13:18:29 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 13:18:31 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 13:18:31 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 13:18:32 [main] [INFO]  KGenProgMain - execution time: 46 seconds
