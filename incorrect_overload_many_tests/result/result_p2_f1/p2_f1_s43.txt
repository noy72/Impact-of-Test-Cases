2019-07-16 15:13:34 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5443597226578125691
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 43
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 15:13:37 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:13:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 11
Fitness: max 0.8888888888888888(8), min 0.0(1), ave 0.6545454545454544
----------------------------------------------------------------

2019-07-16 15:13:41 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:13:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 11
Fitness: max 0.8888888888888888(6), min 0.0(2), ave 0.5636363636363636
----------------------------------------------------------------

2019-07-16 15:13:44 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:13:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 14
Fitness: max 0.8888888888888888(5), min 0.0(4), ave 0.3841269841269841
----------------------------------------------------------------

2019-07-16 15:13:48 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:13:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 22
Fitness: max 0.8888888888888888(11), min 0.0(5), ave 0.507070707070707
----------------------------------------------------------------

2019-07-16 15:13:51 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:13:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 104, syntax-valid 64, build-succeeded 13
Fitness: max 0.8888888888888888(5), min 0.0(4), ave 0.38290598290598293
----------------------------------------------------------------

2019-07-16 15:13:53 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 15:13:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 110, syntax-valid 71, build-succeeded 21
Fitness: max 0.8888888888888888(8), min 0.0(3), ave 0.3957671957671957
----------------------------------------------------------------

2019-07-16 15:13:56 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 15:13:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 112, syntax-valid 72, build-succeeded 17
Fitness: max 0.8888888888888888(6), min 0.0(4), ave 0.39738562091503266
----------------------------------------------------------------

2019-07-16 15:13:58 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 15:14:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 128, syntax-valid 87, build-succeeded 24
Fitness: max 0.9333333333333333(1), min 0.0(4), ave 0.39351851851851855
----------------------------------------------------------------

2019-07-16 15:14:01 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 15:14:05 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:14:05 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 15:14:05 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -25,7 +25,9 @@
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
 		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
2019-07-16 15:14:06 [main] [INFO]  KGenProgMain - execution time: 28 seconds
