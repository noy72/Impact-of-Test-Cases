2019-07-16 15:10:19 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1168935930520121222
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 40
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 15:10:23 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:10:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 53, build-succeeded 6
Fitness: max 0.8888888888888888(3), min 0.0(1), ave 0.45925925925925926
----------------------------------------------------------------

2019-07-16 15:10:26 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:10:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 15
Fitness: max 0.8888888888888888(8), min 0.0(2), ave 0.4888888888888889
----------------------------------------------------------------

2019-07-16 15:10:30 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:10:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 7
Fitness: max 0.8888888888888888(2), min 0.0(2), ave 0.273015873015873
----------------------------------------------------------------

2019-07-16 15:10:33 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:10:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 10
Fitness: max 0.8888888888888888(7), min 0.0(1), ave 0.6311111111111111
----------------------------------------------------------------

2019-07-16 15:10:36 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:10:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 14
Fitness: max 0.8888888888888888(3), min 0.0(1), ave 0.22222222222222224
----------------------------------------------------------------

2019-07-16 15:10:39 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 15:10:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 9
Fitness: max 0.8888888888888888(5), min 0.044444444444444446(4), ave 0.5135802469135802
----------------------------------------------------------------

2019-07-16 15:10:42 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 15:10:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 106, syntax-valid 74, build-succeeded 13
Fitness: max 0.8888888888888888(3), min 0.0(3), ave 0.28376068376068375
----------------------------------------------------------------

2019-07-16 15:10:45 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 15:10:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 116, syntax-valid 79, build-succeeded 21
Fitness: max 0.8888888888888888(7), min 0.0(6), ave 0.3132275132275132
----------------------------------------------------------------

2019-07-16 15:10:49 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 15:10:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 136, syntax-valid 75, build-succeeded 21
Fitness: max 0.8888888888888888(6), min 0.0(4), ave 0.2761904761904762
----------------------------------------------------------------

2019-07-16 15:10:52 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 15:10:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 134, syntax-valid 86, build-succeeded 20
Fitness: max 0.8888888888888888(10), min 0.0(1), ave 0.4822222222222222
----------------------------------------------------------------

2019-07-16 15:10:56 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 15:11:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 142, syntax-valid 87, build-succeeded 23
Fitness: max 0.8888888888888888(11), min 0.044444444444444446(12), ave 0.4483091787439613
----------------------------------------------------------------

2019-07-16 15:11:01 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 15:11:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 seconds
Variants: generated 144, syntax-valid 78, build-succeeded 18
Fitness: max 0.8888888888888888(9), min 0.0(3), ave 0.4975308641975309
----------------------------------------------------------------

2019-07-16 15:11:05 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 15:11:08 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:11:08 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 15:11:09 [main] [INFO]  KGenProgMain - execution time: 46 seconds
