2019-07-16 16:01:48 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work4580302047699012255
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 75
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 16:01:52 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:01:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 11
Fitness: max 0.8888888888888888(7), min 0.0(1), ave 0.5777777777777777
----------------------------------------------------------------

2019-07-16 16:01:56 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:01:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 11
Fitness: max 0.8888888888888888(3), min 0.0(6), ave 0.2505050505050505
----------------------------------------------------------------

2019-07-16 16:01:59 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:02:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 8
Fitness: max 0.8888888888888888(4), min 0.0(1), ave 0.5527777777777777
----------------------------------------------------------------

2019-07-16 16:02:03 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:02:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 61, build-succeeded 11
Fitness: max 0.8888888888888888(2), min 0.0(4), ave 0.18181818181818182
----------------------------------------------------------------

2019-07-16 16:02:06 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:02:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 9
Fitness: max 0.8888888888888888(2), min 0.0(1), ave 0.22716049382716047
----------------------------------------------------------------

2019-07-16 16:02:08 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:02:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 102, syntax-valid 64, build-succeeded 14
Fitness: max 0.8888888888888888(3), min 0.0(4), ave 0.21269841269841266
----------------------------------------------------------------

2019-07-16 16:02:11 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:02:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 104, syntax-valid 76, build-succeeded 12
Fitness: max 0.8888888888888888(4), min 0.0(4), ave 0.37222222222222223
----------------------------------------------------------------

2019-07-16 16:02:14 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:02:17 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:02:17 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 16:02:17 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			Class2 sample = new Class2();
 		}
 		return res;
 	}
2019-07-16 16:02:18 [main] [INFO]  KGenProgMain - execution time: 25 seconds
