2019-07-16 15:40:56 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work330876279148990597
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 60
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload_many_tests
================================================================
2019-07-16 15:41:00 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:41:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 9
Fitness: max 0.8888888888888888(5), min 0.0(2), ave 0.5037037037037037
----------------------------------------------------------------

2019-07-16 15:41:04 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:41:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 11
Fitness: max 0.8888888888888888(3), min 0.0(3), ave 0.2626262626262626
----------------------------------------------------------------

2019-07-16 15:41:07 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:41:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 11
Fitness: max 0.8888888888888888(4), min 0.0(1), ave 0.35353535353535354
----------------------------------------------------------------

2019-07-16 15:41:11 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:41:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 14
Fitness: max 0.8888888888888888(4), min 0.0(2), ave 0.27936507936507937
----------------------------------------------------------------

2019-07-16 15:41:14 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:41:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 102, syntax-valid 68, build-succeeded 12
Fitness: max 0.8888888888888888(3), min 0.0(2), ave 0.24814814814814815
----------------------------------------------------------------

2019-07-16 15:41:17 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 15:41:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 104, syntax-valid 67, build-succeeded 6
Fitness: max 0.8888888888888888(3), min 0.0(1), ave 0.45925925925925926
----------------------------------------------------------------

2019-07-16 15:41:20 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 15:41:23 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:41:23 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class1
+++ incorrect_overload_many_tests.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 15:41:23 [main] [INFO]  Patch - 
--- incorrect_overload_many_tests.Class2
+++ incorrect_overload_many_tests.Class2
@@ -8,8 +8,10 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int sum = 0;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			int x, y;
 		}
 		return res;
 	}
2019-07-16 15:41:24 [main] [INFO]  KGenProgMain - execution time: 24 seconds
