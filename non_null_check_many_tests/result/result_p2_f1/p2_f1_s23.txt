2019-07-16 16:57:35 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6203051908818283117
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT6M
testTimeLimit = PT1M
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 23
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/non_null_check_many_tests
================================================================
2019-07-16 16:57:38 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:57:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 6
Fitness: max 0.8888888888888888(5), min 0.044444444444444446(1), ave 0.7481481481481481
----------------------------------------------------------------

2019-07-16 16:57:41 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:57:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 5
Fitness: max 0.8888888888888888(4), min 0.26666666666666666(1), ave 0.7644444444444444
----------------------------------------------------------------

2019-07-16 16:57:44 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:57:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 10
Fitness: max 0.8888888888888888(3), min 0.26666666666666666(7), ave 0.4533333333333333
----------------------------------------------------------------

2019-07-16 16:57:46 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:57:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 5
Fitness: max 0.8888888888888888(1), min 0.0(1), ave 0.3377777777777778
----------------------------------------------------------------

2019-07-16 16:57:49 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:57:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 102, syntax-valid 68, build-succeeded 11
Fitness: max 0.8888888888888888(6), min 0.26666666666666666(5), ave 0.606060606060606
----------------------------------------------------------------

2019-07-16 16:57:52 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:57:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 108, syntax-valid 59, build-succeeded 10
Fitness: max 0.8888888888888888(4), min 0.0(2), ave 0.4622222222222222
----------------------------------------------------------------

2019-07-16 16:57:54 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:57:56 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:57:57 [main] [INFO]  Patch - 
--- non_null_check_many_tests.Class1
+++ non_null_check_many_tests.Class1
@@ -15,6 +15,9 @@
 		// }
 
 		int sum = 0;
+		if (subList == null) {
+			return -1;
+		}
 		for(int i : subList) {
 			if(i >= l && i <= h) {
 				sum += sample.fact(i);
2019-07-16 16:57:57 [main] [INFO]  KGenProgMain - execution time: 19 seconds
