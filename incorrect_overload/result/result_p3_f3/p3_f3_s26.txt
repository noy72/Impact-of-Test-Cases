2019-07-17 03:10:36 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2362791447945169021
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 26
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 03:10:38 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 03:10:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 9
Fitness: max 0.5(5), min 0.0(2), ave 0.3222222222222222
----------------------------------------------------------------

2019-07-17 03:10:41 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 03:10:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 13
Fitness: max 0.5(6), min 0.0(1), ave 0.3230769230769231
----------------------------------------------------------------

2019-07-17 03:10:44 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 03:10:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 13
Fitness: max 0.5(6), min 0.0(2), ave 0.3076923076923077
----------------------------------------------------------------

2019-07-17 03:10:47 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 03:10:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 6
Fitness: max 0.5(3), min 0.0(2), ave 0.2833333333333333
----------------------------------------------------------------

2019-07-17 03:10:50 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 03:10:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 13
Fitness: max 0.5(3), min 0.0(7), ave 0.16153846153846155
----------------------------------------------------------------

2019-07-17 03:10:52 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 03:10:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 104, syntax-valid 60, build-succeeded 9
Fitness: max 0.5(3), min 0.0(1), ave 0.2777777777777778
----------------------------------------------------------------

2019-07-17 03:10:54 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 03:10:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 110, syntax-valid 73, build-succeeded 16
Fitness: max 0.55(1), min 0.0(6), ave 0.240625
----------------------------------------------------------------

2019-07-17 03:10:57 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 03:10:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 124, syntax-valid 79, build-succeeded 22
Fitness: max 0.5(9), min 0.0(5), ave 0.27954545454545454
----------------------------------------------------------------

2019-07-17 03:10:59 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 03:11:02 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 03:11:02 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,9 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		int res = 1;
+		x = sample.pow(a) % list.size();
+		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-17 03:11:02 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int x, y;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-17 03:11:02 [main] [INFO]  KGenProgMain - execution time: 24 seconds
