2019-07-17 03:52:27 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7512071695936146203
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 84
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 03:52:29 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 03:52:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 49, build-succeeded 6
Fitness: max 0.5(3), min 0.0(2), ave 0.2833333333333333
----------------------------------------------------------------

2019-07-17 03:52:31 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 03:52:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 12
Fitness: max 0.5(4), min 0.0(2), ave 0.26666666666666666
----------------------------------------------------------------

2019-07-17 03:52:33 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 03:52:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 10
Fitness: max 0.55(1), min 0.0(4), ave 0.185
----------------------------------------------------------------

2019-07-17 03:52:36 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 03:52:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 9
Fitness: max 0.55(1), min 0.0(1), ave 0.2833333333333334
----------------------------------------------------------------

2019-07-17 03:52:39 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 03:52:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 15
Fitness: max 0.55(1), min 0.0(3), ave 0.17333333333333334
----------------------------------------------------------------

2019-07-17 03:52:42 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 03:52:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 108, syntax-valid 69, build-succeeded 16
Fitness: max 0.5(1), min 0.0(5), ave 0.1375
----------------------------------------------------------------

2019-07-17 03:52:44 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 03:52:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 118, syntax-valid 74, build-succeeded 17
Fitness: max 0.55(1), min 0.0(6), ave 0.15000000000000002
----------------------------------------------------------------

2019-07-17 03:52:47 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 03:52:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 134, syntax-valid 75, build-succeeded 27
Fitness: max 0.5(4), min 0.0(5), ave 0.20740740740740743
----------------------------------------------------------------

2019-07-17 03:52:50 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 03:52:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 146, syntax-valid 84, build-succeeded 30
Fitness: max 0.55(1), min 0.0(7), ave 0.23
----------------------------------------------------------------

2019-07-17 03:52:53 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 03:52:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 166, syntax-valid 89, build-succeeded 37
Fitness: max 0.55(1), min 0.0(3), ave 0.2662162162162162
----------------------------------------------------------------

2019-07-17 03:52:57 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 03:53:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 154, syntax-valid 83, build-succeeded 25
Fitness: max 0.5(8), min 0.0(4), ave 0.264
----------------------------------------------------------------

2019-07-17 03:53:01 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 03:53:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 148, syntax-valid 82, build-succeeded 23
Fitness: max 0.55(1), min 0.0(3), ave 0.27391304347826084
----------------------------------------------------------------

2019-07-17 03:53:04 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 03:53:09 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 03:53:09 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,13 +6,14 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-17 03:53:09 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -11,6 +11,7 @@
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
+		Class2 sample = new Class2();
 		return res;
 	}
 
2019-07-17 03:53:10 [main] [INFO]  KGenProgMain - execution time: 41 seconds
