2019-07-17 03:05:43 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8781423773395326695
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 22
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 03:05:46 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 03:05:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 9
Fitness: max 0.5(6), min 0.0(1), ave 0.38333333333333336
----------------------------------------------------------------

2019-07-17 03:05:49 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 03:05:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 58, build-succeeded 5
Fitness: max 0.5(2), min 0.0(1), ave 0.27999999999999997
----------------------------------------------------------------

2019-07-17 03:05:52 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 03:05:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 14
Fitness: max 0.5(2), min 0.0(5), ave 0.17500000000000002
----------------------------------------------------------------

2019-07-17 03:05:55 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 03:05:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 10
Fitness: max 0.55(1), min 0.0(3), ave 0.29500000000000004
----------------------------------------------------------------

2019-07-17 03:05:58 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 03:06:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 102, syntax-valid 79, build-succeeded 15
Fitness: max 0.55(1), min 0.0(3), ave 0.26333333333333336
----------------------------------------------------------------

2019-07-17 03:06:02 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 03:06:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 72, build-succeeded 17
Fitness: max 0.5(5), min 0.0(5), ave 0.22941176470588237
----------------------------------------------------------------

2019-07-17 03:06:04 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 03:06:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 108, syntax-valid 74, build-succeeded 18
Fitness: max 0.5(7), min 0.0(6), ave 0.26666666666666666
----------------------------------------------------------------

2019-07-17 03:06:08 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 03:06:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 132, syntax-valid 81, build-succeeded 25
Fitness: max 0.55(1), min 0.0(8), ave 0.20400000000000001
----------------------------------------------------------------

2019-07-17 03:06:11 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 03:06:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 144, syntax-valid 97, build-succeeded 45
Fitness: max 0.8(1), min 0.0(12), ave 0.25333333333333335
----------------------------------------------------------------

2019-07-17 03:06:15 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 03:06:18 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 03:06:18 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-17 03:06:18 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		for (int i = 1; i <= n; i++) {
+		}
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
@@ -24,9 +26,10 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-17 03:06:19 [main] [INFO]  KGenProgMain - execution time: 33 seconds
