2019-07-17 03:33:56 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8899846345679156938
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 58
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 03:33:58 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 03:34:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 9
Fitness: max 0.5(6), min 0.0(2), ave 0.35555555555555557
----------------------------------------------------------------

2019-07-17 03:34:01 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 03:34:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 15
Fitness: max 0.5(9), min 0.0(4), ave 0.3266666666666667
----------------------------------------------------------------

2019-07-17 03:34:05 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 03:34:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 16
Fitness: max 0.5(10), min 0.0(4), ave 0.3375
----------------------------------------------------------------

2019-07-17 03:34:08 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 03:34:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 12
Fitness: max 0.5(6), min 0.0(3), ave 0.3
----------------------------------------------------------------

2019-07-17 03:34:10 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 03:34:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 102, syntax-valid 81, build-succeeded 13
Fitness: max 0.5(4), min 0.0(6), ave 0.2
----------------------------------------------------------------

2019-07-17 03:34:13 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 03:34:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 102, syntax-valid 78, build-succeeded 15
Fitness: max 0.5(4), min 0.0(4), ave 0.22666666666666666
----------------------------------------------------------------

2019-07-17 03:34:16 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 03:34:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 112, syntax-valid 73, build-succeeded 12
Fitness: max 0.5(3), min 0.0(7), ave 0.15833333333333333
----------------------------------------------------------------

2019-07-17 03:34:18 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 03:34:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 126, syntax-valid 68, build-succeeded 14
Fitness: max 0.5(3), min 0.0(5), ave 0.19285714285714287
----------------------------------------------------------------

2019-07-17 03:34:21 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 03:34:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 134, syntax-valid 86, build-succeeded 24
Fitness: max 0.5(8), min 0.0(6), ave 0.25
----------------------------------------------------------------

2019-07-17 03:34:24 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 03:34:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 134, syntax-valid 83, build-succeeded 24
Fitness: max 0.5(10), min 0.0(5), ave 0.2833333333333333
----------------------------------------------------------------

2019-07-17 03:34:26 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 03:34:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 132, syntax-valid 77, build-succeeded 22
Fitness: max 0.5(10), min 0.0(3), ave 0.3090909090909091
----------------------------------------------------------------

2019-07-17 03:34:29 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 03:34:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 134, syntax-valid 69, build-succeeded 18
Fitness: max 0.5(3), min 0.0(4), ave 0.20555555555555557
----------------------------------------------------------------

2019-07-17 03:34:32 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 03:34:34 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 03:34:34 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,8 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		ArrayList<Integer> res=new ArrayList<Integer>();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-17 03:34:34 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			Class2 sample = new Class2();
 		}
 		return res;
 	}
2019-07-17 03:34:35 [main] [INFO]  KGenProgMain - execution time: 36 seconds
