2019-07-17 03:48:47 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8643228441296487386
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 78
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 03:48:50 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 03:48:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 8
Fitness: max 0.5(5), min 0.0(2), ave 0.3375
----------------------------------------------------------------

2019-07-17 03:48:53 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 03:48:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 15
Fitness: max 0.5(9), min 0.0(2), ave 0.35333333333333333
----------------------------------------------------------------

2019-07-17 03:48:57 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 03:48:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 12
Fitness: max 0.5(4), min 0.0(5), ave 0.21666666666666667
----------------------------------------------------------------

2019-07-17 03:48:59 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 03:49:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 6
Fitness: max 0.5(2), min 0.0(1), ave 0.26666666666666666
----------------------------------------------------------------

2019-07-17 03:49:01 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 03:49:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 13
Fitness: max 0.5(3), min 0.0(7), ave 0.16538461538461538
----------------------------------------------------------------

2019-07-17 03:49:04 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 03:49:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 110, syntax-valid 74, build-succeeded 22
Fitness: max 0.5(7), min 0.0(7), ave 0.2318181818181818
----------------------------------------------------------------

2019-07-17 03:49:06 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 03:49:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 116, syntax-valid 83, build-succeeded 23
Fitness: max 0.5(7), min 0.0(8), ave 0.21521739130434783
----------------------------------------------------------------

2019-07-17 03:49:09 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 03:49:11 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 03:49:11 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,8 +6,9 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		int res = 1;
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-17 03:49:12 [main] [INFO]  KGenProgMain - execution time: 21 seconds
