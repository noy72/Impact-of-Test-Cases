2019-07-17 00:40:25 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6434096971060250953
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 63
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 00:40:27 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 00:40:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 1 seconds
Variants: generated 100, syntax-valid 49, build-succeeded 4
Fitness: max 0.19047619047619047(1), min 0.047619047619047616(3), ave 0.08333333333333333
----------------------------------------------------------------

2019-07-17 00:40:29 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 00:40:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 58, build-succeeded 6
Fitness: max 0.19047619047619047(1), min 0.0(1), ave 0.06349206349206349
----------------------------------------------------------------

2019-07-17 00:40:31 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 00:40:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 7
Fitness: max 0.19047619047619047(4), min 0.0(2), ave 0.11564625850340136
----------------------------------------------------------------

2019-07-17 00:40:34 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 00:40:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 13
Fitness: max 0.19047619047619047(6), min 0.0(5), ave 0.09523809523809525
----------------------------------------------------------------

2019-07-17 00:40:36 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 00:40:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 12
Fitness: max 0.19047619047619047(7), min 0.0(5), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-17 00:40:38 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 00:40:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 108, syntax-valid 67, build-succeeded 14
Fitness: max 0.19047619047619047(5), min 0.0(8), ave 0.07142857142857142
----------------------------------------------------------------

2019-07-17 00:40:40 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 00:40:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 110, syntax-valid 74, build-succeeded 15
Fitness: max 0.19047619047619047(8), min 0.0(6), ave 0.10793650793650794
----------------------------------------------------------------

2019-07-17 00:40:42 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 00:40:44 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 00:40:44 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-17 00:40:45 [main] [INFO]  KGenProgMain - execution time: 17 seconds
