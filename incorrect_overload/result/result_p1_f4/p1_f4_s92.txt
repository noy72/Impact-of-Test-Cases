2019-07-17 01:15:27 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work4906444755727551867
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 92
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 01:15:30 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 01:15:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 9
Fitness: max 0.047619047619047616(5), min 0.0(4), ave 0.026455026455026454
----------------------------------------------------------------

2019-07-17 01:15:34 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 01:15:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 16
Fitness: max 0.19047619047619047(5), min 0.0(5), ave 0.07738095238095238
----------------------------------------------------------------

2019-07-17 01:15:37 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 01:15:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 11
Fitness: max 0.19047619047619047(5), min 0.0(3), ave 0.09956709956709955
----------------------------------------------------------------

2019-07-17 01:15:40 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 01:15:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 7
Fitness: max 0.19047619047619047(3), min 0.0(2), ave 0.09523809523809523
----------------------------------------------------------------

2019-07-17 01:15:43 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 01:15:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 71, build-succeeded 13
Fitness: max 0.19047619047619047(3), min 0.0(7), ave 0.05494505494505494
----------------------------------------------------------------

2019-07-17 01:15:45 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 01:15:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 104, syntax-valid 69, build-succeeded 12
Fitness: max 0.19047619047619047(3), min 0.0(7), ave 0.059523809523809514
----------------------------------------------------------------

2019-07-17 01:15:48 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 01:15:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 116, syntax-valid 74, build-succeeded 18
Fitness: max 0.9523809523809523(1), min 0.0(11), ave 0.10846560846560846
----------------------------------------------------------------

2019-07-17 01:15:51 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 01:15:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 124, syntax-valid 80, build-succeeded 26
Fitness: max 0.9523809523809523(1), min 0.0(15), ave 0.08241758241758242
----------------------------------------------------------------

2019-07-17 01:15:54 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 01:15:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 140, syntax-valid 90, build-succeeded 23
Fitness: max 0.19047619047619047(8), min 0.0(11), ave 0.07453416149068323
----------------------------------------------------------------

2019-07-17 01:15:58 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 01:16:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 136, syntax-valid 88, build-succeeded 24
Fitness: max 0.19047619047619047(9), min 0.0(10), ave 0.08134920634920635
----------------------------------------------------------------

2019-07-17 01:16:02 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 01:16:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 138, syntax-valid 91, build-succeeded 27
Fitness: max 0.9523809523809523(1), min 0.0(5), ave 0.1657848324514991
----------------------------------------------------------------

2019-07-17 01:16:06 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 01:16:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 156, syntax-valid 86, build-succeeded 22
Fitness: max 0.9523809523809523(2), min 0.047619047619047616(5), ave 0.22943722943722944
----------------------------------------------------------------

2019-07-17 01:16:09 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 01:16:12 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 01:16:12 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,8 +6,8 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-17 01:16:12 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,9 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
+		for(int i = 0; i < n; i++)
 			res *= a;
-		}
 		return res;
 	}
 
2019-07-17 01:16:13 [main] [INFO]  KGenProgMain - execution time: 42 seconds
