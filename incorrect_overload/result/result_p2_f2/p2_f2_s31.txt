2019-07-17 01:58:24 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7734486605504016825
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 31
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 01:58:26 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 01:58:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 54, build-succeeded 8
Fitness: max 0.5(4), min 0.0(2), ave 0.3
----------------------------------------------------------------

2019-07-17 01:58:28 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 01:58:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 10
Fitness: max 0.5(3), min 0.0(4), ave 0.21000000000000002
----------------------------------------------------------------

2019-07-17 01:58:31 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 01:58:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 16
Fitness: max 0.5(5), min 0.0(2), ave 0.26875
----------------------------------------------------------------

2019-07-17 01:58:34 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 01:58:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 10
Fitness: max 0.5(2), min 0.0(3), ave 0.2
----------------------------------------------------------------

2019-07-17 01:58:37 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 01:58:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 13
Fitness: max 0.5(4), min 0.0(4), ave 0.23076923076923078
----------------------------------------------------------------

2019-07-17 01:58:39 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 01:58:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 108, syntax-valid 76, build-succeeded 15
Fitness: max 0.5(2), min 0.0(4), ave 0.18666666666666668
----------------------------------------------------------------

2019-07-17 01:58:41 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 01:58:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 110, syntax-valid 83, build-succeeded 17
Fitness: max 0.5(3), min 0.0(4), ave 0.20588235294117646
----------------------------------------------------------------

2019-07-17 01:58:44 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 01:58:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 132, syntax-valid 80, build-succeeded 20
Fitness: max 0.5(5), min 0.0(4), ave 0.23500000000000001
----------------------------------------------------------------

2019-07-17 01:58:46 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 01:58:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 136, syntax-valid 81, build-succeeded 21
Fitness: max 0.5(3), min 0.0(5), ave 0.1952380952380952
----------------------------------------------------------------

2019-07-17 01:58:49 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 01:58:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 156, syntax-valid 84, build-succeeded 20
Fitness: max 0.5(2), min 0.0(2), ave 0.21000000000000002
----------------------------------------------------------------

2019-07-17 01:58:51 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 01:58:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 142, syntax-valid 84, build-succeeded 26
Fitness: max 0.5(6), min 0.0(4), ave 0.23846153846153847
----------------------------------------------------------------

2019-07-17 01:58:53 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 01:58:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 152, syntax-valid 73, build-succeeded 17
Fitness: max 0.5(4), min 0.0(6), ave 0.19999999999999998
----------------------------------------------------------------

2019-07-17 01:58:56 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 01:58:58 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 01:58:58 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-17 01:58:58 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		Class2 sample = new Class2();
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-17 01:58:59 [main] [INFO]  KGenProgMain - execution time: 32 seconds
