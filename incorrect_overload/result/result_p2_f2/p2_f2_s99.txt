2019-07-17 02:48:42 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work709204584830288069
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 99
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 02:48:45 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 02:48:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 8
Fitness: max 0.5(4), min 0.0(3), ave 0.275
----------------------------------------------------------------

2019-07-17 02:48:48 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 02:48:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 12
Fitness: max 0.5(1), min 0.0(8), ave 0.09166666666666667
----------------------------------------------------------------

2019-07-17 02:48:51 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 02:48:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 15
Fitness: max 0.5(6), min 0.0(7), ave 0.22666666666666666
----------------------------------------------------------------

2019-07-17 02:48:54 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 02:48:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 11
Fitness: max 0.5(2), min 0.0(5), ave 0.16363636363636364
----------------------------------------------------------------

2019-07-17 02:48:57 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 02:49:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 14
Fitness: max 0.5(5), min 0.0(7), ave 0.22142857142857145
----------------------------------------------------------------

2019-07-17 02:49:00 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 02:49:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 106, syntax-valid 82, build-succeeded 16
Fitness: max 0.5(4), min 0.0(8), ave 0.1875
----------------------------------------------------------------

2019-07-17 02:49:02 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 02:49:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 110, syntax-valid 80, build-succeeded 19
Fitness: max 0.5(5), min 0.0(10), ave 0.17368421052631577
----------------------------------------------------------------

2019-07-17 02:49:05 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 02:49:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 136, syntax-valid 93, build-succeeded 35
Fitness: max 0.5(14), min 0.0(14), ave 0.24000000000000002
----------------------------------------------------------------

2019-07-17 02:49:08 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 02:49:10 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 02:49:10 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,12 +6,15 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		int res = 1;
 		if(subList == null) {
-			return -1;
+			if (subList == null) {
+				return -1;
+			}
 		}
 
 		int sum = 0;
2019-07-17 02:49:10 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,9 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
+		for(int i = 0; i < n; i++)
 			res *= a;
-		}
 		return res;
 	}
 
2019-07-17 02:49:11 [main] [INFO]  KGenProgMain - execution time: 26 seconds
