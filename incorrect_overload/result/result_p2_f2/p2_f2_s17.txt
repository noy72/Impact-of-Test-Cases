2019-07-17 01:42:41 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8089353685447021597
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 17
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 01:42:43 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 01:42:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 7
Fitness: max 0.5(4), min 0.0(2), ave 0.31428571428571433
----------------------------------------------------------------

2019-07-17 01:42:46 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 01:42:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 12
Fitness: max 0.5(5), min 0.0(6), ave 0.225
----------------------------------------------------------------

2019-07-17 01:42:49 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 01:42:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 20
Fitness: max 0.5(5), min 0.0(9), ave 0.185
----------------------------------------------------------------

2019-07-17 01:42:51 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 01:42:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 12
Fitness: max 0.5(1), min 0.0(5), ave 0.14166666666666666
----------------------------------------------------------------

2019-07-17 01:42:54 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 01:42:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 104, syntax-valid 75, build-succeeded 15
Fitness: max 0.5(4), min 0.0(6), ave 0.2
----------------------------------------------------------------

2019-07-17 01:42:57 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 01:43:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 108, syntax-valid 69, build-succeeded 17
Fitness: max 0.5(4), min 0.0(4), ave 0.22352941176470587
----------------------------------------------------------------

2019-07-17 01:43:00 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 01:43:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 116, syntax-valid 82, build-succeeded 20
Fitness: max 0.5(6), min 0.0(6), ave 0.22999999999999998
----------------------------------------------------------------

2019-07-17 01:43:03 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 01:43:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 136, syntax-valid 71, build-succeeded 16
Fitness: max 0.5(3), min 0.0(4), ave 0.20625
----------------------------------------------------------------

2019-07-17 01:43:06 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 01:43:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 146, syntax-valid 84, build-succeeded 26
Fitness: max 0.5(7), min 0.0(4), ave 0.25
----------------------------------------------------------------

2019-07-17 01:43:08 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 01:43:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 144, syntax-valid 77, build-succeeded 28
Fitness: max 0.5(12), min 0.0(2), ave 0.31428571428571433
----------------------------------------------------------------

2019-07-17 01:43:11 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 01:43:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 158, syntax-valid 80, build-succeeded 23
Fitness: max 0.5(11), min 0.0(2), ave 0.32608695652173914
----------------------------------------------------------------

2019-07-17 01:43:14 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 01:43:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 150, syntax-valid 88, build-succeeded 27
Fitness: max 0.5(14), min 0.0(5), ave 0.3185185185185185
----------------------------------------------------------------

2019-07-17 01:43:16 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 01:43:19 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 01:43:19 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,8 +6,9 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-17 01:43:19 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		Class2 sample = new Class2();
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-17 01:43:20 [main] [INFO]  KGenProgMain - execution time: 36 seconds
