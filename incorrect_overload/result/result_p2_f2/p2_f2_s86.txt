2019-07-17 02:34:20 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7269203269076518089
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 86
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 02:34:22 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 02:34:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 12
Fitness: max 0.5(7), min 0.0(2), ave 0.3416666666666666
----------------------------------------------------------------

2019-07-17 02:34:25 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 02:34:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 12
Fitness: max 0.5(6), min 0.0(3), ave 0.3
----------------------------------------------------------------

2019-07-17 02:34:28 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 02:34:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 20
Fitness: max 0.5(10), min 0.0(4), ave 0.31
----------------------------------------------------------------

2019-07-17 02:34:31 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 02:34:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 9
Fitness: max 0.5(5), min 0.0(2), ave 0.3222222222222222
----------------------------------------------------------------

2019-07-17 02:34:34 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 02:34:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 102, syntax-valid 78, build-succeeded 20
Fitness: max 0.5(10), min 0.0(4), ave 0.31
----------------------------------------------------------------

2019-07-17 02:34:37 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 02:34:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 108, syntax-valid 63, build-succeeded 10
Fitness: max 0.5(1), min 0.0(3), ave 0.17
----------------------------------------------------------------

2019-07-17 02:34:40 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 02:34:43 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 02:34:43 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,7 +6,7 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-17 02:34:43 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		ArrayList<Integer> list=new ArrayList<>();
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-17 02:34:44 [main] [INFO]  KGenProgMain - execution time: 22 seconds
