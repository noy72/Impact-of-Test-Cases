2019-07-17 02:01:43 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8088607078800975278
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 37
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 02:01:45 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 02:01:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 7
Fitness: max 0.5(4), min 0.0(2), ave 0.31428571428571433
----------------------------------------------------------------

2019-07-17 02:01:48 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 02:01:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 13
Fitness: max 0.5(3), min 0.0(9), ave 0.13076923076923078
----------------------------------------------------------------

2019-07-17 02:01:51 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 02:01:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 7
Fitness: max 0.5(3), min 0.0(2), ave 0.2714285714285714
----------------------------------------------------------------

2019-07-17 02:01:53 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 02:01:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 12
Fitness: max 0.5(4), min 0.0(4), ave 0.24166666666666667
----------------------------------------------------------------

2019-07-17 02:01:56 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 02:01:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 7
Fitness: max 0.5(3), min 0.0(2), ave 0.2714285714285714
----------------------------------------------------------------

2019-07-17 02:01:58 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 02:02:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 66, build-succeeded 14
Fitness: max 0.5(5), min 0.0(2), ave 0.2857142857142857
----------------------------------------------------------------

2019-07-17 02:02:00 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 02:02:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 110, syntax-valid 83, build-succeeded 22
Fitness: max 0.5(6), min 0.0(8), ave 0.21363636363636365
----------------------------------------------------------------

2019-07-17 02:02:02 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 02:02:05 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 02:02:05 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,10 +6,12 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		y = sample.pow(a, n) % list.size();
 		if(subList == null) {
 			return -1;
 		}
2019-07-17 02:02:06 [main] [INFO]  KGenProgMain - execution time: 20 seconds
