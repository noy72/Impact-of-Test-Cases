2019-07-16 15:25:33 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work144878373236254411
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 59
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 15:25:35 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:25:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 15
Fitness: max 0.8333333333333334(8), min 0.0(4), ave 0.4777777777777778
----------------------------------------------------------------

2019-07-16 15:25:39 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:25:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 12
Fitness: max 0.8333333333333334(4), min 0.0(5), ave 0.3194444444444445
----------------------------------------------------------------

2019-07-16 15:25:42 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:25:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 12
Fitness: max 0.8333333333333334(5), min 0.0(2), ave 0.4166666666666667
----------------------------------------------------------------

2019-07-16 15:25:44 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:25:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 11
Fitness: max 0.8333333333333334(4), min 0.0(4), ave 0.3484848484848485
----------------------------------------------------------------

2019-07-16 15:25:47 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:25:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 11
Fitness: max 0.8333333333333334(4), min 0.0(2), ave 0.37878787878787884
----------------------------------------------------------------

2019-07-16 15:25:50 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 15:25:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 102, syntax-valid 70, build-succeeded 14
Fitness: max 0.8333333333333334(4), min 0.0(4), ave 0.3095238095238095
----------------------------------------------------------------

2019-07-16 15:25:53 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 15:25:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 9
Fitness: max 0.8333333333333334(2), min 0.0(2), ave 0.2962962962962963
----------------------------------------------------------------

2019-07-16 15:25:56 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 15:25:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 112, syntax-valid 74, build-succeeded 21
Fitness: max 0.8333333333333334(7), min 0.0(7), ave 0.3333333333333333
----------------------------------------------------------------

2019-07-16 15:25:58 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 15:26:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 112, syntax-valid 72, build-succeeded 18
Fitness: max 0.8333333333333334(7), min 0.0(6), ave 0.3703703703703704
----------------------------------------------------------------

2019-07-16 15:26:01 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 15:26:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 126, syntax-valid 83, build-succeeded 22
Fitness: max 0.8333333333333334(8), min 0.0(3), ave 0.38636363636363635
----------------------------------------------------------------

2019-07-16 15:26:03 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 15:26:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 126, syntax-valid 78, build-succeeded 28
Fitness: max 0.8333333333333334(12), min 0.0(5), ave 0.42857142857142855
----------------------------------------------------------------

2019-07-16 15:26:07 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 15:26:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 116, syntax-valid 72, build-succeeded 8
Fitness: max 0.8333333333333334(5), min 0.16666666666666666(3), ave 0.5833333333333334
----------------------------------------------------------------

2019-07-16 15:26:09 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 15:26:13 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:26:13 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,12 +7,15 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
-			return -1;
-		}
+		if(subList == null)
+			if (subList == null) {
+				return -1;
+			}
+		y = sample.pow(a, n) % list.size();
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 15:26:14 [main] [INFO]  KGenProgMain - execution time: 38 seconds
