2019-07-16 15:00:30 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6407312442234164374
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 36
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 15:00:32 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 10
Fitness: max 0.8333333333333334(2), min 0.0(7), ave 0.18333333333333335
----------------------------------------------------------------

2019-07-16 15:00:36 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:00:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 7
Fitness: max 0.8333333333333334(3), min 0.0(3), ave 0.380952380952381
----------------------------------------------------------------

2019-07-16 15:00:39 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:00:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 13
Fitness: max 0.8333333333333334(3), min 0.0(7), ave 0.23076923076923078
----------------------------------------------------------------

2019-07-16 15:00:42 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:00:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 72, build-succeeded 12
Fitness: max 0.8333333333333334(3), min 0.0(3), ave 0.2916666666666667
----------------------------------------------------------------

2019-07-16 15:00:45 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:00:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 104, syntax-valid 76, build-succeeded 12
Fitness: max 0.8333333333333334(1), min 0.0(4), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 15:00:48 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 15:00:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 104, syntax-valid 78, build-succeeded 10
Fitness: max 0.8333333333333334(4), min 0.0(3), ave 0.38333333333333336
----------------------------------------------------------------

2019-07-16 15:00:50 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 15:00:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 104, syntax-valid 75, build-succeeded 13
Fitness: max 0.8333333333333334(3), min 0.0(5), ave 0.25641025641025644
----------------------------------------------------------------

2019-07-16 15:00:53 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 15:00:55 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:00:55 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 15:00:55 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int x, y;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 15:00:56 [main] [INFO]  KGenProgMain - execution time: 23 seconds
