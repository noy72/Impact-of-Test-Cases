2019-07-16 14:41:30 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1803834756626463432
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 9
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 14:41:32 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:41:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 7
Fitness: max 0.8333333333333334(4), min 0.0(1), ave 0.5238095238095238
----------------------------------------------------------------

2019-07-16 14:41:35 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:41:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 9
Fitness: max 0.8333333333333334(3), min 0.0(3), ave 0.3333333333333333
----------------------------------------------------------------

2019-07-16 14:41:38 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:41:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 10
Fitness: max 0.8333333333333334(1), min 0.0(4), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 14:41:41 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:41:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 13
Fitness: max 0.8333333333333334(3), min 0.0(6), ave 0.2435897435897436
----------------------------------------------------------------

2019-07-16 14:41:44 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:41:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 104, syntax-valid 72, build-succeeded 12
Fitness: max 0.8333333333333334(3), min 0.0(6), ave 0.25
----------------------------------------------------------------

2019-07-16 14:41:47 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:41:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 104, syntax-valid 69, build-succeeded 14
Fitness: max 0.8333333333333334(1), min 0.0(4), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 14:41:50 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 14:41:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 116, syntax-valid 63, build-succeeded 10
Fitness: max 0.8333333333333334(3), min 0.0(2), ave 0.33333333333333337
----------------------------------------------------------------

2019-07-16 14:41:53 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 14:41:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 122, syntax-valid 74, build-succeeded 13
Fitness: max 0.8333333333333334(2), min 0.0(6), ave 0.19230769230769232
----------------------------------------------------------------

2019-07-16 14:41:55 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 14:41:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 132, syntax-valid 82, build-succeeded 21
Fitness: max 0.8333333333333334(5), min 0.0(7), ave 0.2698412698412699
----------------------------------------------------------------

2019-07-16 14:41:58 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 14:42:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 152, syntax-valid 90, build-succeeded 27
Fitness: max 0.8333333333333334(8), min 0.0(8), ave 0.3148148148148148
----------------------------------------------------------------

2019-07-16 14:42:02 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 14:42:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 140, syntax-valid 81, build-succeeded 19
Fitness: max 0.8333333333333334(8), min 0.0(3), ave 0.42105263157894735
----------------------------------------------------------------

2019-07-16 14:42:05 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 14:42:09 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:42:09 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,10 +6,11 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		int res = 1;
 		if(subList == null) {
 			return -1;
 		}
2019-07-16 14:42:09 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		Class2 sample = new Class2();
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
@@ -24,9 +25,8 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
+		if(l < 0 || r >= list.size() || l >= r)
 			return null;
-		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 14:42:10 [main] [INFO]  KGenProgMain - execution time: 37 seconds
