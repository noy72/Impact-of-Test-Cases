2019-07-16 14:51:27 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3930104273010307802
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 22
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 14:51:29 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:51:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 9
Fitness: max 0.8333333333333334(6), min 0.0(1), ave 0.6481481481481483
----------------------------------------------------------------

2019-07-16 14:51:32 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:51:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 58, build-succeeded 7
Fitness: max 0.8333333333333334(3), min 0.16666666666666666(2), ave 0.5476190476190477
----------------------------------------------------------------

2019-07-16 14:51:35 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:51:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 16
Fitness: max 0.8333333333333334(2), min 0.0(4), ave 0.3020833333333333
----------------------------------------------------------------

2019-07-16 14:51:38 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:51:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 11
Fitness: max 0.8333333333333334(5), min 0.0(2), ave 0.4848484848484848
----------------------------------------------------------------

2019-07-16 14:51:41 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:51:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 66, build-succeeded 14
Fitness: max 0.8333333333333334(5), min 0.0(1), ave 0.511904761904762
----------------------------------------------------------------

2019-07-16 14:51:44 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:51:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 102, syntax-valid 71, build-succeeded 18
Fitness: max 0.8333333333333334(8), min 0.0(4), ave 0.4722222222222222
----------------------------------------------------------------

2019-07-16 14:51:47 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 14:51:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 112, syntax-valid 76, build-succeeded 20
Fitness: max 0.8333333333333334(7), min 0.0(2), ave 0.475
----------------------------------------------------------------

2019-07-16 14:51:49 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 14:51:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 128, syntax-valid 78, build-succeeded 23
Fitness: max 0.8333333333333334(6), min 0.0(3), ave 0.3768115942028985
----------------------------------------------------------------

2019-07-16 14:51:52 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 14:51:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 146, syntax-valid 98, build-succeeded 34
Fitness: max 0.8333333333333334(12), min 0.0(2), ave 0.4313725490196078
----------------------------------------------------------------

2019-07-16 14:51:55 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 14:51:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 142, syntax-valid 96, build-succeeded 32
Fitness: max 0.8333333333333334(16), min 0.0(6), ave 0.5520833333333334
----------------------------------------------------------------

2019-07-16 14:51:58 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 14:52:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 162, syntax-valid 83, build-succeeded 30
Fitness: max 0.8333333333333334(19), min 0.0(4), ave 0.6333333333333333
----------------------------------------------------------------

2019-07-16 14:52:01 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 14:52:04 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:52:04 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,8 +8,10 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		y = sample.pow(a, n) % list.size();
 		if(subList == null) {
 			return -1;
 		}
2019-07-16 14:52:04 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,10 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 14:52:04 [main] [INFO]  KGenProgMain - execution time: 35 seconds
