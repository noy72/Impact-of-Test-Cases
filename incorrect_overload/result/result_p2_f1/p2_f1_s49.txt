2019-07-16 15:15:55 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1224110703045918214
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 49
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 15:15:57 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:16:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 11
Fitness: max 0.8333333333333334(8), min 0.0(2), ave 0.6212121212121212
----------------------------------------------------------------

2019-07-16 15:16:01 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:16:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 13
Fitness: max 0.8333333333333334(6), min 0.0(6), ave 0.39743589743589747
----------------------------------------------------------------

2019-07-16 15:16:05 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:16:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 10
Fitness: max 0.8333333333333334(8), min 0.0(2), ave 0.6666666666666667
----------------------------------------------------------------

2019-07-16 15:16:08 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:16:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 16
Fitness: max 0.8333333333333334(12), min 0.0(2), ave 0.6458333333333334
----------------------------------------------------------------

2019-07-16 15:16:11 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:16:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 104, syntax-valid 67, build-succeeded 14
Fitness: max 0.8333333333333334(5), min 0.0(3), ave 0.36904761904761907
----------------------------------------------------------------

2019-07-16 15:16:14 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 15:16:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 104, syntax-valid 66, build-succeeded 9
Fitness: max 0.8333333333333334(2), min 0.0(3), ave 0.2592592592592593
----------------------------------------------------------------

2019-07-16 15:16:16 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 15:16:19 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:16:19 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,10 +6,11 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		y = sample.pow(a, n) % list.size();
 		if(subList == null) {
 			return -1;
 		}
2019-07-16 15:16:19 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		for (int i = 0; i < n; i++) {
+		}
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 15:16:20 [main] [INFO]  KGenProgMain - execution time: 22 seconds
