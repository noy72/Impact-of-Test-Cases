2019-07-16 15:56:49 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8866423389063270495
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 91
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 15:56:53 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:56:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 50, build-succeeded 9
Fitness: max 0.8333333333333334(5), min 0.0(1), ave 0.5185185185185186
----------------------------------------------------------------

2019-07-16 15:56:56 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:56:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 12
Fitness: max 0.8333333333333334(8), min 0.0(1), ave 0.5972222222222222
----------------------------------------------------------------

2019-07-16 15:56:59 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:57:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 9
Fitness: max 0.8333333333333334(5), min 0.0(2), ave 0.5
----------------------------------------------------------------

2019-07-16 15:57:03 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:57:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 9
Fitness: max 0.8333333333333334(6), min 0.16666666666666666(3), ave 0.6111111111111112
----------------------------------------------------------------

2019-07-16 15:57:06 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:57:09 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:57:09 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,9 +7,12 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		y = sample.pow(a, n) % list.size();
 		if(subList == null) {
 			return -1;
 		}
2019-07-16 15:57:09 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,9 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
+		for(int i = 0; i < n; i++)
 			res *= a;
-		}
 		return res;
 	}
 
2019-07-16 15:57:09 [main] [INFO]  KGenProgMain - execution time: 16 seconds
