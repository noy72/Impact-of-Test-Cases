2019-07-16 15:38:31 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7184010598824255432
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 73
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 15:38:34 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:38:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 11
Fitness: max 0.8333333333333334(7), min 0.0(1), ave 0.5757575757575758
----------------------------------------------------------------

2019-07-16 15:38:37 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:38:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 12
Fitness: max 0.8333333333333334(4), min 0.0(4), ave 0.3333333333333333
----------------------------------------------------------------

2019-07-16 15:38:40 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:38:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 12
Fitness: max 0.8333333333333334(3), min 0.0(2), ave 0.3194444444444444
----------------------------------------------------------------

2019-07-16 15:38:43 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:38:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 15
Fitness: max 0.8333333333333334(6), min 0.0(5), ave 0.3777777777777778
----------------------------------------------------------------

2019-07-16 15:38:47 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:38:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 14
Fitness: max 0.8333333333333334(6), min 0.0(4), ave 0.40476190476190477
----------------------------------------------------------------

2019-07-16 15:38:50 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 15:38:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 108, syntax-valid 81, build-succeeded 22
Fitness: max 0.8333333333333334(8), min 0.0(7), ave 0.3560606060606061
----------------------------------------------------------------

2019-07-16 15:38:53 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 15:38:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 124, syntax-valid 83, build-succeeded 23
Fitness: max 0.8333333333333334(10), min 0.0(3), ave 0.43478260869565216
----------------------------------------------------------------

2019-07-16 15:38:57 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 15:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 128, syntax-valid 79, build-succeeded 22
Fitness: max 0.8333333333333334(8), min 0.0(5), ave 0.37121212121212116
----------------------------------------------------------------

2019-07-16 15:39:00 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 15:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 128, syntax-valid 80, build-succeeded 18
Fitness: max 0.8333333333333334(8), min 0.0(1), ave 0.45370370370370366
----------------------------------------------------------------

2019-07-16 15:39:03 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 15:39:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 136, syntax-valid 89, build-succeeded 23
Fitness: max 0.8333333333333334(13), min 0.0(2), ave 0.5289855072463768
----------------------------------------------------------------

2019-07-16 15:39:06 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 15:39:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 124, syntax-valid 78, build-succeeded 17
Fitness: max 0.8333333333333334(13), min 0.0(2), ave 0.6568627450980393
----------------------------------------------------------------

2019-07-16 15:39:10 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 15:39:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 seconds
Variants: generated 126, syntax-valid 78, build-succeeded 25
Fitness: max 0.8333333333333334(15), min 0.0(3), ave 0.5733333333333334
----------------------------------------------------------------

2019-07-16 15:39:13 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 15:39:16 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:39:16 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 15:39:16 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -9,6 +9,7 @@
 	public int pow(int a, int n) {
 		int res = 1;
 		for(int i = 0; i < n; i++) {
+			int sum = 0;
 			res *= a;
 		}
 		return res;
2019-07-16 15:39:17 [main] [INFO]  KGenProgMain - execution time: 42 seconds
