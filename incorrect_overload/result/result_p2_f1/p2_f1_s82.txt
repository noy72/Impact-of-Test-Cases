2019-07-16 15:47:19 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2095516914156252591
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 82
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 15:47:22 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 15:47:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 13
Fitness: max 0.8333333333333334(10), min 0.0(1), ave 0.6666666666666667
----------------------------------------------------------------

2019-07-16 15:47:26 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 15:47:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 11
Fitness: max 0.8333333333333334(3), min 0.0(3), ave 0.303030303030303
----------------------------------------------------------------

2019-07-16 15:47:30 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 15:47:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 10
Fitness: max 0.8333333333333334(3), min 0.0(4), ave 0.3
----------------------------------------------------------------

2019-07-16 15:47:34 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 15:47:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 6
Fitness: max 0.16666666666666666(4), min 0.0(2), ave 0.1111111111111111
----------------------------------------------------------------

2019-07-16 15:47:38 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 15:47:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 68, build-succeeded 13
Fitness: max 0.8333333333333334(5), min 0.0(1), ave 0.4102564102564103
----------------------------------------------------------------

2019-07-16 15:47:41 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 15:47:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 102, syntax-valid 62, build-succeeded 12
Fitness: max 0.16666666666666666(6), min 0.0(6), ave 0.08333333333333333
----------------------------------------------------------------

2019-07-16 15:47:44 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 15:47:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 108, syntax-valid 78, build-succeeded 9
Fitness: max 0.8333333333333334(4), min 0.0(1), ave 0.4444444444444444
----------------------------------------------------------------

2019-07-16 15:47:47 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 15:47:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 112, syntax-valid 71, build-succeeded 16
Fitness: max 0.8333333333333334(6), min 0.0(1), ave 0.40625
----------------------------------------------------------------

2019-07-16 15:47:50 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 15:47:54 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 15:47:54 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 15:47:54 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			Class2 sample = new Class2();
 		}
 		return res;
 	}
2019-07-16 15:47:55 [main] [INFO]  KGenProgMain - execution time: 32 seconds
