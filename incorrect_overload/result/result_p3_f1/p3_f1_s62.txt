2019-07-16 16:58:13 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work800264227108695336
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 62
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 16:58:15 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:58:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 50, build-succeeded 9
Fitness: max 0.9090909090909091(7), min 0.0(1), ave 0.7171717171717171
----------------------------------------------------------------

2019-07-16 16:58:18 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:58:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 14
Fitness: max 0.9090909090909091(3), min 0.0(7), ave 0.22077922077922077
----------------------------------------------------------------

2019-07-16 16:58:21 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:58:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 7
Fitness: max 0.9090909090909091(1), min 0.0(3), ave 0.16883116883116883
----------------------------------------------------------------

2019-07-16 16:58:23 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:58:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 11
Fitness: max 0.9090909090909091(1), min 0.0(7), ave 0.10743801652892562
----------------------------------------------------------------

2019-07-16 16:58:26 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:58:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 71, build-succeeded 14
Fitness: max 0.9090909090909091(4), min 0.0(3), ave 0.3051948051948052
----------------------------------------------------------------

2019-07-16 16:58:28 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:58:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 110, syntax-valid 83, build-succeeded 15
Fitness: max 0.9090909090909091(4), min 0.0(3), ave 0.2909090909090909
----------------------------------------------------------------

2019-07-16 16:58:31 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:58:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 110, syntax-valid 69, build-succeeded 15
Fitness: max 0.9090909090909091(6), min 0.0(6), ave 0.38181818181818183
----------------------------------------------------------------

2019-07-16 16:58:33 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:58:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 118, syntax-valid 76, build-succeeded 17
Fitness: max 0.9090909090909091(3), min 0.0(6), ave 0.20320855614973263
----------------------------------------------------------------

2019-07-16 16:58:36 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 16:58:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 142, syntax-valid 82, build-succeeded 23
Fitness: max 0.9090909090909091(2), min 0.0(4), ave 0.16205533596837943
----------------------------------------------------------------

2019-07-16 16:58:39 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 16:58:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 144, syntax-valid 89, build-succeeded 26
Fitness: max 0.9090909090909091(7), min 0.0(4), ave 0.2972027972027972
----------------------------------------------------------------

2019-07-16 16:58:42 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 16:58:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 158, syntax-valid 90, build-succeeded 25
Fitness: max 0.9090909090909091(7), min 0.09090909090909091(18), ave 0.32
----------------------------------------------------------------

2019-07-16 16:58:45 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 16:58:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 150, syntax-valid 75, build-succeeded 15
Fitness: max 0.9090909090909091(6), min 0.0(1), ave 0.43636363636363634
----------------------------------------------------------------

2019-07-16 16:58:48 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 16:58:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 148, syntax-valid 84, build-succeeded 24
Fitness: max 0.9090909090909091(12), min 0.0(3), ave 0.4886363636363636
----------------------------------------------------------------

2019-07-16 16:58:50 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2019-07-16 16:58:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 154, syntax-valid 77, build-succeeded 20
Fitness: max 0.9090909090909091(10), min 0.0(2), ave 0.4909090909090909
----------------------------------------------------------------

2019-07-16 16:58:53 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2019-07-16 16:58:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 seconds
Variants: generated 142, syntax-valid 77, build-succeeded 17
Fitness: max 0.9090909090909091(11), min 0.0(3), ave 0.6042780748663102
----------------------------------------------------------------

2019-07-16 16:58:56 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2019-07-16 16:58:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 43 seconds
Variants: generated 150, syntax-valid 84, build-succeeded 23
Fitness: max 0.9090909090909091(17), min 0.0(1), ave 0.7114624505928854
----------------------------------------------------------------

2019-07-16 16:58:59 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2019-07-16 16:59:03 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:59:03 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -4,10 +4,12 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
@@ -15,11 +17,6 @@
 		}
 
 		int sum = 0;
-		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(i);
-			}
-		}
 		return sum;
 	}
 
2019-07-16 16:59:03 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,10 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 16:59:03 [main] [INFO]  KGenProgMain - execution time: 48 seconds
