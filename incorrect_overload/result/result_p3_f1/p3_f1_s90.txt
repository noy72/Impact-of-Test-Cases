2019-07-16 17:25:08 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5005467995959172914
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 90
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 17:25:10 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 17:25:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 58, build-succeeded 7
Fitness: max 0.9090909090909091(5), min 0.0(1), ave 0.6623376623376623
----------------------------------------------------------------

2019-07-16 17:25:14 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 17:25:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 9
Fitness: max 0.9090909090909091(4), min 0.0(1), ave 0.4444444444444444
----------------------------------------------------------------

2019-07-16 17:25:17 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 17:25:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 10
Fitness: max 0.9090909090909091(3), min 0.0(3), ave 0.3090909090909091
----------------------------------------------------------------

2019-07-16 17:25:21 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 17:25:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 14
Fitness: max 0.9090909090909091(6), min 0.0(4), ave 0.4155844155844156
----------------------------------------------------------------

2019-07-16 17:25:24 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 17:25:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 104, syntax-valid 69, build-succeeded 14
Fitness: max 0.9090909090909091(4), min 0.0(5), ave 0.2922077922077922
----------------------------------------------------------------

2019-07-16 17:25:27 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 17:25:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 106, syntax-valid 74, build-succeeded 13
Fitness: max 0.9090909090909091(7), min 0.0(2), ave 0.5174825174825175
----------------------------------------------------------------

2019-07-16 17:25:30 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 17:25:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 122, syntax-valid 72, build-succeeded 14
Fitness: max 0.9090909090909091(3), min 0.0(4), ave 0.24025974025974026
----------------------------------------------------------------

2019-07-16 17:25:33 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 17:25:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 130, syntax-valid 77, build-succeeded 22
Fitness: max 0.9090909090909091(5), min 0.0(7), ave 0.24793388429752064
----------------------------------------------------------------

2019-07-16 17:25:36 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 17:25:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 144, syntax-valid 89, build-succeeded 26
Fitness: max 0.9090909090909091(7), min 0.0(8), ave 0.28321678321678323
----------------------------------------------------------------

2019-07-16 17:25:39 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 17:25:43 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 17:25:43 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,12 +7,14 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
-			return -1;
-		}
+		if(subList == null)
+			if (subList == null) {
+				return -1;
+			}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 17:25:43 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int sum = 0;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 17:25:44 [main] [INFO]  KGenProgMain - execution time: 33 seconds
