2019-07-16 16:36:41 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8134899972153206198
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 36
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 16:36:43 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:36:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 10
Fitness: max 0.9090909090909091(2), min 0.0(7), ave 0.1909090909090909
----------------------------------------------------------------

2019-07-16 16:36:46 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:36:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 7
Fitness: max 0.9090909090909091(3), min 0.0(3), ave 0.4025974025974026
----------------------------------------------------------------

2019-07-16 16:36:49 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:36:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 14
Fitness: max 0.9090909090909091(3), min 0.0(8), ave 0.21428571428571427
----------------------------------------------------------------

2019-07-16 16:36:52 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:36:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 102, syntax-valid 75, build-succeeded 12
Fitness: max 0.9090909090909091(3), min 0.0(6), ave 0.25
----------------------------------------------------------------

2019-07-16 16:36:56 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:36:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 9
Fitness: max 0.9090909090909091(1), min 0.0(4), ave 0.1414141414141414
----------------------------------------------------------------

2019-07-16 16:36:59 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:37:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 104, syntax-valid 81, build-succeeded 14
Fitness: max 0.9090909090909091(3), min 0.0(6), ave 0.22727272727272727
----------------------------------------------------------------

2019-07-16 16:37:03 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:37:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 108, syntax-valid 78, build-succeeded 18
Fitness: max 0.9090909090909091(2), min 0.0(9), ave 0.13636363636363635
----------------------------------------------------------------

2019-07-16 16:37:06 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:37:09 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:37:09 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 16:37:09 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int x, y;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 16:37:10 [main] [INFO]  KGenProgMain - execution time: 26 seconds
