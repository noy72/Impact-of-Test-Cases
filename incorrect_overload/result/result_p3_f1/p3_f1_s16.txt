2019-07-16 16:20:55 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5993802186407913251
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 16
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 16:20:57 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:21:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 6
Fitness: max 0.9090909090909091(3), min 0.0(1), ave 0.48484848484848486
----------------------------------------------------------------

2019-07-16 16:21:01 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:21:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 14
Fitness: max 0.9090909090909091(5), min 0.0(1), ave 0.3766233766233766
----------------------------------------------------------------

2019-07-16 16:21:04 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:21:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 13
Fitness: max 0.9090909090909091(2), min 0.0(4), ave 0.1888111888111888
----------------------------------------------------------------

2019-07-16 16:21:07 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:21:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 10
Fitness: max 0.9090909090909091(2), min 0.0(3), ave 0.22727272727272724
----------------------------------------------------------------

2019-07-16 16:21:10 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:21:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 16
Fitness: max 0.9090909090909091(2), min 0.0(7), ave 0.1534090909090909
----------------------------------------------------------------

2019-07-16 16:21:14 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:21:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 102, syntax-valid 66, build-succeeded 10
Fitness: max 0.09090909090909091(5), min 0.0(5), ave 0.045454545454545456
----------------------------------------------------------------

2019-07-16 16:21:17 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:21:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 110, syntax-valid 71, build-succeeded 21
Fitness: max 0.9090909090909091(4), min 0.0(3), ave 0.23376623376623376
----------------------------------------------------------------

2019-07-16 16:21:21 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:21:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 116, syntax-valid 78, build-succeeded 23
Fitness: max 0.9090909090909091(3), min 0.0(5), ave 0.17786561264822134
----------------------------------------------------------------

2019-07-16 16:21:24 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 16:21:28 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:21:28 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 16:21:28 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,9 +8,9 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
+		ArrayList<Integer> list=new ArrayList<>();
+		for(int i = 0; i < n; i++)
 			res *= a;
-		}
 		return res;
 	}
 
2019-07-16 16:21:29 [main] [INFO]  KGenProgMain - execution time: 31 seconds
