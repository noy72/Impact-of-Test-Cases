2019-07-16 16:32:17 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work4695337386183988036
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 31
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 16:32:19 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:32:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 54, build-succeeded 8
Fitness: max 0.9090909090909091(4), min 0.0(2), ave 0.4772727272727273
----------------------------------------------------------------

2019-07-16 16:32:22 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:32:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 11
Fitness: max 0.9090909090909091(4), min 0.0(4), ave 0.35537190082644626
----------------------------------------------------------------

2019-07-16 16:32:25 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:32:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 14
Fitness: max 0.9090909090909091(6), min 0.0(3), ave 0.4220779220779221
----------------------------------------------------------------

2019-07-16 16:32:28 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 13
Fitness: max 0.9090909090909091(2), min 0.0(7), ave 0.1678321678321678
----------------------------------------------------------------

2019-07-16 16:32:31 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:32:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 106, syntax-valid 68, build-succeeded 17
Fitness: max 0.9090909090909091(6), min 0.0(6), ave 0.3689839572192513
----------------------------------------------------------------

2019-07-16 16:32:34 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:32:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 106, syntax-valid 73, build-succeeded 21
Fitness: max 0.9090909090909091(6), min 0.0(6), ave 0.316017316017316
----------------------------------------------------------------

2019-07-16 16:32:37 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:32:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 118, syntax-valid 82, build-succeeded 16
Fitness: max 0.9090909090909091(6), min 0.0(7), ave 0.35795454545454547
----------------------------------------------------------------

2019-07-16 16:32:41 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:32:45 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:32:45 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,8 +6,9 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a, n) % list.size();
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 16:32:45 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int sum = 0;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 16:32:46 [main] [INFO]  KGenProgMain - execution time: 26 seconds
