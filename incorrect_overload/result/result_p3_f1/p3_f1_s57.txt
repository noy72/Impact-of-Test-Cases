2019-07-16 16:54:34 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3968131238887994878
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 57
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 16:54:37 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:54:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 7
Fitness: max 0.9090909090909091(5), min 0.0(1), ave 0.6623376623376622
----------------------------------------------------------------

2019-07-16 16:54:41 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:54:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 13
Fitness: max 0.9090909090909091(5), min 0.0(4), ave 0.3776223776223776
----------------------------------------------------------------

2019-07-16 16:54:45 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:54:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 15
Fitness: max 0.9090909090909091(3), min 0.0(6), ave 0.21818181818181817
----------------------------------------------------------------

2019-07-16 16:54:48 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:54:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 9
Fitness: max 0.9090909090909091(1), min 0.0(5), ave 0.13131313131313133
----------------------------------------------------------------

2019-07-16 16:54:51 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:54:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 14
Fitness: max 0.9090909090909091(8), min 0.0(4), ave 0.5324675324675324
----------------------------------------------------------------

2019-07-16 16:54:54 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:54:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 102, syntax-valid 71, build-succeeded 7
Fitness: max 0.9090909090909091(2), min 0.0(4), ave 0.27272727272727276
----------------------------------------------------------------

2019-07-16 16:54:57 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:55:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 108, syntax-valid 73, build-succeeded 14
Fitness: max 0.9090909090909091(3), min 0.0(6), ave 0.22727272727272727
----------------------------------------------------------------

2019-07-16 16:55:00 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:55:03 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:55:03 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -4,10 +4,12 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 16:55:04 [main] [INFO]  KGenProgMain - execution time: 26 seconds
