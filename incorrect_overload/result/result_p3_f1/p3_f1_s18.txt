2019-07-16 16:22:17 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6717205781305900409
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 18
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 16:22:20 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:22:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 51, build-succeeded 7
Fitness: max 0.9090909090909091(5), min 0.0(1), ave 0.6623376623376623
----------------------------------------------------------------

2019-07-16 16:22:24 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:22:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 17
Fitness: max 0.9090909090909091(8), min 0.0(8), ave 0.4331550802139037
----------------------------------------------------------------

2019-07-16 16:22:27 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:22:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 11
Fitness: max 0.9090909090909091(5), min 0.0(3), ave 0.4380165289256199
----------------------------------------------------------------

2019-07-16 16:22:31 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:22:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 17
Fitness: max 0.9090909090909091(5), min 0.0(9), ave 0.28342245989304815
----------------------------------------------------------------

2019-07-16 16:22:34 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:22:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 9
Fitness: max 0.9090909090909091(2), min 0.0(4), ave 0.23232323232323232
----------------------------------------------------------------

2019-07-16 16:22:38 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:22:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 102, syntax-valid 73, build-succeeded 15
Fitness: max 0.9090909090909091(7), min 0.0(4), ave 0.4484848484848485
----------------------------------------------------------------

2019-07-16 16:22:41 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:22:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 110, syntax-valid 72, build-succeeded 10
Fitness: max 0.9090909090909091(5), min 0.0(1), ave 0.4909090909090909
----------------------------------------------------------------

2019-07-16 16:22:44 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:22:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 116, syntax-valid 82, build-succeeded 20
Fitness: max 0.9090909090909091(4), min 0.0(3), ave 0.2590909090909091
----------------------------------------------------------------

2019-07-16 16:22:48 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 16:22:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 116, syntax-valid 80, build-succeeded 20
Fitness: max 0.9090909090909091(7), min 0.0(3), ave 0.36363636363636365
----------------------------------------------------------------

2019-07-16 16:22:51 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 16:22:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 124, syntax-valid 87, build-succeeded 27
Fitness: max 0.9090909090909091(9), min 0.0(2), ave 0.3569023569023569
----------------------------------------------------------------

2019-07-16 16:22:54 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 16:22:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 156, syntax-valid 94, build-succeeded 38
Fitness: max 0.9090909090909091(12), min 0.0(6), ave 0.3492822966507177
----------------------------------------------------------------

2019-07-16 16:22:58 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 16:23:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 41 seconds
Variants: generated 150, syntax-valid 79, build-succeeded 25
Fitness: max 0.9090909090909091(12), min 0.0(2), ave 0.4836363636363636
----------------------------------------------------------------

2019-07-16 16:23:01 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 16:23:04 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:23:04 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,8 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 16:23:04 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			int sum = 0;
 		}
 		return res;
 	}
2019-07-16 16:23:05 [main] [INFO]  KGenProgMain - execution time: 45 seconds
