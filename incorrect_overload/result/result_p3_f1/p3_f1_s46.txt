2019-07-16 16:44:16 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1686501352485583174
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 46
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 16:44:19 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:44:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 6
Fitness: max 0.9090909090909091(2), min 0.0(2), ave 0.393939393939394
----------------------------------------------------------------

2019-07-16 16:44:22 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:44:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 10
Fitness: max 0.9090909090909091(4), min 0.0(1), ave 0.5363636363636364
----------------------------------------------------------------

2019-07-16 16:44:25 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:44:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 10
Fitness: max 0.9090909090909091(2), min 0.0(4), ave 0.32727272727272727
----------------------------------------------------------------

2019-07-16 16:44:28 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:44:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 10
Fitness: max 0.9090909090909091(4), min 0.0(4), ave 0.3818181818181818
----------------------------------------------------------------

2019-07-16 16:44:30 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:44:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 73, build-succeeded 20
Fitness: max 0.9090909090909091(9), min 0.0(4), ave 0.4954545454545454
----------------------------------------------------------------

2019-07-16 16:44:33 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:44:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 106, syntax-valid 68, build-succeeded 14
Fitness: max 0.9090909090909091(3), min 0.0(5), ave 0.2727272727272727
----------------------------------------------------------------

2019-07-16 16:44:35 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:44:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 110, syntax-valid 73, build-succeeded 13
Fitness: max 0.9090909090909091(2), min 0.0(4), ave 0.2727272727272727
----------------------------------------------------------------

2019-07-16 16:44:38 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:44:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 128, syntax-valid 81, build-succeeded 19
Fitness: max 0.9090909090909091(4), min 0.0(2), ave 0.33014354066985646
----------------------------------------------------------------

2019-07-16 16:44:41 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 16:44:43 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:44:43 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 16:44:43 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			ArrayList<Integer> list=new ArrayList<>();
 		}
 		return res;
 	}
2019-07-16 16:44:44 [main] [INFO]  KGenProgMain - execution time: 25 seconds
