2019-07-16 16:55:50 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5253129664098310010
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 59
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 16:55:52 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 16:55:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 15
Fitness: max 0.9090909090909091(8), min 0.0(4), ave 0.503030303030303
----------------------------------------------------------------

2019-07-16 16:55:57 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 16:56:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 12
Fitness: max 0.9090909090909091(4), min 0.0(5), ave 0.32575757575757575
----------------------------------------------------------------

2019-07-16 16:56:00 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 16:56:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 11
Fitness: max 0.9090909090909091(4), min 0.0(3), ave 0.36363636363636365
----------------------------------------------------------------

2019-07-16 16:56:03 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 16:56:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 8
Fitness: max 0.9090909090909091(2), min 0.0(4), ave 0.25
----------------------------------------------------------------

2019-07-16 16:56:07 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 16:56:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 10
Fitness: max 0.9090909090909091(3), min 0.0(3), ave 0.3090909090909091
----------------------------------------------------------------

2019-07-16 16:56:10 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 16:56:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 10
Fitness: max 0.9090909090909091(2), min 0.0(5), ave 0.20909090909090908
----------------------------------------------------------------

2019-07-16 16:56:12 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 16:56:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 104, syntax-valid 67, build-succeeded 16
Fitness: max 0.9090909090909091(6), min 0.0(3), ave 0.4147727272727273
----------------------------------------------------------------

2019-07-16 16:56:15 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 16:56:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 106, syntax-valid 79, build-succeeded 19
Fitness: max 0.9090909090909091(6), min 0.0(6), ave 0.3492822966507177
----------------------------------------------------------------

2019-07-16 16:56:19 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 16:56:22 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 16:56:22 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,6 +7,7 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 16:56:22 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int x, y;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 16:56:23 [main] [INFO]  KGenProgMain - execution time: 30 seconds
