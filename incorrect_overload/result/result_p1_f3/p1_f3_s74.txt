2019-07-16 22:51:51 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3281647053685630205
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 74
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 22:51:53 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 22:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 11
Fitness: max 0.36363636363636365(4), min 0.0(1), ave 0.18181818181818182
----------------------------------------------------------------

2019-07-16 22:51:56 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 22:52:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 19
Fitness: max 0.36363636363636365(11), min 0.0(4), ave 0.22966507177033496
----------------------------------------------------------------

2019-07-16 22:52:00 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 22:52:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 14
Fitness: max 0.45454545454545453(1), min 0.0(5), ave 0.18181818181818182
----------------------------------------------------------------

2019-07-16 22:52:03 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 22:52:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 14
Fitness: max 0.9090909090909091(1), min 0.0(3), ave 0.2857142857142857
----------------------------------------------------------------

2019-07-16 22:52:06 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 22:52:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 77, build-succeeded 12
Fitness: max 0.9090909090909091(1), min 0.0(2), ave 0.32575757575757575
----------------------------------------------------------------

2019-07-16 22:52:08 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 22:52:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 104, syntax-valid 78, build-succeeded 15
Fitness: max 0.9090909090909091(3), min 0.0(1), ave 0.3939393939393939
----------------------------------------------------------------

2019-07-16 22:52:11 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 22:52:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 116, syntax-valid 80, build-succeeded 20
Fitness: max 0.9090909090909091(4), min 0.0(2), ave 0.39090909090909093
----------------------------------------------------------------

2019-07-16 22:52:15 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 22:52:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 134, syntax-valid 91, build-succeeded 26
Fitness: max 0.9090909090909091(2), min 0.0(3), ave 0.3146853146853147
----------------------------------------------------------------

2019-07-16 22:52:18 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 22:52:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 144, syntax-valid 90, build-succeeded 35
Fitness: max 0.9090909090909091(3), min 0.09090909090909091(3), ave 0.37402597402597404
----------------------------------------------------------------

2019-07-16 22:52:21 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 22:52:23 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 22:52:23 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,9 +7,12 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
+		int res = 1;
+		y = sample.pow(a, n) % list.size();
 		if(subList == null) {
 			return -1;
 		}
2019-07-16 22:52:23 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,8 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
+		if(l < 0 || r >= list.size() || l >= r)
 			return null;
-		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 22:52:24 [main] [INFO]  KGenProgMain - execution time: 31 seconds
