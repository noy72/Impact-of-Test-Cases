2019-07-16 22:03:29 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1266236651648843208
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 33
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 22:03:30 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 22:03:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 52, build-succeeded 7
Fitness: max 0.36363636363636365(1), min 0.0(2), ave 0.1038961038961039
----------------------------------------------------------------

2019-07-16 22:03:33 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 22:03:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 5
Fitness: max 0.36363636363636365(1), min 0.0(2), ave 0.10909090909090909
----------------------------------------------------------------

2019-07-16 22:03:35 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 22:03:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 9
Fitness: max 0.36363636363636365(4), min 0.0(2), ave 0.19191919191919193
----------------------------------------------------------------

2019-07-16 22:03:38 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 22:03:40 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 22:03:40 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -4,10 +4,13 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a, n) % list.size();
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 22:03:40 [main] [INFO]  KGenProgMain - execution time: 9 seconds
