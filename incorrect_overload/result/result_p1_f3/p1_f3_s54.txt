2019-07-16 22:27:13 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7050788357267327699
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 54
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 22:27:15 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 22:27:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 13
Fitness: max 0.36363636363636365(1), min 0.0(2), ave 0.0979020979020979
----------------------------------------------------------------

2019-07-16 22:27:18 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 22:27:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 16
Fitness: max 0.9090909090909091(1), min 0.0(6), ave 0.125
----------------------------------------------------------------

2019-07-16 22:27:20 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 22:27:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 17
Fitness: max 0.9090909090909091(1), min 0.0(6), ave 0.17112299465240643
----------------------------------------------------------------

2019-07-16 22:27:23 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 22:27:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 12
Fitness: max 0.9090909090909091(1), min 0.0(3), ave 0.20454545454545456
----------------------------------------------------------------

2019-07-16 22:27:25 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 22:27:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 77, build-succeeded 14
Fitness: max 0.9090909090909091(2), min 0.0(4), ave 0.2792207792207792
----------------------------------------------------------------

2019-07-16 22:27:27 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 22:27:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 110, syntax-valid 74, build-succeeded 11
Fitness: max 0.36363636363636365(3), min 0.0(6), ave 0.11570247933884299
----------------------------------------------------------------

2019-07-16 22:27:29 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 22:27:31 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 22:27:31 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,7 +6,8 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
+		y = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 22:27:31 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,10 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 22:27:31 [main] [INFO]  KGenProgMain - execution time: 16 seconds
