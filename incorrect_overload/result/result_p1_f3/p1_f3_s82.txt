2019-07-16 23:00:28 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6021376418757544424
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 82
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 23:00:30 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 23:00:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 13
Fitness: max 0.36363636363636365(2), min 0.0(1), ave 0.1258741258741259
----------------------------------------------------------------

2019-07-16 23:00:33 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 23:00:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 76, build-succeeded 14
Fitness: max 0.36363636363636365(5), min 0.0(6), ave 0.14935064935064934
----------------------------------------------------------------

2019-07-16 23:00:36 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 23:00:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 14
Fitness: max 0.36363636363636365(5), min 0.0(7), ave 0.14285714285714285
----------------------------------------------------------------

2019-07-16 23:00:39 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 23:00:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 7
Fitness: max 0.36363636363636365(5), min 0.0(1), ave 0.27272727272727276
----------------------------------------------------------------

2019-07-16 23:00:41 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 23:00:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 10
Fitness: max 0.36363636363636365(5), min 0.0(2), ave 0.20909090909090908
----------------------------------------------------------------

2019-07-16 23:00:43 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 23:00:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 104, syntax-valid 69, build-succeeded 11
Fitness: max 0.36363636363636365(8), min 0.0(3), ave 0.2644628099173554
----------------------------------------------------------------

2019-07-16 23:00:46 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 23:00:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 104, syntax-valid 78, build-succeeded 9
Fitness: max 0.36363636363636365(4), min 0.0(3), ave 0.18181818181818182
----------------------------------------------------------------

2019-07-16 23:00:48 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 23:00:50 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 23:00:51 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,13 +6,12 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 23:00:51 [main] [INFO]  KGenProgMain - execution time: 20 seconds
