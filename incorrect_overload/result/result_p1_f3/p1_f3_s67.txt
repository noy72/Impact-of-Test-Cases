2019-07-16 22:46:24 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work4894833271078048004
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 67
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 22:46:26 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 22:46:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 13
Fitness: max 0.09090909090909091(10), min 0.0(3), ave 0.06993006993006994
----------------------------------------------------------------

2019-07-16 22:46:29 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 22:46:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 7
Fitness: max 0.36363636363636365(2), min 0.0(3), ave 0.12987012987012989
----------------------------------------------------------------

2019-07-16 22:46:31 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 22:46:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 17
Fitness: max 0.36363636363636365(3), min 0.0(8), ave 0.09625668449197862
----------------------------------------------------------------

2019-07-16 22:46:33 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 22:46:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 102, syntax-valid 61, build-succeeded 11
Fitness: max 0.36363636363636365(4), min 0.0(3), ave 0.1652892561983471
----------------------------------------------------------------

2019-07-16 22:46:35 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 22:46:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 14
Fitness: max 0.36363636363636365(2), min 0.0(7), ave 0.09090909090909091
----------------------------------------------------------------

2019-07-16 22:46:37 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 22:46:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 108, syntax-valid 76, build-succeeded 14
Fitness: max 0.36363636363636365(5), min 0.0(6), ave 0.14935064935064934
----------------------------------------------------------------

2019-07-16 22:46:39 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 22:46:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 114, syntax-valid 70, build-succeeded 11
Fitness: max 0.36363636363636365(6), min 0.0(3), ave 0.21487603305785125
----------------------------------------------------------------

2019-07-16 22:46:41 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 22:46:43 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 22:46:43 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,8 +6,8 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 22:46:43 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			Class2 sample = new Class2();
 		}
 		return res;
 	}
2019-07-16 22:46:44 [main] [INFO]  KGenProgMain - execution time: 18 seconds
