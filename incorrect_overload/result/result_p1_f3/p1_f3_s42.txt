2019-07-16 22:15:03 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2380698515571061784
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 42
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 22:15:05 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 22:15:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 12
Fitness: max 0.36363636363636365(2), min 0.0(1), ave 0.12878787878787878
----------------------------------------------------------------

2019-07-16 22:15:08 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 22:15:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 13
Fitness: max 0.36363636363636365(2), min 0.0(4), ave 0.10489510489510491
----------------------------------------------------------------

2019-07-16 22:15:11 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 22:15:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 14
Fitness: max 0.9090909090909091(2), min 0.0(1), ave 0.2987012987012987
----------------------------------------------------------------

2019-07-16 22:15:14 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 22:15:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 11
Fitness: max 0.9090909090909091(1), min 0.0(2), ave 0.2231404958677686
----------------------------------------------------------------

2019-07-16 22:15:17 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 22:15:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 74, build-succeeded 14
Fitness: max 0.9090909090909091(3), min 0.0(3), ave 0.34415584415584416
----------------------------------------------------------------

2019-07-16 22:15:20 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 22:15:22 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 22:15:23 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 22:15:23 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,11 +24,13 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
+		int sum = 0;
 		for(; l < r; l++) {
 			res.add(list.get(l));
 		}
2019-07-16 22:15:23 [main] [INFO]  KGenProgMain - execution time: 17 seconds
