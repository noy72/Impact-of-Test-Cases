2019-07-16 21:54:24 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2546238557269090937
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 26
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 21:54:26 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 21:54:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 9
Fitness: max 0.36363636363636365(2), min 0.0(2), ave 0.13131313131313133
----------------------------------------------------------------

2019-07-16 21:54:29 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 21:54:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 77, build-succeeded 13
Fitness: max 0.36363636363636365(6), min 0.0(1), ave 0.20979020979020982
----------------------------------------------------------------

2019-07-16 21:54:31 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 21:54:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 13
Fitness: max 0.36363636363636365(4), min 0.0(4), ave 0.15384615384615385
----------------------------------------------------------------

2019-07-16 21:54:33 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 21:54:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 11
Fitness: max 0.36363636363636365(1), min 0.0(4), ave 0.09917355371900828
----------------------------------------------------------------

2019-07-16 21:54:36 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 21:54:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 12
Fitness: max 0.36363636363636365(2), min 0.0(6), ave 0.0984848484848485
----------------------------------------------------------------

2019-07-16 21:54:39 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 21:54:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 102, syntax-valid 66, build-succeeded 9
Fitness: max 0.36363636363636365(3), min 0.0(1), ave 0.18181818181818182
----------------------------------------------------------------

2019-07-16 21:54:42 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 21:54:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 110, syntax-valid 78, build-succeeded 10
Fitness: max 0.36363636363636365(3), min 0.0(4), ave 0.15454545454545454
----------------------------------------------------------------

2019-07-16 21:54:44 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 21:54:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 116, syntax-valid 74, build-succeeded 14
Fitness: max 0.36363636363636365(9), min 0.0(3), ave 0.24675324675324675
----------------------------------------------------------------

2019-07-16 21:54:47 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 21:54:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 128, syntax-valid 85, build-succeeded 24
Fitness: max 0.36363636363636365(10), min 0.0(5), ave 0.20454545454545456
----------------------------------------------------------------

2019-07-16 21:54:50 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 21:54:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 144, syntax-valid 86, build-succeeded 27
Fitness: max 0.36363636363636365(11), min 0.0(4), ave 0.19528619528619529
----------------------------------------------------------------

2019-07-16 21:54:53 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 21:54:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 146, syntax-valid 100, build-succeeded 29
Fitness: max 0.9090909090909091(2), min 0.0(1), ave 0.3322884012539185
----------------------------------------------------------------

2019-07-16 21:54:57 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 21:55:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 150, syntax-valid 91, build-succeeded 27
Fitness: max 0.9090909090909091(2), min 0.09090909090909091(4), ave 0.3434343434343435
----------------------------------------------------------------

2019-07-16 21:55:00 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 21:55:03 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 21:55:03 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -4,10 +4,13 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		ArrayList<Integer> res=new ArrayList<Integer>();
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
+		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 21:55:03 [main] [INFO]  KGenProgMain - execution time: 37 seconds
