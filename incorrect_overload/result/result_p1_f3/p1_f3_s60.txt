2019-07-16 22:32:17 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7405014378900459118
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 60
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 22:32:19 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 22:32:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 9
Fitness: max 0.36363636363636365(2), min 0.0(2), ave 0.13131313131313133
----------------------------------------------------------------

2019-07-16 22:32:22 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 22:32:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 12
Fitness: max 0.36363636363636365(7), min 0.0(1), ave 0.24242424242424243
----------------------------------------------------------------

2019-07-16 22:32:24 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 22:32:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 8
Fitness: max 0.36363636363636365(3), min 0.09090909090909091(4), ave 0.20454545454545456
----------------------------------------------------------------

2019-07-16 22:32:27 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 22:32:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 9
Fitness: max 0.36363636363636365(5), min 0.0(2), ave 0.2222222222222222
----------------------------------------------------------------

2019-07-16 22:32:29 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 22:32:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 69, build-succeeded 12
Fitness: max 0.9090909090909091(1), min 0.0(3), ave 0.25757575757575757
----------------------------------------------------------------

2019-07-16 22:32:32 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 22:32:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 104, syntax-valid 70, build-succeeded 10
Fitness: max 0.45454545454545453(1), min 0.0(1), ave 0.2272727272727273
----------------------------------------------------------------

2019-07-16 22:32:35 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 22:32:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 104, syntax-valid 78, build-succeeded 23
Fitness: max 0.9090909090909091(1), min 0.0(6), ave 0.2766798418972332
----------------------------------------------------------------

2019-07-16 22:32:37 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 22:32:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 124, syntax-valid 80, build-succeeded 27
Fitness: max 0.45454545454545453(3), min 0.0(4), ave 0.27946127946127947
----------------------------------------------------------------

2019-07-16 22:32:40 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 22:32:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 158, syntax-valid 97, build-succeeded 33
Fitness: max 0.9090909090909091(2), min 0.0(1), ave 0.3415977961432507
----------------------------------------------------------------

2019-07-16 22:32:44 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 22:32:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 168, syntax-valid 92, build-succeeded 28
Fitness: max 0.9090909090909091(2), min 0.0(1), ave 0.35389610389610393
----------------------------------------------------------------

2019-07-16 22:32:47 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 22:32:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 172, syntax-valid 85, build-succeeded 29
Fitness: max 0.9090909090909091(2), min 0.09090909090909091(5), ave 0.3542319749216301
----------------------------------------------------------------

2019-07-16 22:32:50 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 22:32:53 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 22:32:53 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,13 +6,12 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 22:32:53 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,8 +8,10 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int sum = 0;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			int x, y;
 		}
 		return res;
 	}
2019-07-16 22:32:54 [main] [INFO]  KGenProgMain - execution time: 34 seconds
