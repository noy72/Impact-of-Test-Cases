2019-07-16 22:18:59 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1370837746135142668
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 45
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 22:19:01 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 22:19:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 13
Fitness: max 0.36363636363636365(3), min 0.0(3), ave 0.13286713286713286
----------------------------------------------------------------

2019-07-16 22:19:04 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 22:19:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 11
Fitness: max 0.36363636363636365(5), min 0.0(2), ave 0.19834710743801656
----------------------------------------------------------------

2019-07-16 22:19:06 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 22:19:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 13
Fitness: max 0.36363636363636365(7), min 0.0(1), ave 0.24475524475524474
----------------------------------------------------------------

2019-07-16 22:19:09 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 22:19:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 7
Fitness: max 0.36363636363636365(5), min 0.0(1), ave 0.27272727272727276
----------------------------------------------------------------

2019-07-16 22:19:11 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 22:19:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 10
Fitness: max 0.36363636363636365(1), min 0.0(5), ave 0.07272727272727272
----------------------------------------------------------------

2019-07-16 22:19:12 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 22:19:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 102, syntax-valid 76, build-succeeded 9
Fitness: max 0.36363636363636365(3), min 0.0(2), ave 0.16161616161616163
----------------------------------------------------------------

2019-07-16 22:19:15 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 22:19:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 112, syntax-valid 81, build-succeeded 15
Fitness: max 0.36363636363636365(4), min 0.0(5), ave 0.13333333333333333
----------------------------------------------------------------

2019-07-16 22:19:17 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 22:19:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 110, syntax-valid 82, build-succeeded 16
Fitness: max 0.36363636363636365(6), min 0.0(2), ave 0.18181818181818182
----------------------------------------------------------------

2019-07-16 22:19:19 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 22:19:21 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 22:19:21 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,12 +7,12 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 22:19:21 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			Class2 sample = new Class2();
 		}
 		return res;
 	}
2019-07-16 22:19:22 [main] [INFO]  KGenProgMain - execution time: 20 seconds
