2019-07-16 21:49:35 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7967376511982355285
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 23
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 21:49:37 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 21:49:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 49, build-succeeded 8
Fitness: max 0.36363636363636365(2), min 0.09090909090909091(6), ave 0.1590909090909091
----------------------------------------------------------------

2019-07-16 21:49:40 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 21:49:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 11
Fitness: max 0.36363636363636365(2), min 0.0(4), ave 0.11570247933884298
----------------------------------------------------------------

2019-07-16 21:49:42 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 21:49:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 11
Fitness: max 0.36363636363636365(7), min 0.0(3), ave 0.23966942148760334
----------------------------------------------------------------

2019-07-16 21:49:45 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 21:49:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 102, syntax-valid 70, build-succeeded 13
Fitness: max 0.36363636363636365(8), min 0.0(2), ave 0.2517482517482518
----------------------------------------------------------------

2019-07-16 21:49:47 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 21:49:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 12
Fitness: max 0.36363636363636365(7), min 0.0(1), ave 0.24242424242424243
----------------------------------------------------------------

2019-07-16 21:49:50 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 21:49:53 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 21:49:53 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,8 +6,8 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 21:49:53 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,10 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 21:49:53 [main] [INFO]  KGenProgMain - execution time: 15 seconds
