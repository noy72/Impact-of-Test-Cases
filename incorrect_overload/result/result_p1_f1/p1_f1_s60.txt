2019-07-16 13:43:53 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2769993698519644735
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 60
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 13:43:55 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 13:43:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 9
Fitness: max 0.5(7), min 0.0(2), ave 0.3888888888888889
----------------------------------------------------------------

2019-07-16 13:43:59 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 13:44:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 9
Fitness: max 0.5(8), min 0.0(1), ave 0.4444444444444444
----------------------------------------------------------------

2019-07-16 13:44:02 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 13:44:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 8
Fitness: max 0.5(6), min 0.0(2), ave 0.375
----------------------------------------------------------------

2019-07-16 13:44:04 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 13:44:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 9
Fitness: max 0.5(7), min 0.0(2), ave 0.3888888888888889
----------------------------------------------------------------

2019-07-16 13:44:07 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 13:44:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 9
Fitness: max 0.5(7), min 0.0(2), ave 0.3888888888888889
----------------------------------------------------------------

2019-07-16 13:44:10 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 13:44:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 102, syntax-valid 59, build-succeeded 8
Fitness: max 0.5(6), min 0.0(2), ave 0.375
----------------------------------------------------------------

2019-07-16 13:44:12 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 13:44:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 102, syntax-valid 68, build-succeeded 23
Fitness: max 0.5(17), min 0.0(6), ave 0.3695652173913043
----------------------------------------------------------------

2019-07-16 13:44:14 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 13:44:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 122, syntax-valid 80, build-succeeded 19
Fitness: max 0.5(16), min 0.0(3), ave 0.42105263157894735
----------------------------------------------------------------

2019-07-16 13:44:18 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 13:44:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 134, syntax-valid 79, build-succeeded 18
Fitness: max 0.5(15), min 0.0(3), ave 0.4166666666666667
----------------------------------------------------------------

2019-07-16 13:44:21 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 13:44:24 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 13:44:24 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,20 +6,17 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
-		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(i);
+		for(int i : subList)
+			if (i <= h) {
 			}
-		}
 		return sum;
 	}
 
2019-07-16 13:44:24 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int x, y;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 13:44:25 [main] [INFO]  KGenProgMain - execution time: 30 seconds
