2019-07-16 14:28:09 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6598814244721546828
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 96
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 14:28:12 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 14:28:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 52, build-succeeded 7
Fitness: max 0.5(7), min 0.5(7), ave 0.5
----------------------------------------------------------------

2019-07-16 14:28:15 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 14:28:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 8
Fitness: max 0.5(7), min 0.0(1), ave 0.4375
----------------------------------------------------------------

2019-07-16 14:28:18 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 14:28:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 8
Fitness: max 0.5(4), min 0.0(4), ave 0.25
----------------------------------------------------------------

2019-07-16 14:28:21 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 14:28:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 18
Fitness: max 0.5(13), min 0.0(5), ave 0.3611111111111111
----------------------------------------------------------------

2019-07-16 14:28:25 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 14:28:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 106, syntax-valid 69, build-succeeded 10
Fitness: max 0.5(8), min 0.0(2), ave 0.4
----------------------------------------------------------------

2019-07-16 14:28:28 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 14:28:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 112, syntax-valid 72, build-succeeded 15
Fitness: max 0.5(12), min 0.0(3), ave 0.4
----------------------------------------------------------------

2019-07-16 14:28:31 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 14:28:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 120, syntax-valid 73, build-succeeded 19
Fitness: max 0.5(15), min 0.0(4), ave 0.39473684210526316
----------------------------------------------------------------

2019-07-16 14:28:33 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 14:28:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 158, syntax-valid 91, build-succeeded 28
Fitness: max 0.5(24), min 0.0(4), ave 0.42857142857142855
----------------------------------------------------------------

2019-07-16 14:28:37 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 14:28:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 144, syntax-valid 71, build-succeeded 16
Fitness: max 0.5(15), min 0.0(1), ave 0.46875
----------------------------------------------------------------

2019-07-16 14:28:40 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 14:28:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 148, syntax-valid 89, build-succeeded 28
Fitness: max 0.5(25), min 0.0(3), ave 0.44642857142857145
----------------------------------------------------------------

2019-07-16 14:28:43 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 14:28:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 156, syntax-valid 88, build-succeeded 24
Fitness: max 0.5(22), min 0.0(2), ave 0.4583333333333333
----------------------------------------------------------------

2019-07-16 14:28:46 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 14:28:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 152, syntax-valid 85, build-succeeded 23
Fitness: max 0.5(20), min 0.0(3), ave 0.43478260869565216
----------------------------------------------------------------

2019-07-16 14:28:49 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 14:28:52 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 14:28:52 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,8 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 14:28:52 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,10 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 14:28:53 [main] [INFO]  KGenProgMain - execution time: 41 seconds
