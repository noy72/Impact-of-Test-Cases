2019-07-16 13:37:36 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3036168739363026715
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 52
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 13:37:39 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 13:37:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 48, build-succeeded 9
Fitness: max 0.5(6), min 0.0(3), ave 0.3333333333333333
----------------------------------------------------------------

2019-07-16 13:37:42 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 13:37:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 8
Fitness: max 0.5(4), min 0.0(4), ave 0.25
----------------------------------------------------------------

2019-07-16 13:37:45 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 13:37:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 13
Fitness: max 0.5(11), min 0.0(2), ave 0.4230769230769231
----------------------------------------------------------------

2019-07-16 13:37:48 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 13:37:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 6
Fitness: max 0.5(4), min 0.0(2), ave 0.3333333333333333
----------------------------------------------------------------

2019-07-16 13:37:50 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 13:37:53 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 13:37:53 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,11 +8,13 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
+		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 13:37:53 [main] [INFO]  KGenProgMain - execution time: 14 seconds
