2019-07-16 13:22:06 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8102296132652322458
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 38
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 13:22:09 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 13:22:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 12
Fitness: max 0.5(9), min 0.0(3), ave 0.375
----------------------------------------------------------------

2019-07-16 13:22:12 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 13:22:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 10
Fitness: max 0.5(6), min 0.0(4), ave 0.3
----------------------------------------------------------------

2019-07-16 13:22:15 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 13:22:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 10
Fitness: max 0.5(9), min 0.0(1), ave 0.45
----------------------------------------------------------------

2019-07-16 13:22:18 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 13:22:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 9
Fitness: max 0.5(6), min 0.0(3), ave 0.3333333333333333
----------------------------------------------------------------

2019-07-16 13:22:21 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 13:22:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 15
Fitness: max 0.5(11), min 0.0(4), ave 0.36666666666666664
----------------------------------------------------------------

2019-07-16 13:22:24 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 13:22:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 61, build-succeeded 11
Fitness: max 0.5(5), min 0.0(6), ave 0.22727272727272727
----------------------------------------------------------------

2019-07-16 13:22:27 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 13:22:30 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 13:22:30 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 13:22:30 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			Class2 sample = new Class2();
 		}
 		return res;
 	}
2019-07-16 13:22:30 [main] [INFO]  KGenProgMain - execution time: 21 seconds
