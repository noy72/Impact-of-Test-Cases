2019-07-16 19:00:43 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3935473103260449959
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 84
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 19:00:45 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 19:00:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 49, build-succeeded 6
Fitness: max 0.9523809523809523(3), min 0.0(2), ave 0.48412698412698413
----------------------------------------------------------------

2019-07-16 19:00:48 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 19:00:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 11
Fitness: max 0.9523809523809523(4), min 0.0(2), ave 0.36796536796536794
----------------------------------------------------------------

2019-07-16 19:00:51 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 19:00:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 11
Fitness: max 0.9523809523809523(2), min 0.0(4), ave 0.26839826839826836
----------------------------------------------------------------

2019-07-16 19:00:54 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 19:00:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 10
Fitness: max 0.9523809523809523(3), min 0.0(2), ave 0.4714285714285714
----------------------------------------------------------------

2019-07-16 19:00:56 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 19:00:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 14
Fitness: max 0.9523809523809523(1), min 0.0(6), ave 0.2074829931972789
----------------------------------------------------------------

2019-07-16 19:00:59 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 19:01:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 104, syntax-valid 65, build-succeeded 7
Fitness: max 0.9523809523809523(1), min 0.0(3), ave 0.2789115646258503
----------------------------------------------------------------

2019-07-16 19:01:01 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 19:01:04 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 19:01:04 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -4,15 +4,15 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		int res = 1;
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 19:01:05 [main] [INFO]  KGenProgMain - execution time: 19 seconds
