2019-07-16 19:01:42 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3213108849561571485
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 87
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 19:01:45 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 19:01:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 51, build-succeeded 8
Fitness: max 0.9523809523809523(3), min 0.0(3), ave 0.369047619047619
----------------------------------------------------------------

2019-07-16 19:01:49 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 19:01:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 13
Fitness: max 0.9523809523809523(3), min 0.0(6), ave 0.23443223443223443
----------------------------------------------------------------

2019-07-16 19:01:52 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 19:01:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 11
Fitness: max 0.9523809523809523(6), min 0.0(2), ave 0.5324675324675324
----------------------------------------------------------------

2019-07-16 19:01:55 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 19:01:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 11
Fitness: max 0.9523809523809523(1), min 0.0(7), ave 0.17316017316017315
----------------------------------------------------------------

2019-07-16 19:01:58 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 19:02:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 102, syntax-valid 64, build-succeeded 12
Fitness: max 0.9523809523809523(4), min 0.0(4), ave 0.4682539682539682
----------------------------------------------------------------

2019-07-16 19:02:01 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 19:02:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 106, syntax-valid 79, build-succeeded 13
Fitness: max 0.9523809523809523(3), min 0.0(6), ave 0.29670329670329665
----------------------------------------------------------------

2019-07-16 19:02:05 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 19:02:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 110, syntax-valid 77, build-succeeded 18
Fitness: max 0.9523809523809523(3), min 0.0(11), ave 0.21428571428571427
----------------------------------------------------------------

2019-07-16 19:02:09 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 19:02:12 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 19:02:12 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,7 +6,7 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 19:02:12 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,9 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
+		for(int i = 0; i < n; i++)
 			res *= a;
-		}
 		return res;
 	}
 
2019-07-16 19:02:13 [main] [INFO]  KGenProgMain - execution time: 27 seconds
