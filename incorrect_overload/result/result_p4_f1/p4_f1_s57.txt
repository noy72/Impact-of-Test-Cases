2019-07-16 18:34:44 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8929642901412261826
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 57
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 18:34:46 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:34:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 7
Fitness: max 0.9523809523809523(5), min 0.0(1), ave 0.6870748299319728
----------------------------------------------------------------

2019-07-16 18:34:49 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:34:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 13
Fitness: max 0.9523809523809523(5), min 0.0(4), ave 0.380952380952381
----------------------------------------------------------------

2019-07-16 18:34:52 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:34:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 16
Fitness: max 0.9523809523809523(4), min 0.0(6), ave 0.25595238095238093
----------------------------------------------------------------

2019-07-16 18:34:55 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:34:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 74, build-succeeded 7
Fitness: max 0.8571428571428571(1), min 0.0(5), ave 0.12925170068027209
----------------------------------------------------------------

2019-07-16 18:34:58 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:35:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 102, syntax-valid 76, build-succeeded 13
Fitness: max 0.9523809523809523(6), min 0.0(4), ave 0.5128205128205128
----------------------------------------------------------------

2019-07-16 18:35:01 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:35:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 66, build-succeeded 8
Fitness: max 0.9523809523809523(2), min 0.0(5), ave 0.24404761904761904
----------------------------------------------------------------

2019-07-16 18:35:04 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 18:35:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 106, syntax-valid 76, build-succeeded 18
Fitness: max 0.9523809523809523(1), min 0.0(6), ave 0.17195767195767195
----------------------------------------------------------------

2019-07-16 18:35:06 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 18:35:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 116, syntax-valid 69, build-succeeded 17
Fitness: max 0.9523809523809523(3), min 0.0(4), ave 0.2913165266106443
----------------------------------------------------------------

2019-07-16 18:35:08 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 18:35:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 114, syntax-valid 74, build-succeeded 15
Fitness: max 0.9523809523809523(6), min 0.0(6), ave 0.3904761904761905
----------------------------------------------------------------

2019-07-16 18:35:11 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 18:35:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 130, syntax-valid 80, build-succeeded 24
Fitness: max 0.9523809523809523(5), min 0.0(9), ave 0.2857142857142857
----------------------------------------------------------------

2019-07-16 18:35:14 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 18:35:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 136, syntax-valid 77, build-succeeded 17
Fitness: max 0.9523809523809523(4), min 0.0(5), ave 0.24649859943977587
----------------------------------------------------------------

2019-07-16 18:35:17 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 18:35:21 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:35:21 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,6 +7,8 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		int res = 1;
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 18:35:21 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -10,6 +10,7 @@
 		int res = 1;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			int sum = 0;
 		}
 		return res;
 	}
@@ -29,9 +30,8 @@
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
-		for(; l < r; l++) {
-			res.add(list.get(l));
-		}
+		for(; l < r; l++)
+			return res;
 		return res;
 	}
 }
2019-07-16 18:35:22 [main] [INFO]  KGenProgMain - execution time: 36 seconds
