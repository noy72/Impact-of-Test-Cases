2019-07-16 18:11:22 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2719080631108299098
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 26
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 18:11:26 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:11:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 9
Fitness: max 0.9523809523809523(5), min 0.0(2), ave 0.5396825396825397
----------------------------------------------------------------

2019-07-16 18:11:29 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:11:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 11
Fitness: max 0.9523809523809523(8), min 0.0(2), ave 0.6969696969696969
----------------------------------------------------------------

2019-07-16 18:11:33 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:11:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 18
Fitness: max 0.9523809523809523(8), min 0.0(5), ave 0.48148148148148145
----------------------------------------------------------------

2019-07-16 18:11:37 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:11:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 7
Fitness: max 0.9523809523809523(1), min 0.0(5), ave 0.14285714285714285
----------------------------------------------------------------

2019-07-16 18:11:40 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:11:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 102, syntax-valid 71, build-succeeded 11
Fitness: max 0.9523809523809523(3), min 0.0(4), ave 0.35064935064935066
----------------------------------------------------------------

2019-07-16 18:11:43 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:11:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 106, syntax-valid 72, build-succeeded 16
Fitness: max 0.9523809523809523(9), min 0.0(1), ave 0.6339285714285714
----------------------------------------------------------------

2019-07-16 18:11:46 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 18:11:50 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:11:50 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -4,10 +4,12 @@
 public class Class1 {
 	public int run (ArrayList<Integer> list, int a, int n, int l, int h){
 		Class2 sample = new Class2();
+		int res = 1;
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 18:11:50 [main] [INFO]  KGenProgMain - execution time: 24 seconds
