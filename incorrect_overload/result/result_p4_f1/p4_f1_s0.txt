2019-07-16 17:38:37 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1273709833620517849
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 0
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 17:38:40 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 17:38:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 61, build-succeeded 6
Fitness: max 0.9523809523809523(3), min 0.0(1), ave 0.49206349206349204
----------------------------------------------------------------

2019-07-16 17:38:43 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 17:38:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 8
Fitness: max 0.9523809523809523(3), min 0.0(2), ave 0.375
----------------------------------------------------------------

2019-07-16 17:38:46 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 17:38:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 9
Fitness: max 0.9523809523809523(5), min 0.0(2), ave 0.5396825396825397
----------------------------------------------------------------

2019-07-16 17:38:49 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 17:38:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 13
Fitness: max 0.9523809523809523(4), min 0.0(3), ave 0.315018315018315
----------------------------------------------------------------

2019-07-16 17:38:52 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 17:38:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 104, syntax-valid 71, build-succeeded 16
Fitness: max 0.9523809523809523(5), min 0.0(3), ave 0.3214285714285714
----------------------------------------------------------------

2019-07-16 17:38:55 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 17:38:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 8
Fitness: max 0.9523809523809523(2), min 0.0(4), ave 0.25
----------------------------------------------------------------

2019-07-16 17:38:57 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 17:39:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 102, syntax-valid 64, build-succeeded 10
Fitness: max 0.9523809523809523(4), min 0.0(2), ave 0.4
----------------------------------------------------------------

2019-07-16 17:39:00 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 17:39:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 114, syntax-valid 84, build-succeeded 19
Fitness: max 0.9523809523809523(6), min 0.0(3), ave 0.3258145363408521
----------------------------------------------------------------

2019-07-16 17:39:03 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 17:39:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 132, syntax-valid 73, build-succeeded 28
Fitness: max 0.9523809523809523(10), min 0.0(8), ave 0.35714285714285715
----------------------------------------------------------------

2019-07-16 17:39:06 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 17:39:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 146, syntax-valid 82, build-succeeded 26
Fitness: max 0.9523809523809523(5), min 0.0(4), ave 0.21428571428571427
----------------------------------------------------------------

2019-07-16 17:39:09 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 17:39:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 148, syntax-valid 89, build-succeeded 28
Fitness: max 0.9523809523809523(10), min 0.0(4), ave 0.3639455782312925
----------------------------------------------------------------

2019-07-16 17:39:12 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 17:39:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 146, syntax-valid 78, build-succeeded 21
Fitness: max 0.9523809523809523(10), min 0.0(2), ave 0.47392290249433106
----------------------------------------------------------------

2019-07-16 17:39:14 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 17:39:17 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 17:39:17 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 17:39:17 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,8 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
+		if(l < 0 || r >= list.size() || l >= r)
 			return null;
-		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 17:39:18 [main] [INFO]  KGenProgMain - execution time: 38 seconds
