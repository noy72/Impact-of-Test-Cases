2019-07-16 18:23:47 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8777407420451301342
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 47
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 18:23:49 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:23:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 61, build-succeeded 7
Fitness: max 0.9523809523809523(5), min 0.0(1), ave 0.6870748299319728
----------------------------------------------------------------

2019-07-16 18:23:53 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:23:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 15
Fitness: max 0.9523809523809523(7), min 0.0(3), ave 0.4603174603174603
----------------------------------------------------------------

2019-07-16 18:23:56 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:24:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 19
Fitness: max 0.9523809523809523(11), min 0.0(3), ave 0.5639097744360901
----------------------------------------------------------------

2019-07-16 18:24:00 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:24:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 69, build-succeeded 15
Fitness: max 0.9523809523809523(6), min 0.0(3), ave 0.4
----------------------------------------------------------------

2019-07-16 18:24:03 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:24:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 108, syntax-valid 76, build-succeeded 17
Fitness: max 0.9523809523809523(6), min 0.0(4), ave 0.3557422969187675
----------------------------------------------------------------

2019-07-16 18:24:07 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:24:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 116, syntax-valid 82, build-succeeded 17
Fitness: max 0.9523809523809523(8), min 0.0(4), ave 0.4621848739495798
----------------------------------------------------------------

2019-07-16 18:24:11 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 18:24:14 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 128, syntax-valid 78, build-succeeded 21
Fitness: max 0.9523809523809523(7), min 0.0(5), ave 0.3378684807256236
----------------------------------------------------------------

2019-07-16 18:24:14 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 18:24:17 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 27 seconds
Variants: generated 138, syntax-valid 84, build-succeeded 23
Fitness: max 0.9523809523809523(12), min 0.0(6), ave 0.5424430641821946
----------------------------------------------------------------

2019-07-16 18:24:17 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 18:24:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 144, syntax-valid 83, build-succeeded 29
Fitness: max 0.9523809523809523(15), min 0.0(3), ave 0.5106732348111658
----------------------------------------------------------------

2019-07-16 18:24:20 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 18:24:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 144, syntax-valid 90, build-succeeded 29
Fitness: max 0.9523809523809523(15), min 0.0(6), ave 0.5336617405582922
----------------------------------------------------------------

2019-07-16 18:24:23 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 18:24:26 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:24:26 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,18 +8,13 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
-		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(i);
-			}
-		}
 		return sum;
 	}
 
2019-07-16 18:24:26 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int sum = 0;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 18:24:27 [main] [INFO]  KGenProgMain - execution time: 37 seconds
