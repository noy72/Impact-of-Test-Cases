2019-07-16 18:56:31 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6516593155773473935
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 80
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 18:56:34 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:56:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 10
Fitness: max 0.9523809523809523(7), min 0.0(2), ave 0.6714285714285714
----------------------------------------------------------------

2019-07-16 18:56:37 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:56:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 15
Fitness: max 0.9523809523809523(9), min 0.0(2), ave 0.584126984126984
----------------------------------------------------------------

2019-07-16 18:56:41 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:56:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 14
Fitness: max 0.9523809523809523(8), min 0.0(3), ave 0.5544217687074829
----------------------------------------------------------------

2019-07-16 18:56:44 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:56:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 10
Fitness: max 0.9523809523809523(5), min 0.0(3), ave 0.48571428571428565
----------------------------------------------------------------

2019-07-16 18:56:47 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:56:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 104, syntax-valid 70, build-succeeded 13
Fitness: max 0.9523809523809523(6), min 0.0(3), ave 0.45421245421245415
----------------------------------------------------------------

2019-07-16 18:56:50 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:56:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 74, build-succeeded 11
Fitness: max 0.9523809523809523(6), min 0.0(1), ave 0.5367965367965367
----------------------------------------------------------------

2019-07-16 18:56:52 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 18:56:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 120, syntax-valid 84, build-succeeded 24
Fitness: max 0.9523809523809523(11), min 0.0(4), ave 0.4583333333333333
----------------------------------------------------------------

2019-07-16 18:56:56 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 18:56:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 128, syntax-valid 87, build-succeeded 20
Fitness: max 0.9523809523809523(9), min 0.0(3), ave 0.4666666666666666
----------------------------------------------------------------

2019-07-16 18:56:59 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 18:57:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 140, syntax-valid 92, build-succeeded 32
Fitness: max 0.9523809523809523(14), min 0.0(2), ave 0.46577380952380953
----------------------------------------------------------------

2019-07-16 18:57:04 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 18:57:08 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 152, syntax-valid 82, build-succeeded 21
Fitness: max 0.9523809523809523(12), min 0.0(2), ave 0.5714285714285714
----------------------------------------------------------------

2019-07-16 18:57:08 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 18:57:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 154, syntax-valid 99, build-succeeded 30
Fitness: max 0.9523809523809523(23), min 0.0(4), ave 0.7476190476190475
----------------------------------------------------------------

2019-07-16 18:57:13 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 18:57:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 seconds
Variants: generated 156, syntax-valid 94, build-succeeded 31
Fitness: max 0.9523809523809523(25), min 0.0(3), ave 0.7849462365591398
----------------------------------------------------------------

2019-07-16 18:57:16 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 18:57:20 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:57:20 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,8 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		int res = 1;
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 18:57:21 [main] [INFO]  KGenProgMain - execution time: 47 seconds
