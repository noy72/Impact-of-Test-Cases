2019-07-16 18:53:10 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work4033916233907774607
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 76
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 18:53:12 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:53:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 61, build-succeeded 15
Fitness: max 0.9523809523809523(13), min 0.0(1), ave 0.8285714285714285
----------------------------------------------------------------

2019-07-16 18:53:16 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:53:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 11
Fitness: max 0.9523809523809523(5), min 0.0(3), ave 0.44588744588744583
----------------------------------------------------------------

2019-07-16 18:53:19 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:53:22 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:53:22 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 18:53:23 [main] [INFO]  KGenProgMain - execution time: 10 seconds
