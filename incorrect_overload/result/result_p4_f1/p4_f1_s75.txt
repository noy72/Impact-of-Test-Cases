2019-07-16 18:52:32 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5498641477304787352
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 75
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 18:52:35 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:52:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 11
Fitness: max 0.9523809523809523(7), min 0.0(1), ave 0.6190476190476191
----------------------------------------------------------------

2019-07-16 18:52:39 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:52:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 11
Fitness: max 0.9523809523809523(3), min 0.0(6), ave 0.2683982683982684
----------------------------------------------------------------

2019-07-16 18:52:43 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:52:47 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 9
Fitness: max 0.9523809523809523(4), min 0.0(1), ave 0.5343915343915344
----------------------------------------------------------------

2019-07-16 18:52:47 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:52:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 64, build-succeeded 10
Fitness: max 0.9523809523809523(1), min 0.0(4), ave 0.11904761904761904
----------------------------------------------------------------

2019-07-16 18:52:51 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:52:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 102, syntax-valid 71, build-succeeded 6
Fitness: max 0.9523809523809523(2), min 0.0(1), ave 0.3412698412698412
----------------------------------------------------------------

2019-07-16 18:52:54 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:52:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 102, syntax-valid 70, build-succeeded 15
Fitness: max 0.9523809523809523(4), min 0.0(3), ave 0.3333333333333333
----------------------------------------------------------------

2019-07-16 18:52:57 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 18:53:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 106, syntax-valid 68, build-succeeded 9
Fitness: max 0.9523809523809523(2), min 0.0(3), ave 0.32275132275132273
----------------------------------------------------------------

2019-07-16 18:53:00 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 18:53:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 116, syntax-valid 72, build-succeeded 18
Fitness: max 0.9523809523809523(7), min 0.0(2), ave 0.5291005291005291
----------------------------------------------------------------

2019-07-16 18:53:04 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 18:53:08 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:53:08 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 18:53:08 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -17,16 +17,14 @@
 	public int fact(int n) {
 		int res = 1;
 		for(int i = 1; i <= n; i++) {
-			res *= i;
 		}
 		return res;
 	}
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
+		if(l < 0 || r >= list.size() || l >= r)
 			return null;
-		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 18:53:08 [main] [INFO]  KGenProgMain - execution time: 33 seconds
