2019-07-16 18:06:14 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6556494220519240449
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 22
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 18:06:17 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 18:06:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 9
Fitness: max 0.9523809523809523(6), min 0.0(1), ave 0.708994708994709
----------------------------------------------------------------

2019-07-16 18:06:20 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 18:06:23 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 5
Fitness: max 0.9523809523809523(3), min 0.047619047619047616(1), ave 0.6666666666666666
----------------------------------------------------------------

2019-07-16 18:06:23 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 18:06:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 15
Fitness: max 0.9523809523809523(4), min 0.0(3), ave 0.3428571428571428
----------------------------------------------------------------

2019-07-16 18:06:26 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 18:06:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 14
Fitness: max 0.9523809523809523(3), min 0.0(4), ave 0.2857142857142857
----------------------------------------------------------------

2019-07-16 18:06:29 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 18:06:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 10
Fitness: max 0.9523809523809523(3), min 0.0(1), ave 0.4809523809523809
----------------------------------------------------------------

2019-07-16 18:06:33 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 18:06:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 102, syntax-valid 73, build-succeeded 19
Fitness: max 0.9523809523809523(7), min 0.0(4), ave 0.4962406015037594
----------------------------------------------------------------

2019-07-16 18:06:35 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 18:06:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 108, syntax-valid 72, build-succeeded 19
Fitness: max 0.9523809523809523(11), min 0.0(2), ave 0.5664160401002506
----------------------------------------------------------------

2019-07-16 18:06:38 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 18:06:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 122, syntax-valid 70, build-succeeded 22
Fitness: max 0.9523809523809523(8), min 0.0(4), ave 0.46969696969696967
----------------------------------------------------------------

2019-07-16 18:06:41 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 18:06:46 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 18:06:46 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,8 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		int res = 1;
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
@@ -15,11 +17,8 @@
 		}
 
 		int sum = 0;
-		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(i);
-			}
-		}
+		for(int i : subList)
+			y = sample.pow(a) % list.size();
 		return sum;
 	}
 
2019-07-16 18:06:46 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,10 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 18:06:46 [main] [INFO]  KGenProgMain - execution time: 29 seconds
