2019-07-17 05:00:56 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8330944222264888806
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 65
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 05:00:59 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 05:01:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 9
Fitness: max 0.5(6), min 0.0(2), ave 0.34444444444444444
----------------------------------------------------------------

2019-07-17 05:01:03 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 05:01:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 14
Fitness: max 0.5(5), min 0.0(3), ave 0.22142857142857145
----------------------------------------------------------------

2019-07-17 05:01:07 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 05:01:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 13
Fitness: max 0.5(6), min 0.0(2), ave 0.2692307692307692
----------------------------------------------------------------

2019-07-17 05:01:10 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 05:01:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 11
Fitness: max 0.5(3), min 0.0(1), ave 0.2
----------------------------------------------------------------

2019-07-17 05:01:13 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 05:01:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 11
Fitness: max 0.5(3), min 0.1(8), ave 0.20909090909090908
----------------------------------------------------------------

2019-07-17 05:01:16 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 05:01:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 108, syntax-valid 78, build-succeeded 18
Fitness: max 0.5(6), min 0.0(2), ave 0.2222222222222222
----------------------------------------------------------------

2019-07-17 05:01:19 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 05:01:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 120, syntax-valid 70, build-succeeded 14
Fitness: max 0.5(5), min 0.0(1), ave 0.2357142857142857
----------------------------------------------------------------

2019-07-17 05:01:22 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 05:01:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 120, syntax-valid 70, build-succeeded 15
Fitness: max 0.5(3), min 0.0(2), ave 0.16333333333333336
----------------------------------------------------------------

2019-07-17 05:01:24 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 05:01:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 138, syntax-valid 87, build-succeeded 23
Fitness: max 0.5(8), min 0.0(1), ave 0.23478260869565218
----------------------------------------------------------------

2019-07-17 05:01:28 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 05:01:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 150, syntax-valid 88, build-succeeded 31
Fitness: max 0.5(14), min 0.0(4), ave 0.267741935483871
----------------------------------------------------------------

2019-07-17 05:01:31 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 05:01:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 34 seconds
Variants: generated 148, syntax-valid 73, build-succeeded 13
Fitness: max 0.5(7), min 0.0(2), ave 0.3
----------------------------------------------------------------

2019-07-17 05:01:34 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 05:01:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 37 seconds
Variants: generated 136, syntax-valid 72, build-succeeded 21
Fitness: max 0.5(9), min 0.0(3), ave 0.25952380952380955
----------------------------------------------------------------

2019-07-17 05:01:36 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 05:01:39 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 05:01:39 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,13 +6,12 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-17 05:01:39 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,10 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
-			return null;
-		}
+		if(l < 0 || r >= list.size() || l >= r)
+			if (l < 0 || r >= list.size() || l >= r) {
+				return null;
+			}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-17 05:01:40 [main] [INFO]  KGenProgMain - execution time: 40 seconds
