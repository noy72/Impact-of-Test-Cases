2019-07-17 05:07:23 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work549816070532600724
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 74
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 05:07:25 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 05:07:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 11
Fitness: max 0.5(6), min 0.0(1), ave 0.3090909090909091
----------------------------------------------------------------

2019-07-17 05:07:28 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 05:07:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 10
Fitness: max 0.5(2), min 0.0(5), ave 0.13
----------------------------------------------------------------

2019-07-17 05:07:31 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 05:07:33 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 13
Fitness: max 0.5(5), min 0.0(4), ave 0.22307692307692306
----------------------------------------------------------------

2019-07-17 05:07:33 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 05:07:36 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 05:07:36 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-17 05:07:36 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		for (int i = 0; i < n; i++) {
+		}
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-17 05:07:36 [main] [INFO]  KGenProgMain - execution time: 11 seconds
