2019-07-17 05:10:49 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work1729010597329280100
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 80
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-17 05:10:52 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 05:10:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 62, build-succeeded 10
Fitness: max 0.5(7), min 0.0(2), ave 0.36
----------------------------------------------------------------

2019-07-17 05:10:54 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 05:10:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 16
Fitness: max 0.5(8), min 0.0(4), ave 0.275
----------------------------------------------------------------

2019-07-17 05:10:57 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 05:10:59 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 11
Fitness: max 0.5(5), min 0.1(6), ave 0.2818181818181818
----------------------------------------------------------------

2019-07-17 05:10:59 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 05:11:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 8
Fitness: max 0.5(3), min 0.0(3), ave 0.2125
----------------------------------------------------------------

2019-07-17 05:11:01 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 05:11:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 76, build-succeeded 18
Fitness: max 0.5(8), min 0.0(4), ave 0.25555555555555554
----------------------------------------------------------------

2019-07-17 05:11:04 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 05:11:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 102, syntax-valid 74, build-succeeded 18
Fitness: max 0.5(9), min 0.0(4), ave 0.2777777777777778
----------------------------------------------------------------

2019-07-17 05:11:06 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 05:11:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 17 seconds
Variants: generated 116, syntax-valid 91, build-succeeded 26
Fitness: max 0.5(12), min 0.0(4), ave 0.2692307692307692
----------------------------------------------------------------

2019-07-17 05:11:09 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 05:11:11 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 05:11:11 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,7 +7,9 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		int res = 1;
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-17 05:11:11 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -24,9 +24,8 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
+		if(l < 0 || r >= list.size() || l >= r)
 			return null;
-		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-17 05:11:12 [main] [INFO]  KGenProgMain - execution time: 19 seconds
