2019-07-16 20:04:06 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work2795729988638865580
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 29
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 20:04:09 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 20:04:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 7
Fitness: max 0.3333333333333333(1), min 0.0(4), ave 0.09523809523809523
----------------------------------------------------------------

2019-07-16 20:04:13 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 20:04:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 16
Fitness: max 0.3333333333333333(5), min 0.0(8), ave 0.13541666666666666
----------------------------------------------------------------

2019-07-16 20:04:16 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 20:04:19 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 63, build-succeeded 11
Fitness: max 0.3333333333333333(5), min 0.0(3), ave 0.19696969696969696
----------------------------------------------------------------

2019-07-16 20:04:19 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 20:04:22 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 102, syntax-valid 77, build-succeeded 7
Fitness: max 0.3333333333333333(4), min 0.0(3), ave 0.19047619047619047
----------------------------------------------------------------

2019-07-16 20:04:22 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 20:04:26 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 102, syntax-valid 70, build-succeeded 14
Fitness: max 0.3333333333333333(8), min 0.0(6), ave 0.19047619047619047
----------------------------------------------------------------

2019-07-16 20:04:26 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 20:04:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 108, syntax-valid 69, build-succeeded 10
Fitness: max 0.3333333333333333(7), min 0.0(2), ave 0.25
----------------------------------------------------------------

2019-07-16 20:04:28 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 20:04:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 22 seconds
Variants: generated 108, syntax-valid 72, build-succeeded 9
Fitness: max 0.3333333333333333(5), min 0.0(3), ave 0.2037037037037037
----------------------------------------------------------------

2019-07-16 20:04:31 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 20:04:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 25 seconds
Variants: generated 108, syntax-valid 77, build-succeeded 15
Fitness: max 0.8333333333333334(1), min 0.0(3), ave 0.2777777777777778
----------------------------------------------------------------

2019-07-16 20:04:35 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 20:04:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 128, syntax-valid 88, build-succeeded 22
Fitness: max 0.8333333333333334(2), min 0.0(8), ave 0.25
----------------------------------------------------------------

2019-07-16 20:04:38 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 20:04:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 32 seconds
Variants: generated 134, syntax-valid 93, build-succeeded 25
Fitness: max 0.3333333333333333(17), min 0.0(7), ave 0.2333333333333333
----------------------------------------------------------------

2019-07-16 20:04:41 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 20:04:44 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 148, syntax-valid 78, build-succeeded 24
Fitness: max 0.8333333333333334(3), min 0.0(2), ave 0.3611111111111111
----------------------------------------------------------------

2019-07-16 20:04:44 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 20:04:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 38 seconds
Variants: generated 174, syntax-valid 96, build-succeeded 36
Fitness: max 0.8333333333333334(3), min 0.0(3), ave 0.3333333333333333
----------------------------------------------------------------

2019-07-16 20:04:48 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 20:04:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 seconds
Variants: generated 172, syntax-valid 94, build-succeeded 25
Fitness: max 0.8333333333333334(2), min 0.0(2), ave 0.34
----------------------------------------------------------------

2019-07-16 20:04:51 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2019-07-16 20:04:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 seconds
Variants: generated 172, syntax-valid 88, build-succeeded 27
Fitness: max 0.8333333333333334(5), min 0.0(1), ave 0.4074074074074074
----------------------------------------------------------------

2019-07-16 20:04:54 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2019-07-16 20:04:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 48 seconds
Variants: generated 172, syntax-valid 86, build-succeeded 22
Fitness: max 0.8333333333333334(5), min 0.0(3), ave 0.3939393939393939
----------------------------------------------------------------

2019-07-16 20:04:57 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2019-07-16 20:05:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 52 seconds
Variants: generated 178, syntax-valid 94, build-succeeded 29
Fitness: max 0.8333333333333334(5), min 0.0(2), ave 0.3850574712643678
----------------------------------------------------------------

2019-07-16 20:05:01 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2019-07-16 20:05:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 55 seconds
Variants: generated 178, syntax-valid 79, build-succeeded 28
Fitness: max 0.8333333333333334(6), min 0.0(4), ave 0.38095238095238093
----------------------------------------------------------------

2019-07-16 20:05:04 [main] [INFO]  KGenProgMain - entered the era of 18th generation.
2019-07-16 20:05:08 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 20:05:08 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 20:05:08 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,8 +8,11 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		Class2 sample = new Class2();
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			int sum = 0;
+			ArrayList<Integer> list=new ArrayList<>();
 		}
 		return res;
 	}
2019-07-16 20:05:09 [main] [INFO]  KGenProgMain - execution time: 1 minutes 0 seconds
