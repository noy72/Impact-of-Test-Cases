2019-07-16 20:22:34 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work3374588693503780932
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 46
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 20:22:36 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 20:22:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 57, build-succeeded 6
Fitness: max 0.3333333333333333(1), min 0.0(2), ave 0.13888888888888887
----------------------------------------------------------------

2019-07-16 20:22:40 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 20:22:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 6
Fitness: max 0.3333333333333333(2), min 0.0(2), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 20:22:42 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 20:22:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 8
Fitness: max 0.8333333333333334(1), min 0.0(3), ave 0.2708333333333333
----------------------------------------------------------------

2019-07-16 20:22:45 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 20:22:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 7
Fitness: max 0.8333333333333334(2), min 0.0(2), ave 0.38095238095238093
----------------------------------------------------------------

2019-07-16 20:22:48 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 20:22:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 104, syntax-valid 76, build-succeeded 14
Fitness: max 0.8333333333333334(4), min 0.0(4), ave 0.36904761904761907
----------------------------------------------------------------

2019-07-16 20:22:50 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 20:22:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 108, syntax-valid 75, build-succeeded 18
Fitness: max 0.8333333333333334(2), min 0.0(6), ave 0.2314814814814815
----------------------------------------------------------------

2019-07-16 20:22:52 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 20:22:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 124, syntax-valid 80, build-succeeded 16
Fitness: max 0.8333333333333334(3), min 0.0(5), ave 0.3020833333333333
----------------------------------------------------------------

2019-07-16 20:22:56 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 20:22:59 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 20:22:59 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,7 +6,7 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 20:22:59 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,8 +8,10 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int x, y;
 		for(int i = 0; i < n; i++) {
 			res *= a;
+			ArrayList<Integer> list=new ArrayList<>();
 		}
 		return res;
 	}
2019-07-16 20:22:59 [main] [INFO]  KGenProgMain - execution time: 23 seconds
