2019-07-16 20:53:24 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5024861915879424816
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 75
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 20:53:27 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 20:53:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 55, build-succeeded 11
Fitness: max 0.3333333333333333(3), min 0.0(1), ave 0.19696969696969696
----------------------------------------------------------------

2019-07-16 20:53:30 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 20:53:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 11
Fitness: max 0.3333333333333333(5), min 0.0(4), ave 0.18181818181818182
----------------------------------------------------------------

2019-07-16 20:53:34 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 20:53:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 8
Fitness: max 0.3333333333333333(4), min 0.0(2), ave 0.20833333333333331
----------------------------------------------------------------

2019-07-16 20:53:37 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 20:53:40 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 10
Fitness: max 0.3333333333333333(3), min 0.0(5), ave 0.13333333333333333
----------------------------------------------------------------

2019-07-16 20:53:40 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 20:53:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 7
Fitness: max 0.3333333333333333(4), min 0.16666666666666666(3), ave 0.2619047619047619
----------------------------------------------------------------

2019-07-16 20:53:43 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 20:53:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 7
Fitness: max 0.3333333333333333(3), min 0.0(3), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 20:53:45 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 20:53:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 100, syntax-valid 65, build-succeeded 12
Fitness: max 0.3333333333333333(6), min 0.0(4), ave 0.19444444444444442
----------------------------------------------------------------

2019-07-16 20:53:48 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 20:53:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 102, syntax-valid 72, build-succeeded 12
Fitness: max 0.3333333333333333(7), min 0.0(2), ave 0.23611111111111108
----------------------------------------------------------------

2019-07-16 20:53:51 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 20:53:54 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 116, syntax-valid 69, build-succeeded 22
Fitness: max 0.3333333333333333(12), min 0.0(5), ave 0.2196969696969697
----------------------------------------------------------------

2019-07-16 20:53:54 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 20:53:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 30 seconds
Variants: generated 126, syntax-valid 97, build-succeeded 29
Fitness: max 0.3333333333333333(22), min 0.0(1), ave 0.28735632183908044
----------------------------------------------------------------

2019-07-16 20:53:57 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 20:54:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 33 seconds
Variants: generated 148, syntax-valid 88, build-succeeded 23
Fitness: max 0.3333333333333333(15), min 0.0(5), ave 0.2391304347826087
----------------------------------------------------------------

2019-07-16 20:54:00 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 20:54:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 36 seconds
Variants: generated 162, syntax-valid 101, build-succeeded 28
Fitness: max 0.3333333333333333(20), min 0.0(4), ave 0.2619047619047619
----------------------------------------------------------------

2019-07-16 20:54:04 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 20:54:06 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 39 seconds
Variants: generated 174, syntax-valid 91, build-succeeded 31
Fitness: max 0.3333333333333333(25), min 0.0(4), ave 0.27956989247311825
----------------------------------------------------------------

2019-07-16 20:54:06 [main] [INFO]  KGenProgMain - entered the era of 14th generation.
2019-07-16 20:54:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 42 seconds
Variants: generated 174, syntax-valid 82, build-succeeded 28
Fitness: max 0.3333333333333333(25), min 0.0(3), ave 0.29761904761904756
----------------------------------------------------------------

2019-07-16 20:54:09 [main] [INFO]  KGenProgMain - entered the era of 15th generation.
2019-07-16 20:54:12 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 45 seconds
Variants: generated 186, syntax-valid 92, build-succeeded 36
Fitness: max 0.8333333333333334(1), min 0.0(3), ave 0.31481481481481477
----------------------------------------------------------------

2019-07-16 20:54:12 [main] [INFO]  KGenProgMain - entered the era of 16th generation.
2019-07-16 20:54:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 47 seconds
Variants: generated 160, syntax-valid 89, build-succeeded 27
Fitness: max 0.3333333333333333(22), min 0.0(2), ave 0.29012345679012347
----------------------------------------------------------------

2019-07-16 20:54:15 [main] [INFO]  KGenProgMain - entered the era of 17th generation.
2019-07-16 20:54:17 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 20:54:17 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,9 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
+		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 20:54:17 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -29,9 +29,8 @@
 		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
-		for(; l < r; l++) {
+		for(; l < r; l++)
 			res.add(list.get(l));
-		}
 		return res;
 	}
 }
2019-07-16 20:54:18 [main] [INFO]  KGenProgMain - execution time: 51 seconds
