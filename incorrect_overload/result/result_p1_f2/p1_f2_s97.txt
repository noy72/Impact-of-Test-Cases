2019-07-16 21:22:25 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6645076265632760486
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 97
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 21:22:27 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 21:22:29 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 51, build-succeeded 11
Fitness: max 0.3333333333333333(1), min 0.0(4), ave 0.1212121212121212
----------------------------------------------------------------

2019-07-16 21:22:29 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 21:22:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 4 seconds
Variants: generated 100, syntax-valid 78, build-succeeded 10
Fitness: max 0.3333333333333333(6), min 0.0(2), ave 0.2333333333333333
----------------------------------------------------------------

2019-07-16 21:22:32 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 21:22:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 9
Fitness: max 0.3333333333333333(3), min 0.0(3), ave 0.16666666666666666
----------------------------------------------------------------

2019-07-16 21:22:34 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 21:22:37 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 8
Fitness: max 0.3333333333333333(5), min 0.0(3), ave 0.20833333333333331
----------------------------------------------------------------

2019-07-16 21:22:37 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 21:22:39 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 21:22:39 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,7 +6,7 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
2019-07-16 21:22:39 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,6 +8,7 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
+		int sum = 0;
 		for(int i = 0; i < n; i++) {
 			res *= a;
 		}
2019-07-16 21:22:39 [main] [INFO]  KGenProgMain - execution time: 12 seconds
