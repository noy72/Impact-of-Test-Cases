2019-07-16 20:51:45 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7404478822011440542
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 70
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 20:51:47 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 20:51:50 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 56, build-succeeded 9
Fitness: max 0.3333333333333333(1), min 0.0(2), ave 0.14814814814814814
----------------------------------------------------------------

2019-07-16 20:51:50 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 20:51:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 77, build-succeeded 10
Fitness: max 0.3333333333333333(7), min 0.16666666666666666(3), ave 0.2833333333333333
----------------------------------------------------------------

2019-07-16 20:51:53 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 20:51:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 6
Fitness: max 0.3333333333333333(3), min 0.0(1), ave 0.2222222222222222
----------------------------------------------------------------

2019-07-16 20:51:56 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 20:51:58 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 11 seconds
Variants: generated 100, syntax-valid 74, build-succeeded 13
Fitness: max 0.3333333333333333(7), min 0.0(3), ave 0.21794871794871792
----------------------------------------------------------------

2019-07-16 20:51:58 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 20:52:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 9
Fitness: max 0.3333333333333333(5), min 0.0(1), ave 0.24074074074074073
----------------------------------------------------------------

2019-07-16 20:52:01 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 20:52:03 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 104, syntax-valid 77, build-succeeded 14
Fitness: max 0.3333333333333333(9), min 0.0(3), ave 0.23809523809523808
----------------------------------------------------------------

2019-07-16 20:52:03 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 20:52:05 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 108, syntax-valid 74, build-succeeded 11
Fitness: max 0.8333333333333334(1), min 0.0(1), ave 0.30303030303030304
----------------------------------------------------------------

2019-07-16 20:52:05 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 20:52:08 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 20:52:08 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -7,7 +7,10 @@
 
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
+		y = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
+		int res = 1;
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 20:52:09 [main] [INFO]  KGenProgMain - execution time: 21 seconds
