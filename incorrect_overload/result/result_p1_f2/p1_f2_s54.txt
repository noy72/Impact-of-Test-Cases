2019-07-16 20:32:18 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work5005040023535298123
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 54
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 20:32:20 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 20:32:24 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 67, build-succeeded 13
Fitness: max 0.3333333333333333(1), min 0.0(2), ave 0.15384615384615385
----------------------------------------------------------------

2019-07-16 20:32:24 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 20:32:27 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 70, build-succeeded 16
Fitness: max 0.8333333333333334(1), min 0.0(6), ave 0.15625
----------------------------------------------------------------

2019-07-16 20:32:27 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 20:32:31 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 77, build-succeeded 16
Fitness: max 0.8333333333333334(1), min 0.0(6), ave 0.1875
----------------------------------------------------------------

2019-07-16 20:32:31 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 20:32:34 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 72, build-succeeded 11
Fitness: max 0.3333333333333333(3), min 0.0(4), ave 0.1515151515151515
----------------------------------------------------------------

2019-07-16 20:32:34 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 20:32:36 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 102, syntax-valid 72, build-succeeded 11
Fitness: max 0.3333333333333333(6), min 0.0(2), ave 0.22727272727272727
----------------------------------------------------------------

2019-07-16 20:32:36 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 20:32:39 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 110, syntax-valid 73, build-succeeded 11
Fitness: max 0.3333333333333333(6), min 0.0(4), ave 0.19696969696969696
----------------------------------------------------------------

2019-07-16 20:32:39 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 20:32:42 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 116, syntax-valid 71, build-succeeded 13
Fitness: max 0.3333333333333333(6), min 0.0(3), ave 0.20512820512820512
----------------------------------------------------------------

2019-07-16 20:32:42 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 20:32:45 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 24 seconds
Variants: generated 142, syntax-valid 96, build-succeeded 26
Fitness: max 0.8333333333333334(1), min 0.0(8), ave 0.1987179487179487
----------------------------------------------------------------

2019-07-16 20:32:45 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 20:32:49 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 146, syntax-valid 96, build-succeeded 36
Fitness: max 0.8333333333333334(3), min 0.0(4), ave 0.3009259259259259
----------------------------------------------------------------

2019-07-16 20:32:49 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 20:32:52 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 154, syntax-valid 86, build-succeeded 24
Fitness: max 0.3333333333333333(19), min 0.0(2), ave 0.2847222222222222
----------------------------------------------------------------

2019-07-16 20:32:52 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 20:32:56 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 35 seconds
Variants: generated 140, syntax-valid 87, build-succeeded 21
Fitness: max 0.8333333333333334(2), min 0.16666666666666666(1), ave 0.373015873015873
----------------------------------------------------------------

2019-07-16 20:32:56 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 20:33:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 40 seconds
Variants: generated 180, syntax-valid 98, build-succeeded 32
Fitness: max 0.8333333333333334(2), min 0.16666666666666666(2), ave 0.359375
----------------------------------------------------------------

2019-07-16 20:33:01 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 20:33:04 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 20:33:04 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -6,13 +6,12 @@
 		Class2 sample = new Class2();
 
 		int x, y;
-		x = sample.pow(a, n) % list.size(); // bug here
+		x = sample.pow(a) % list.size();
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
-		if(subList == null) {
+		if(subList == null)
 			return -1;
-		}
 
 		int sum = 0;
 		for(int i : subList) {
2019-07-16 20:33:05 [main] [INFO]  KGenProgMain - execution time: 44 seconds
