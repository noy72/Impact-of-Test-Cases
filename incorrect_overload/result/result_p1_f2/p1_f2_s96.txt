2019-07-16 21:21:50 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work8721761113428360692
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 96
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_overload
================================================================
2019-07-16 21:21:52 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 21:21:55 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 2 seconds
Variants: generated 100, syntax-valid 52, build-succeeded 7
Fitness: max 0.3333333333333333(1), min 0.16666666666666666(6), ave 0.19047619047619047
----------------------------------------------------------------

2019-07-16 21:21:55 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 21:21:57 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 73, build-succeeded 7
Fitness: max 0.3333333333333333(2), min 0.0(1), ave 0.19047619047619047
----------------------------------------------------------------

2019-07-16 21:21:57 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 21:22:00 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 7 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 12
Fitness: max 0.3333333333333333(4), min 0.0(5), ave 0.15277777777777776
----------------------------------------------------------------

2019-07-16 21:22:00 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 21:22:02 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 75, build-succeeded 12
Fitness: max 0.3333333333333333(3), min 0.0(4), ave 0.15277777777777776
----------------------------------------------------------------

2019-07-16 21:22:02 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 21:22:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 102, syntax-valid 78, build-succeeded 9
Fitness: max 0.3333333333333333(4), min 0.0(1), ave 0.2222222222222222
----------------------------------------------------------------

2019-07-16 21:22:04 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 21:22:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 14 seconds
Variants: generated 104, syntax-valid 74, build-succeeded 15
Fitness: max 0.3333333333333333(6), min 0.0(5), ave 0.17777777777777776
----------------------------------------------------------------

2019-07-16 21:22:07 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 21:22:09 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 112, syntax-valid 74, build-succeeded 13
Fitness: max 0.3333333333333333(4), min 0.0(3), ave 0.17948717948717946
----------------------------------------------------------------

2019-07-16 21:22:09 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 21:22:11 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 122, syntax-valid 71, build-succeeded 11
Fitness: max 0.3333333333333333(5), min 0.0(2), ave 0.2121212121212121
----------------------------------------------------------------

2019-07-16 21:22:11 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 21:22:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 122, syntax-valid 75, build-succeeded 21
Fitness: max 0.3333333333333333(11), min 0.0(7), ave 0.19841269841269837
----------------------------------------------------------------

2019-07-16 21:22:13 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-16 21:22:15 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 140, syntax-valid 76, build-succeeded 22
Fitness: max 0.3333333333333333(14), min 0.0(3), ave 0.25
----------------------------------------------------------------

2019-07-16 21:22:15 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-16 21:22:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 148, syntax-valid 92, build-succeeded 29
Fitness: max 0.3333333333333333(19), min 0.0(1), ave 0.27011494252873564
----------------------------------------------------------------

2019-07-16 21:22:18 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-16 21:22:20 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 28 seconds
Variants: generated 152, syntax-valid 91, build-succeeded 23
Fitness: max 0.3333333333333333(17), min 0.0(3), ave 0.2681159420289855
----------------------------------------------------------------

2019-07-16 21:22:20 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-16 21:22:23 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 21:22:23 [main] [INFO]  Patch - 
--- incorrect_overload.Class1
+++ incorrect_overload.Class1
@@ -8,6 +8,7 @@
 		int x, y;
 		x = sample.pow(a, n) % list.size(); // bug here
 		y = sample.pow(a, n) % list.size();
+		x = sample.pow(a) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
 		if(subList == null) {
2019-07-16 21:22:23 [main] [INFO]  Patch - 
--- incorrect_overload.Class2
+++ incorrect_overload.Class2
@@ -8,9 +8,8 @@
 
 	public int pow(int a, int n) {
 		int res = 1;
-		for(int i = 0; i < n; i++) {
+		for(int i = 0; i < n; i++)
 			res *= a;
-		}
 		return res;
 	}
 
2019-07-16 21:22:24 [main] [INFO]  KGenProgMain - execution time: 32 seconds
