2019-07-17 02:54:20 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work6707610587337461714
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 40
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_parameter
================================================================
2019-07-17 02:54:22 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-17 02:54:25 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 59, build-succeeded 9
Fitness: max 0.3333333333333333(1), min 0.047619047619047616(8), ave 0.07936507936507936
----------------------------------------------------------------

2019-07-17 02:54:25 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-17 02:54:28 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 5 seconds
Variants: generated 100, syntax-valid 69, build-succeeded 17
Fitness: max 0.3333333333333333(1), min 0.0(1), ave 0.06162464985994397
----------------------------------------------------------------

2019-07-17 02:54:28 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-17 02:54:30 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 8 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 8
Fitness: max 0.09523809523809523(1), min 0.047619047619047616(7), ave 0.05357142857142857
----------------------------------------------------------------

2019-07-17 02:54:30 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-17 02:54:32 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 10 seconds
Variants: generated 100, syntax-valid 66, build-succeeded 17
Fitness: max 0.3333333333333333(2), min 0.0(3), ave 0.07563025210084033
----------------------------------------------------------------

2019-07-17 02:54:32 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-17 02:54:35 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 13 seconds
Variants: generated 100, syntax-valid 77, build-succeeded 23
Fitness: max 0.047619047619047616(17), min 0.0(6), ave 0.035196687370600416
----------------------------------------------------------------

2019-07-17 02:54:35 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-17 02:54:38 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 16 seconds
Variants: generated 114, syntax-valid 81, build-succeeded 21
Fitness: max 0.09523809523809523(2), min 0.0(7), ave 0.036281179138321996
----------------------------------------------------------------

2019-07-17 02:54:38 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-17 02:54:41 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 19 seconds
Variants: generated 130, syntax-valid 95, build-succeeded 32
Fitness: max 0.09523809523809523(2), min 0.0(10), ave 0.03571428571428571
----------------------------------------------------------------

2019-07-17 02:54:41 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-17 02:54:43 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 21 seconds
Variants: generated 124, syntax-valid 82, build-succeeded 20
Fitness: max 0.38095238095238093(1), min 0.0(2), ave 0.06190476190476191
----------------------------------------------------------------

2019-07-17 02:54:43 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-17 02:54:46 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 126, syntax-valid 85, build-succeeded 24
Fitness: max 0.09523809523809523(3), min 0.0(1), ave 0.05158730158730159
----------------------------------------------------------------

2019-07-17 02:54:46 [main] [INFO]  KGenProgMain - entered the era of 10th generation.
2019-07-17 02:54:48 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 26 seconds
Variants: generated 136, syntax-valid 82, build-succeeded 24
Fitness: max 0.09523809523809523(4), min 0.0(1), ave 0.05357142857142857
----------------------------------------------------------------

2019-07-17 02:54:48 [main] [INFO]  KGenProgMain - entered the era of 11th generation.
2019-07-17 02:54:51 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 29 seconds
Variants: generated 142, syntax-valid 84, build-succeeded 26
Fitness: max 0.3333333333333333(1), min 0.0(3), ave 0.06043956043956044
----------------------------------------------------------------

2019-07-17 02:54:51 [main] [INFO]  KGenProgMain - entered the era of 12th generation.
2019-07-17 02:54:53 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 31 seconds
Variants: generated 124, syntax-valid 80, build-succeeded 15
Fitness: max 0.09523809523809523(2), min 0.0(2), ave 0.04761904761904761
----------------------------------------------------------------

2019-07-17 02:54:53 [main] [INFO]  KGenProgMain - entered the era of 13th generation.
2019-07-17 02:54:55 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-17 02:54:55 [main] [INFO]  Patch - 
--- incorrect_parameter.Class1
+++ incorrect_parameter.Class1
@@ -7,6 +7,9 @@
 
 		int x, y;
 		x = sample.pow(a) % list.size();
+		if (list == null) {
+			return -1;
+		}
 		y = sample.pow(a, n) % list.size();
 
 		ArrayList<Integer> subList = sample.getSubList(list, x, y);
@@ -16,9 +19,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(a); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-17 02:54:56 [main] [INFO]  KGenProgMain - execution time: 33 seconds
