2019-07-16 13:44:55 [main] [INFO]  KGenProgMain - 
==================== kGenProg Configuration ====================
targetProject = .
executionTests = []
workingDir = /var/folders/fb/qqrpbwjd7cg3mc3d5hghr7k40000gn/T/kgenprog-work7348228158543310174
outDir = kgenprog-out
mutationGeneratingCount = 100
crossoverGeneratingCount = 100
headcount = 100
maxGeneration = 100
timeLimit = PT3M
testTimeLimit = PT30S
requiredSolutionsCount = 1
logLevel = INFO
randomSeed = 47
scope = PACKAGE
needNotOutput = false
currentDirectory = /Users/noy/Dropbox/研究/APRとテストケースの関係/2019study/src2/incorrect_parameter
================================================================
2019-07-16 13:44:57 [main] [INFO]  KGenProgMain - entered the era of 1st generation.
2019-07-16 13:45:01 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 3 seconds
Variants: generated 100, syntax-valid 60, build-succeeded 14
Fitness: max 0.5(13), min 0.0(1), ave 0.4642857142857143
----------------------------------------------------------------

2019-07-16 13:45:01 [main] [INFO]  KGenProgMain - entered the era of 2nd generation.
2019-07-16 13:45:04 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 6 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 16
Fitness: max 0.5(12), min 0.0(4), ave 0.375
----------------------------------------------------------------

2019-07-16 13:45:04 [main] [INFO]  KGenProgMain - entered the era of 3rd generation.
2019-07-16 13:45:07 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 9 seconds
Variants: generated 100, syntax-valid 68, build-succeeded 15
Fitness: max 0.5(15), min 0.5(15), ave 0.5
----------------------------------------------------------------

2019-07-16 13:45:07 [main] [INFO]  KGenProgMain - entered the era of 4th generation.
2019-07-16 13:45:10 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 12 seconds
Variants: generated 100, syntax-valid 71, build-succeeded 19
Fitness: max 0.5(16), min 0.0(3), ave 0.42105263157894735
----------------------------------------------------------------

2019-07-16 13:45:10 [main] [INFO]  KGenProgMain - entered the era of 5th generation.
2019-07-16 13:45:13 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 15 seconds
Variants: generated 112, syntax-valid 70, build-succeeded 14
Fitness: max 0.5(10), min 0.0(4), ave 0.35714285714285715
----------------------------------------------------------------

2019-07-16 13:45:13 [main] [INFO]  KGenProgMain - entered the era of 6th generation.
2019-07-16 13:45:16 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 18 seconds
Variants: generated 110, syntax-valid 71, build-succeeded 12
Fitness: max 0.5(10), min 0.0(2), ave 0.4166666666666667
----------------------------------------------------------------

2019-07-16 13:45:16 [main] [INFO]  KGenProgMain - entered the era of 7th generation.
2019-07-16 13:45:18 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 20 seconds
Variants: generated 118, syntax-valid 68, build-succeeded 14
Fitness: max 0.5(11), min 0.0(3), ave 0.39285714285714285
----------------------------------------------------------------

2019-07-16 13:45:18 [main] [INFO]  KGenProgMain - entered the era of 8th generation.
2019-07-16 13:45:21 [main] [INFO]  KGenProgMain - 
----------------------------------------------------------------
Elapsed time: 23 seconds
Variants: generated 134, syntax-valid 85, build-succeeded 26
Fitness: max 0.5(16), min 0.0(10), ave 0.3076923076923077
----------------------------------------------------------------

2019-07-16 13:45:21 [main] [INFO]  KGenProgMain - entered the era of 9th generation.
2019-07-16 13:45:23 [main] [INFO]  KGenProgMain - found enough solutions.
2019-07-16 13:45:23 [main] [INFO]  Patch - 
--- incorrect_parameter.Class1
+++ incorrect_parameter.Class1
@@ -16,9 +16,8 @@
 
 		int sum = 0;
 		for(int i : subList) {
-			if(i >= l && i <= h) {
-				sum += sample.fact(a); // bug here
-			}
+			if(i >= l && i <= h)
+				sum += sample.fact(i);
 		}
 		return sum;
 	}
2019-07-16 13:45:23 [main] [INFO]  Patch - 
--- incorrect_parameter.Class2
+++ incorrect_parameter.Class2
@@ -24,9 +24,8 @@
 
 
 	public ArrayList<Integer> getSubList(ArrayList<Integer> list, int l, int r){
-		if(l < 0 || r >= list.size() || l >= r) {
+		if(l < 0 || r >= list.size() || l >= r)
 			return null;
-		}
 
 		ArrayList<Integer> res = new ArrayList<Integer>();
 		for(; l < r; l++) {
2019-07-16 13:45:24 [main] [INFO]  KGenProgMain - execution time: 26 seconds
